:: Widgets [widget]

<<widget "toggledebug">>
	<<if $debug>>
		<<set $debug to 1>>
	<<else>>
		<<set $debug to 0>>
	<</if>>
<</widget>>

/* min, current, max, rightMeter */
<<widget "statbar">>
	<div @class="(_args[3] is true ? 'rightMeter' : 'meter')">
		<<if _args[1] is 0>>
		<<else>>
			<<set _percent to Math.floor((_args[1]/_args[2])*100)>>
			<<set _minPercent to Math.clamp(Math.floor((_args[0]/_args[2])*100), 0, _percent)>>
			<<set _pin to Math.clamp(Math.floor((_args[4]/_args[2])*100), 0, _args[2])>>
			<<switch Math.floor(_percent/10)>>
				<<case 8 9>><<set _statColor to "pinkbar">>
				<<case 6 7>><<set _statColor to "purplebar">>
				<<case 4 5>><<set _statColor to "bluebar">>
				<<case 2 3>><<set _statColor to "lbluebar">>
				<<case 0 1>><<set _statColor to "tealbar">>
				<<default>><<set _statColor to "redbar">>
			<</switch>>
			<div @class="_statColor" @style="'width:' + _percent + '%'"></div>
			<<if _minPercent>>
				<div @class="_statColor + ' meterMin'" @style="'width:' + _minPercent + '%'"></div>
			<<elseif _pin>>
				<div class="meterPin" @style="'width:' + _pin + '%'"></div>
			<</if>>
		<</if>>
	</div>
<</widget>>

<<widget "statbarinverted">>
	<<set _now to _args[0]>><<set _max to _args[1]>>
	<div @class="(_args[2] is true ? 'rightMeter' : 'meter')">
		<<if _args[0] is 0>>
		<<else>>
			<<set _percent to Math.floor((_args[0]/_args[1])*100)>>
			<<switch Math.floor(_percent/10)>>
				<<case 8 9>><<set _statColor to "tealbar">>
				<<case 6 7>><<set _statColor to "lbluebar">>
				<<case 4 5>><<set _statColor to "bluebar">>
				<<case 2 3>><<set _statColor to "purplebar">>
				<<case 0 1>><<set _statColor to "pinkbar">>
				<<default>><<set _statColor to "greenbar">>
			<</switch>>
				<div @class="_statColor" @style="'width:' + _percent + '%'"></div>
		<</if>>
	</div>
<</widget>>

<<widget "wateraction">>
	<<if currentSkillValue('swimmingskill') lt 100>>
		<<pass 18 sec>>
		<<set $oxygen -= 180>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 18>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 200>>
		<<pass 15 sec>>
		<<set $oxygen -= 150>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 15>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 300>>
		<<pass 12 sec>>
		<<set $oxygen -= 120>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 12>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 400>>
		<<pass 10 sec>>
		<<set $oxygen -= 100>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 10>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 500>>
		<<pass 8 sec>>
		<<set $oxygen -= 80>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 8>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 600>>
		<<pass 8 sec>>
		<<set $oxygen -= 80>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 8>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 700>>
		<<pass 7 sec>>
		<<set $oxygen -= 70>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 7>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 800>>
		<<pass 7 sec>>
		<<set $oxygen -= 70>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 7>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 900>>
		<<pass 6 sec>>
		<<set $oxygen -= 60>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 6>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 1000>>
		<<pass 6 sec>>
		<<set $oxygen -= 60>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 6>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 1100>>
		<<pass 5 sec>>
		<<set $oxygen -= 50>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 5>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<elseif currentSkillValue('swimmingskill') lt 1200>>
		<<pass 4 sec>>
		<<set $oxygen -= 40>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 4>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<<else>>
		<<pass 3 sec>>
		<<set $oxygen -= 30>>
		<<if $lake_ice_broken gte 1>>
			<<if random(1, 120) lte 3>>
				<<unset $lake_ice_broken>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "underwater">>
	<<water>><<set $underwater to 1>><<set $underwatercheck to 1>>
	<<if $combat isnot 1>>
		<<if $oxygen lt 0 and $nooxygen is 1>>
			<<set $stress += 1000>>
		<<elseif $oxygen lt 0 and $nooxygen isnot 1>>
			<<set $nooxygen to 1>>
		<<else>>
			<<set $nooxygen to 0>>
		<</if>>
		<span class="lblue">공기:</span>
		<<if $oxygen lt 0>>
			<span class="red">숨을 쉴 수 없다! 숨을 쉬지 못하게 된다면 스트레스가 상승하고 곧 정신을 잃게 될 것이다.</span>
		<</if>>
		<<oxygencaption>>
		<<if $underwaterintro isnot 1 and $combat isnot 1 and !$possessed>>
			<<set $underwaterintro to 1>>
			<i>언제까지고 숨을 참을 수는 없다. 수영 스킬이 높을수록 행동마다 시간과 공기를 더 적게 소비할 것이다.</i>
			<br><br>
		<</if>>
	<</if>>
<</widget>>

<<widget "oxygenrefresh">>
	<<set $oxygen to $oxygenmax>>
<</widget>>

<<widget "oxygen">>
	<<if _args[0]>>
		<<set $oxygen += _args[0]>>
	<</if>>
	<<if _args[0] lt 0>>
		<<set _strangle to 1>>
	<</if>>
	<<set $oxygen = Math.clamp($oxygen, 0, $oxygenmax)>>
<</widget>>

<<widget "virginitylosttext">>
	<<if $templePromised is _args[0]>>
		<span class="lblue">그럼에도 불구하고 당신은 순결하게 남아있다.</span>
	<<else>>
		<span class="red">영원히 당신의 순결을 빼앗겨 버린다.</span>
	<</if>>
<</widget>>

<<widget "neutral">> <!-- This widget's names ('neutral') is awful. Maybe 'molest' might better describe its use? -->
	<!-- args[1] now modifies the arousal applied to the PC -->
	<!-- Consult the 'arousal' widget to see how -->
	<<if _args[0] and (typeof _args[0]) is "number">>

		<<if $consensual isnot 1>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set $_stress_multiplier to 10>>
			<</if>>
			<<stress _args[0] $_stress_multiplier>>
			<<combattrauma _args[0]>>
		<</if>>

		<<set _arousal to 20 * _args[0]>>
		<<if _args[1] and _args[2] and (typeof _args[1]) is "string" and (typeof _args[2]) is "number">>
			<<arousal _arousal _args[1]>>
			<<enemyarousal _args[0] _args[2]>>
		<<elseif _args[1] and (typeof _args[1]) is "string">>
			<<arousal _arousal _args[1]>>
			<<enemyarousal _args[0]>>
		<<elseif _args[1] and (typeof _args[1]) is "number">>
			<<arousal _arousal>>
			<<enemyarousal _args[0] _args[1]>>
		<</if>>
	<</if>>
<</widget>>

<<widget "neutralbreast">>
	<<neutral _args[0] "breasts">>
<</widget>>

<<widget "neutralgenitals">>
	<<neutral _args[0] "genitals">>
<</widget>>

<<widget "enemyarousal">>
	<<set $enemyarousal += _args[0]>>
<</widget>>

<<widget "sex">>
	<!-- args[1] - indicates target: "genitals" if penile or vaginal, "anus" if anal, "mouth" if oral -->

	<!-- Comment Akoz: args[2] was used at some places to show double penetration and at others -->
	<!-- to pass which enemy NPC is doing the fucking. I'd leave it to mean the later, but -->
	<!-- I didn't want to make a decision about a system I'm not working on. -->
	<!-- So I chose to leave args[2] unused -->

	<!-- Comment Purity: args[2] is now used to check which NPC is causing it. -->
	<!-- For double penetration, the widget is now called twice. Once for each NPC. -->
	<<if _args[0] and (typeof _args[0]) is "number">>
		<<if $consensual isnot 1>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set $_stress_multiplier to 10>>
			<</if>>
			<<stress _args[0] $_stress_multiplier>>
			<<combattrauma _args[0]>>
		<<else>>
			<<stress _args[0] -10>>
		<</if>>
		<<set _arousal to 20 * _args[0]>>
		<<set _enemyarousal to 2 * _args[0]>>
		<<if _args[1] is undefined>>
			<<error {
				message : `Expected a second parameter, but none was provided.`,
				source : "Called from " + Utils.GetStack()
			}>>
		<<elseif _args[2] and (typeof _args[2]) is "number">>
			<<if wearingCondom(_args[2]) and ["genital","genitals","anal"].includes(_args[1])>>
				<<switch $NPCList[_args[2]].condom.type>>
					<<case "plain">>
						<<set _arousal to Math.floor(_arousal * 0.9)>>
						<<set _enemyarousal to Math.floor(_enemyarousal * 0.9)>>
					<<default>>
				<</switch>>
			<</if>>
			<<if wearingCondom("player") and ["genital","genitals"].includes(_args[1])>>
				<<switch $player.condom.type>>
					<<case "plain">>
						<<set _arousal to Math.floor(_arousal * 0.9)>>
						<<set _enemyarousal to Math.floor(_enemyarousal * 0.9)>>
					<<default>>
				<</switch>>
			<</if>>
		<</if>>
		<<arousal _arousal _args[1]>>
		<<enemyarousal _enemyarousal>>
	<</if>>
<</widget>>

<!--_args[0] is the base value, _args[1] is the skill-->
<<widget "sexControl">>
	<<if _args[0] and _args[1] gte 800>>
		<<set _loss to _args[1] / 180 * _args[0]>>
		<<if _args[1] gte 1200>>
			<<set _loss += 1>>
		<</if>>

		<<if $enemyarousal gte $enemyarousalmax * 0.7>>
			<<set _loss *= 2>>
		<</if>>
		<<if $enemyarousal gte $enemyarousalmax * 0.9>>
			<<set _loss *= 2>>
		<</if>>
		<<set _loss *= $enemyArousalLossReduction>>
		<<if $enemyArousalLossReduction gt 0.2>>
			<<set $enemyArousalLossReduction -= (_args[1] gte 1200 ? 0.03 : 0.04)>>
		<</if>>
		<<set $enemyarousal to Math.clamp($enemyarousal - Math.round(_loss), Math.min($enemyarousal, $enemyarousalmax / 5), $enemyarousalmax)>>
	<</if>>
<</widget>>

<<widget "violence">>
	<!-- NG tuning v2.7 $arousal from $masochism/50 to /7. PC now orgasms at least once during spanking encounter at 50% masocism level and twice at 100% masoohism. /10 at max is required to orgasm once at 100% masochism. -->
	<!-- NG added stress reduction for masochists. Trauma left same -->
	<<if _args.length gte 1>>
		<<set _violence = _args[0]>>
		<<set _stressMod = _args[1] || 1>>
		<<set _traumaMod = _args[2] || 1>>
		<<set _painMod = _args[3] || 1>>
		<!-- args[4] - indicates NPC id (but is currently unused) -->

		<<if _violence gt 0 or _violence lt 0>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set _drunkMod to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set _drunkMod to 10>>
			<</if>>
			<<if $possessed is true and _violence gte 0>>
				<<set $_controlMod to (10 * $enemyno)>>
				<<control `_violence / $_controlMod`>>
				<<set $wraith.will -= _violence>>
				<<set _possessMod to 3>>
			<<else>>
				<<set _possessMod to 1>>
			<</if>>
			<<set $stress += (_violence * _drunkMod * _stressMod) * (1 - ($masochism / 1200))>>
			<<combattrauma `_violence * _traumaMod`>>
			<<set $pain += (_violence * _painMod * (1 - ($masochism / 1200)) * (1 - ($sciencetrait / 10)) / _possessMod)>>
			<<set _arousal to (_violence * (0 + ($masochism / 18)))>>
			<<arousal _arousal/_possessMod "maso">>
			<<if $orgasmdown gte 1>>
				<<if $masochism gte 800>>
					<<masochism `(_violence / 20)`>>
				<<elseif $masochism gte 500>>
					<<masochism `(_violence / 10)`>>
				<<elseif $masochism gte 300>>
					<<masochism `(_violence / 6)`>>
				<<elseif $masochism gte 100>>
					<<masochism `(_violence / 2)`>>
				<<else>>
					<<masochism _violence>>
				<</if>>
			<</if>>
			<<if _violence gte 6>>
				<<set $enemyanger -= 5>>
			<<else>>
				<<set $enemyanger -= _violence>>
			<</if>>
			<<set $enemyarousal += 1>>
			<<painclamp>>
		<</if>>
	<</if>>
<</widget>>

<<widget "violence_noncombat">>
	<<if _args.length gte 1>>
		<<set _violence = _args[0]>>
		<<set _stressMod = _args[1] || 1>>
		<<set _traumaMod = _args[2] || 1>>
		<<set _painMod = _args[3] || 1>>
		<<set _arousalMod = _args[4] || 1>>

		<<if _violence gt 0 or _violence lt 0>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set _drunkMod to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set _drunkMod to 10>>
			<</if>>
			<<set $stress += (_violence * _drunkMod * _stressMod) * (1 - ($masochism / 1200))>>
			<<trauma `_violence * _traumaMod`>>
			<<set $pain += (_violence * _painMod * (1 - ($masochism / 1200)) * (1 - ($sciencetrait / 10)))>>
			<<set _arousal to (_violence * _arousalMod * (0 + ($masochism / 18)))>>
			<<arousal _arousal "maso">>
			<<set $arousalmasochism += (_violence * (0 + ($masochism / 7)))>>
			<<if $orgasmdown gte 1>>
				<<if $masochism gte 800>>
					<<masochism `(_violence / 20)`>>
				<<elseif $masochism gte 500>>
					<<masochism `(_violence / 10)`>>
				<<elseif $masochism gte 300>>
					<<masochism `(_violence / 6)`>>
				<<elseif $masochism gte 100>>
					<<masochism `(_violence / 2)`>>
				<<else>>
					<<masochism _violence>>
				<</if>>
			<</if>>
			<<painclamp>>
		<</if>>
	<</if>>
<</widget>>

<<widget "submission">>
	<!-- Comment Akoz: this won't use sensitivities as I reckon this arousal source is -->
	<!-- entirely psychological. -->
	<!-- args[0] - the submission value -->
	<!-- args[1] - the NPC to whom PC is submitting (currently unused) -->
	<<if _args[0]>>
		<<if $consensual isnot 1>>
			<<if $drunk gt 0>>
				<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
				<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
			<<else>>
				<<set $_stress_multiplier to 10>>
			<</if>>
			<<stress _args[0] $_stress_multiplier>>
			<<sub `_args[0] / 4`>>
		<<else>>
			<<set $stress -= 10 * _args[0]>>
			<<set $assertive += 1>>
		<</if>>
		<<set _arousal to 20 * _args[0]>>
		<<arousal _arousal>>
		<<set $enemyarousal += 3 * _args[0]>>
		<<set $enemytrust += 2>>
	<</if>>
<</widget>>

<<widget "defiance">>
	<<if _args[0]>>
		<<set _defiance to (_args[0] * (1 + ($sadism / 1000)))>>
		<<set $stress -= 10 * _defiance>>
		<<combattrauma `-_defiance`>>
		<<set $enemyanger += 5 * _defiance>>
		<<def `_args[0] / 4`>>
		<<set $enemytrust -= 4>>
		<<set _defiance_arousal to (_defiance * ($sadism / 40))>>
		<<arousal _defiance_arousal>>
		<<if $arousal gte ($arousalmax * 0.8)>>
			<<sadism _args[0]>>
		<</if>>
		<<set _thedamage to (2 * _defiance * ($physique / 4000))>>
		<<if $enemyno gte 2>>
			<<npcdamage _args[1]>>
		<</if>>
		<<set $enemyhealth -= _thedamage>>
	<</if>>
<</widget>>

<<widget "brat">>
	<<if _args[0]>>
		<<if $drunk gt 0>>
			<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4)>>
			<<set $_stress_multiplier to [9,8,6,4,3][$_drunk_level]>>
		<<else>>
			<<set $_stress_multiplier to 10>>
		<</if>>
		<<stress _args[0] $_stress_multiplier>>
		<<combattrauma `-1 * _args[0]`>>
		<<if _args[1] is "demanding">>
			<<set $enemyanger += 20 * _args[0]>>
		<<elseif $NPCList[0].legs isnot "walk">>
			<<set $enemyanger += 5 * _args[0]>>
		<</if>>
		<<def `_args[0] / 4`>>
		<<set $enemytrust -= 2>>
		<<set $NPCList[0].bold to ($NPCList[0].bold gte _args[0] * 10 ? $NPCList[0].bold - _args[0] * 10 : 0)>>
	<</if>>
<</widget>>

<<widget "meek">>
	<!-- Comment Akoz: this won't use sensitivities as I reckon this arousal source is -->
	<!-- entirely psychological. -->
	<!-- args[0] - the meek value -->
	<!-- args[1] - the NPC for whom PC is acting meekly (currently unused) -->
	<<if _args[0]>>
		<<if $consensual isnot 1>>
			<<sub `_args[0] / 4`>>
		<<else>>
			<<set $assertive += 1>>
		<</if>>
		<<set _arousal to 20 * _args[0]>>
		<<arousal _arousal>>
		<<set $enemyarousal += _args[0]>>
		<<set $enemytrust += 1>>
		<<set $enemyanger -= _args[0]>>
	<</if>>
<</widget>>

<<widget "crimeUp">><<silently>>
	<<if $statFreeze isnot true>>
		<<if _args[0] eq null>>
			<<set _crimeError to `No input found for crimeUp widget!`>>
		<<elseif isNaN(_args[0])>>
			<<set _crimeError to `NaN input found for crimeUp widget: '${_args[0]}'`>>
		<<elseif _args[0] lt 0>>
			<<set _crimeError to `Negative input found for crimeUp widget: '${_args[0]}'`>>
		<<elseif _args[0] gt 0>>
			<<set _crimeType to _args[1] || "thievery">>
			<<if !setup.crimeNames[_crimeType]>>
				<<run Errors.report("Extra-Illegal crime committed of type; " + _crimeType + " defaulted to thievery")>>
				<<set _crimeType to "thievery">>
			<</if>>
			<<set $_crimemod to Number(_args[0])>>
			<<set $_crimeMult to 1>>

			<<if !["coercion", "resisting"].includes(_crimeType)>>
				<!-- ignore stealth (or concealed identity) for crimes where it is irrelevant; -->
				<!-- resisting arrest where the player's identity is explicitly known, and coercion where the player's force of personality is needed -->
				/* The following commented code contains experimental factors for calculating stealth */
				/*
					<<set $_crime1 to Math.clamp($crime, C.crime.min, C.crime.max / 10)>>
					<<set $_crime2 to $crime - $_crime1>>
					<<set $_crime2 to Math.clamp($crime - $_crime1, C.crime.min, C.crime.max / 10)>>
					<!-- crime1 = first 5k of crime, crime2 = next 5k of crime -->
					<<set $_normCrime1 to normalise($_crime1, C.crime.max / 10)>>
					<<set $_normCrime2 to normalise($_crime2, C.crime.max / 10)>>
					<!-- Both normalized to percentage of max/10 (currently 5k) -->
					<<set $_stealthReduce1 to expCurve($_normcrime1, 3.0)>>
					<!-- First 5k of crime at a curve to 5000 -->
				*/
				<<set $_stealthfactor to ( 0.15 * ( 1 - normalise($crime[_crimeType].current, C.crime.max / 5 ) ) )>>
				<!-- Stealth gives 15%, but reduced by existing crime stat down to 0 at C.crime.max / 5 -->
				<!-- At 10k crime of the current type, stealthy equipment is effectively useless - too much evidence -->

				<!-- Filter to all items with type "stealthy" and count them -->
				<<set $_stealthMult to Object.values($worn).filter(item => item.type.includes("stealthy")).length>>
				<<set $_crimeMult -= $_stealthfactor * $_stealthMult>>

				<!-- Filter to all items with type "unstealthy" and count them -->
				<<set $_unstealthMult to Object.values($worn).filter(item => item.type.includes("unstealthy")).length>>
				<<set $_crimeMult += 0.15 * $_unstealthMult>>

				<<if ["thievery", "petty", "trespassing"].includes(_crimeType)>>
					<!-- For stealthy crimes, player skulduggery skill gives further reduction up to another 15%. 1000 is max skulduggery clamp, replace as needed -->
					<<set $_skillMult to ( 0.15 * normalise($skulduggery, 1000) )>>
					<<set $_crimeMult -= $_skillMult>>
				<</if>>

				<<set $_crimemod to Math.ceil($_crimemod * $_crimeMult)>>
				<<if ["petty"].includes(_crimeType) and $skulduggery gte 500>>
					<!-- Petty thievery has extra flat reduction if skulduggery skill above 500 (C+), possibly negating the crime gain entirely -->
					<<set $_crimemod -= Math.floor($skulduggery / 10)>>
				<</if>>
			<</if>>

			<<set $_crimemod to Math.clamp($_crimemod, 0, C.crime.max)>>

			<<if $_crimemod gt 0>>
				<!-- If crime gain is still greater than 0, add to crime daily, history, count, and Avery crimetracker-->
				<!-- crimemod lte 0 represents a crime the player completely got away with, so nothing is recorded-->
				<<set C.crime[_crimeType] += $_crimemod>>
				<<set C.crime[_crimeType + "History"] += $_crimemod>>
				<<set C.crime[_crimeType + "Daily"] += $_crimemod>>
				<<set C.crime[_crimeType + "Count"] += 1>>
				<<set C.crime[_crimeType + "CountHistory"] += 1>>
				<<if $averyCrimeTracker neq null>>
					<<set $averyCrimeTracker += $_crimemod>>
				<</if>>

				<<if ["thievery", "petty"].includes(_crimeType) and
				$foxbuild gte 1 and
				Math.max($wolfbuild, $catbuild, $cowbuild, $birdbuild, $foxbuild) is $foxbuild>>
					<!-- If the player steals enough, and fox is their highest beast TF (and above 0), apply fox TF pressure -->
					<<if !$foxCrimeProgress>>
						<!-- Resets daily at 6AM, in dawnCheck, time.js -->
						<<set $foxCrimeProgress to 0>>
					<</if>>
					<<set $foxCrimeProgress += $_crimemod>>
					<<set $_foxCrimeRequired = Math.floor(50 * (1 + $foxbuild))>>
					<<if $foxCrimeProgress gte $_foxCrimeRequired>>
						<<transform fox 1>>
						<<set $effectsmessage to true>>
						<<set $foxCrimeMessage to true>>
						<<set $foxCrimeProgress to Math.clamp($foxCrimeProgress, 0, ($foxCrimeProgress - $_foxCrimeRequired))>>
					<</if>>
				<</if>>

				<<if _args[2]>>
					<!-- Optional argument to record more specific crimes with description. Does not work yet, unused.-->
					<<set _description to _args[2]>>
					<<if !setup.crimeDescs[_description]>>
						<<run Errors.report("Extra-Illegal crime committed of description; " + _description + " crime event not logged")>>
					<<else>>
						<<run C.crime.logEvent($_crimemod, _crimeType, _description)>>
					<</if>>
				<</if>>
			<</if>>

			<<if $earSlime.event is "steal something" and ["thievery", "petty"].includes(_crimeType)>>
				<<set $earSlime.event to "">><<set $earSlime.noSleep to false>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<if _crimeError>><<error {message:T.crimeError}>><</if>><</widget>>

<<widget "crimeUpFlat">><<silently>>
	<!-- stripped down widget with no extra effects, modifiers, or optional arguments, ideally used for cheats and debugging -->
	<<if $statFreeze isnot true>>
		<<if _args[0] eq null>>
			<<set _crimeError to `No input found for crimeUpFlat widget!`>>
		<<elseif isNaN(_args[0])>>
			<<set _crimeError to `NaN input found for crimeUpFlat widget: '${_args[0]}'`>>
		<<elseif _args[0] lt 0>>
			<<set _crimeError to `Negative input found for crimeUpFlat widget: '${_args[0]}'`>>
		<<elseif _args[0] gt 0>>
			<<set _crimeType to _args[1] || "thievery">>
			<<if !setup.crimeNames[_crimeType]>>
				<<run Errors.report("Extra-Illegal crime (flat) committed of type; " + _crimeType + " defaulted to thievery")>>
				<<set _crimeType to "thievery">>
			<</if>>
			<<set $_crimemod to Number(_args[0])>>
			<<if _args[0] gt 0>>
				<<set C.crime[_crimeType] += $_crimemod>>
				<<set C.crime[_crimeType + "History"] += $_crimemod>>
				<<set C.crime[_crimeType + "Daily"] += $_crimemod>>
				<<set C.crime[_crimeType + "Count"] += 1>>
				<<set C.crime[_crimeType + "CountHistory"] += 1>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<if _crimeError>><<error {message:T.crimeError}>><</if>><</widget>>

<<widget "crimeDown">><<silently>>
	<<if $statFreeze isnot true>>
		<<if _args[0] eq null>>
			<<set _crimeError to `No input found for crimeDown widget!`>>
		<<elseif isNaN(_args[0])>>
			<<set _crimeError to `NaN input found for crimeDown widget: '${_args[0]}'`>>
		<<elseif _args[0] lt 0>>
			<<set _crimeError to `Negative input found for crimeDown widget: '${_args[0]}'`>>
		<<elseif _args[0] gt 0>>
			<<set _crimeDown to _args[0]>>
			<<if _args[1] and _args[1] isnot "all">>
				<<set _crimeType to _args[1]>>
				<<if !setup.crimeNames[_crimeType]>>
					<<run Errors.report("Extra-Illegal crime reduced of type; " + _crimeType + " defaulted to thievery")>>
					<<set _crimeType to "thievery">>
				<</if>>
				<<if C.crime[_crimeType] gt 0>>
					<<if _crimeDown lte 1>>
						<!-- Reduce crime by percent -->
						<<set C.crime[_crimeType] to Math.ceil(C.crime[_crimeType] * _crimeDown)>>
						<<set C.crime[_crimeType + "Daily"] to Math.ceil(C.crime[_crimeType + "Daily"] * _crimeDown)>>
						<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * _crimeDown)>>
					<<else>>
						<!-- Reduce crime by value -->
						<<set $_crimeDiv to normalise(C.crime[_crimeType] - _crimeDown, C.crime[_crimeType], C.crime.min)>>
						<<set C.crime[_crimeType] -= _crimeDown>>
						<<set C.crime[_crimeType + "Daily"] -= _crimeDown>>
						<!-- Reduce crime type count by same percentile as total crime loss-->
						<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * $_crimeDiv)>>
					<</if>>
				<</if>>
			<<else>>
				<!-- If no crime type specified, apply to all -->
				<<for _crimeType range Object.keys(setup.crimeNames)>>
					<<if C.crime[_crimeType] gt 0>>
						<<if _crimeDown lte 1>>
							<!-- Reduce crime by percent -->
							<<set C.crime[_crimeType] to Math.ceil(C.crime[_crimeType] * _crimeDown)>>
							<<set C.crime[_crimeType + "Daily"] to Math.ceil(C.crime[_crimeType + "Daily"] * _crimeDown)>>
							<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * _crimeDown)>>
						<<else>>
							<<set $_crimeDiv to normalise(C.crime[_crimeType] - _crimeDown, C.crime[_crimeType], C.crime.min)>>
							<<set C.crime[_crimeType] -= _crimeDown>>
							<<set C.crime[_crimeType + "Daily"] -= _crimeDown>>
							<<set C.crime[_crimeType + "Count"] to Math.ceil(C.crime[_crimeType + "Count"] * $_crimeDiv)>>
							<<unset $_crimeDiv>>
						<</if>>
					<</if>>
				<</for>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<if _crimeError>><<error {message:T.crimeError}>><</if>><</widget>>

<<widget "crimeClear">>
	<<if $statFreeze isnot true>>
		<<if _args[0] and _args[0] isnot "all">>
			<<set _crimeClearType to _args[0]>>
			<<if !setup.crimeNames[_crimeClearType]>>
				<<run Errors.report("Extra-Illegal crime cleared of type; " + _crimeClearType)>>
			<<else>>
				<<set C.crime[_crimeClearType] = 0>>
				<<set C.crime[_crimeClearType + "Count"] = 0>>
				<<set C.crime[_crimeClearType + "Daily"] = 0>>
				<<run C.crime.clearEvents(_crimeClearType)>>
			<</if>>
		<<else>>
			<!-- If no crime type specified, zero all categories -->
			<<for _crimeClearType range Object.keys(setup.crimeNames)>>
				<<set C.crime[_crimeClearType] = 0>>
				<<set C.crime[_crimeClearType + "Count"] = 0>>
				<<set C.crime[_crimeClearType + "Daily"] = 0>>
				<<run C.crime.clearEvents()>>
			<</for>>
		<</if>>
	<</if>>
<</widget>>

<<widget "crimeClearEvent">>
	<<if $statFreeze isnot true>>
		<<if _args[0] and _args[0] isnot "all">>
			<<set _crimeClearEvent to _args[0]>>
			<<if !setup.crimeDescs[_crimeClearEvent]>>
				<<run Errors.report("Extra-Illegal crime event cleared of description; " + _crimeClearEvent)>>
			<<else>>
				<<run C.crime.clearEvents(null, _crimeClearEvent)>>
			<</if>>
		<<else>>
			<<run C.crime.clearEvents()>>
		<</if>>
	<</if>>
<</widget>>

<<widget "listCrimeCheats">>
	<<if Object.keys(V.crime.events).length isnot 0>>
		<<for $_ce range Object.keys(V.crime.events)>>
			<<print $_ce + ": " + setup.crimeDescs[$_ce].toUpperFirst() + ", " + $crime.events[$_ce].length + " 번">>
			<br>
		<</for>>
	<<else>>
		<span class="red">특별한 범죄 이벤트가 없음</span>
		<br>
	<</if>>
<</widget>>

<<widget "crimeParade">>
	<<for $_crimeType range Object.keys(setup.crimeNames)>>
		<<if C.crime[$_crimeType + "Count"] gte 1>>
			<<set $_crimes_output to "">>
			<<trNumber `C.crime[$_crimeType + "Count"]` "silent">>
			<<set $_crimes_output += "- " + _trResult + " 번의">>
			<<if C.crime[$_crimeType + "Count"] isnot 1>>
				<<set $_crimes_output += "">>
			<</if>>
			<<set $_crimes_output += " " + toTitleCase(trCrimeName(setup.crimeNames[$_crimeType]))>>
			<<unset _trResult>>
			<<set $_crimes_event_list to []>>
			<<for $_ce range Object.keys($crime.events)>>
				<<set $_crDescLen to $crime.events[$_ce].filter(e => e.type is $_crimeType).length>>
				<<if $_crDescLen gte 1>>
					<<trNumber $_crDescLen "silent">>
					<<set $_crDescStr to _trResult + " 번의">>
					<<if $_crDescLen gt 1>>
						<<set $_crDescStr += "">>
					<</if>>
					<<set $_crDescStr += " " + setup.crimeDescs[$_ce]>>
					<<unset _trResult>>
					<<set $_crimes_event_list.push($_crDescStr)>>
				<</if>>
			<</for>>
			<<if $_crimes_event_list.length isnot 0>>
				<<set $_crimes_output += ", ">>
				<<set $_crimes_output += formatList($_crimes_event_list, "그리고", true)+ " 포함">>
			<</if>>
			<<set $_crimes_output += ".">><span class="red"><<print $_crimes_output>></span>
			<br>
		<</if>>
	<</for>>
<</widget>>

<<widget "seductionskilluse">>
	<<set $enemyarousal += (currentSkillValue("seductionskill") / 100)>><<seductionskill 5>>
<</widget>>

<<widget "seductionskilluptext">>
	<<if $seductionskill lt 1000>>
		<span class="gold">유혹 기술에 좀 더 자신감이 생겼다.</span>
		<br><br>
	<</if>>
<</widget>>

<<widget "seductionskillusecombat">>
	<<set $enemyarousal += (currentSkillValue("seductionskill") / 100)>><<seductionskill 5>><<set $seductionskillup to 1>>
<</widget>>

<<widget "oralskilluse">>
	<<set $enemyarousal += (currentSkillValue("oralskill") / 100)>><<oralskill 5>><<set $oralskillup to 1>>
<</widget>>

<<widget "vaginalskilluse">>
	<<set $enemyarousal += (currentSkillValue("vaginalskill") / 100)>><<vaginalskill 5>><<set $vaginalskillup to 1>>
<</widget>>

<<widget "analskilluse">>
	<<set $enemyarousal += (currentSkillValue("analskill") / 100)>><<analskill 5>><<set $analskillup to 1>>
<</widget>>

<<widget "handskilluse">>
	<<set $enemyarousal += (currentSkillValue("handskill") / 100)>><<handskill 5>><<set $handskillup to 1>>
<</widget>>

<<widget "feetskilluse">>
	<<set $enemyarousal += (currentSkillValue("feetskill") / 100)>><<feetskill 5>><<set $feetskillup to 1>>
<</widget>>

<<widget "bottomskilluse">>
	<<set $enemyarousal += (currentSkillValue("bottomskill") / 100)>><<bottomskill 5>><<set $bottomskillup to 1>>
<</widget>>

<<widget "thighskilluse">>
	<<set $enemyarousal += (currentSkillValue("thighskill") / 100)>><<thighskill 5>><<set $thighskillup to 1>>
<</widget>>

<<widget "chestskilluse">>
	<<set $enemyarousal += (currentSkillValue("chestskill") / 100)>><<chestskill 5>><<set $chestskillup to 1>>
<</widget>>

<<widget "penileskilluse">>
	<<set $enemyarousal += (currentSkillValue("penileskill") / 100)>><<penileskill 5>><<set $penileskillup to 1>>
<</widget>>

<<widget "skulduggeryskilluse">>
	<<if $statFreeze isnot true>>
		<<set $skulduggery += 3>>
		<<if $skulduggery lt 1000>>
			<span class="gold"> 당신은 도둑질에 대해 조금 깨우쳤다.</span>
		<</if>>
	<</if>>
	<br><br>
<</widget>>

<<widget "combatskulduggeryskilluse">>
	<<if $statFreeze isnot true>>
		<<set $skulduggery += 3>>
		<<set $skulduggery to Math.clamp($skulduggery, 0, 1000)>>
		<<if $skulduggery lt 1000>>
			<span class="gold"> 당신은 도둑질에 대해 조금 깨우쳤다.</span>
		<</if>>
	<</if>>
<</widget>>

<<widget "swimmingskilluse">>
	<<if $statFreeze isnot true>>
		<<set $swimmingskill += 9>>
		<<if $swimmingskill lt 1000>>
			<span class="gold"> 수영에 좀 더 자신감이 생겼다.</span>
		<</if>>
		<<set $swimmingskill to Math.clamp($swimmingskill, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "danceskilluse">>
	<<if $statFreeze isnot true>>
		<<danceskill 1>>
		<<if $danceskill lt 1000>>
			<span class="gold"> 춤 실력에 대해 좀 더 자신감이 생겼다.</span>
		<</if>>
	<</if>>
<</widget>>

<<widget "schoolskillgeneral">>
	<<if $statFreeze isnot true>>
		<<set $_subject to _args[0]>>
		<<set $_gain to _args[1] || 1>>

		<<set _skill_mod to [2.4, 1.2, 0.6, 0.3][Math.clamp(V[$_subject + "trait"], 0, 3)]>>

		<<if _args[2] isnot "no_star">>
			<<if V[$_subject + "_star"] lt 3>>
				<<set V[$_subject + "_star"] += 1>>
			<</if>>
			<<if $worn.face.type.includes("glasses")>>
				<<set _skill_mod *= 1.2>>
			<</if>>
			<<if $exposed gte 1>>
				<<set _skill_mod *= 1.2>>
			<</if>>
		<</if>>

		<<set V[$_subject + "_exam"] to Math.clamp(V[$_subject + "_exam"] + ($_gain * _skill_mod), -107, 200)>>
	<</if>>
<</widget>>

<<widget "scienceskill">>
	<<schoolskillgeneral "science" _args[0] _args[1]>>
<</widget>>

<<widget "mathsskill">>
	<<schoolskillgeneral "maths" _args[0] _args[1]>>
<</widget>>

<<widget "englishskill">>
	<<schoolskillgeneral "english" _args[0] _args[1]>>
<</widget>>

<<widget "historyskill">>
	<<schoolskillgeneral "history" _args[0] _args[1]>>
<</widget>>

<<widget "passiveStudy">>
	<<if $statFreeze isnot true>>
		<<switch $studyBooks.rented>>
			<<case "science">>
				<<scienceskill 6 "no_star">>
			<<case "maths">>
				<<mathsskill 6 "no_star">>
			<<case "English">>
				<<englishskill 6 "no_star">>
			<<case "history">>
				<<historyskill 6 "no_star">>
			<<default>>
		<</switch>>
		<<switch $studyBooks.stolen>>
			<<case "science">>
				<<scienceskill 6 "no_star">>
			<<case "maths">>
				<<mathsskill 6 "no_star">>
			<<case "English">>
				<<englishskill 6 "no_star">>
			<<case "history">>
				<<historyskill 6 "no_star">>
			<<default>>
		<</switch>>
	<</if>>
<</widget>>

<<widget "schoolskill">>
	<<if _args[0]>>
		<<historyskill _args[0]>>
		<<mathsskill _args[0]>>
		<<scienceskill _args[0]>>
		<<englishskill _args[0]>>
	<<else>>
		<<historyskill>>
		<<mathsskill>>
		<<scienceskill>>
		<<englishskill>>
	<</if>>
<</widget>>

<<widget "athletics">>
	<<if !_args[0] or $statFreeze is true>>
		<<exit>>
	<</if>>

	<<set _temp to _args[0] || 1>>
	<<set _temp *= ($exposed gte 2 ? 1.2 : $exposed is 1 ? 1.1 : 1)>>

	<<for _slot range ["upper", "lower", "feet", "legs"]>>
		<<if $worn[_slot].type.includes("athletic")>>
			<<set _temp *= 1.1>>
		<</if>>
	<</for>>

	<<if $worn.under_upper.type.includes("athletic") and $player.breastsize gte 6>>
		<<set _temp *= 1.1>>
	<<elseif $player.breastsize gte 6>>
		<<set _temp /= 1.1>>
	<</if>>

	<<set $athletics += Math.trunc(_temp * 1.3)>>
	<<set $athletics to Math.clamp($athletics, 0, 1000)>>
	<<set Weather.BodyTemperature.addActivity("athletics")>>
<</widget>>

<<widget "tending">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $tending += (_args[0] * 2)>>
		<<set $tending to Math.clamp($tending, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "housekeeping">>
<<if _args[0] and $statFreeze isnot true and $housekeeping lt _args[1]>>
	<<set $housekeeping += (_args[0] * 2)>>
	<<set $housekeeping to Math.clamp($housekeeping, 0, 1000)>>
<</if>>
<</widget>>

<<widget "danceskill">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $danceskill += _args[0]>>
		<<set $danceskill to Math.clamp($danceskill, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "physique">>
	<<if $statFreeze is true>>
		<<exit>>
	<</if>>

	<<if _args[0]>><<set _temp to _args[0]>><<set $workouts += _args[0]>><<else>><<set _temp to 1>><<set $workouts += 1>><</if>>
	<<if $exposed gte 2>>
		<<set _temp *= 1.2>>
	<<elseif $exposed is 1>>
		<<set _temp *= 1.1>>
	<</if>>
	<<set $physique += 10 * _temp>><<set $physiqueuse += _temp>>
	<<if _args[1]>>
		<<if _args[1] isnot "noMessage">>
			<<if ($combat is 1 and _args[1] isnot "workout") or _args[1] is "invig">>
				<span class="gold"> 기운이 넘친다.</span>
			<<else>>
				<span class="gold"> 좋은 운동이 되었다.</span>
			<</if>>
		<</if>>
	<<elseif $combat is 1>>
		<span class="gold"> 기운이 넘친다.</span>
	<<else>>
		<span class="gold"> 좋은 운동이 되었다.</span>
	<</if>>
	<<set $physique = Math.clamp($physique, 0, $physiquesize)>>
	<<set Weather.BodyTemperature.addActivity("physique")>>
<</widget>>

<<widget "physique_loss">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $physique -= 10 * _args[0]>>
	<</if>>
<</widget>>

<<widget "bruise">>
	<<if _args[0] and $statFreeze isnot true>>
		<<switch _args[0]>>
		<<case "face">>
			<<set $facebruise += 1>>
			<<set $facebruise to Math.clamp($facebruise, 0, 100)>>
		<<case "neck">>
			<<set $neckbruise += 1>>
			<<set $neckbruise to Math.clamp($neckbruise, 0, 100)>>
		<<case "chest">>
			<<set $chestbruise += 1>>
			<<set $chestbruise to Math.clamp($chestbruise, 0, 100)>>
		<<case "rightarm">>
			<<set $rightarmbruise += 1>>
			<<set $rightarmbruise to Math.clamp($rightarmbruise, 0, 100)>>
		<<case "leftarm">>
			<<set $leftarmbruise += 1>>
			<<set $leftarmbruise to Math.clamp($leftarmbruise, 0, 100)>>
		<<case "tummy">>
			<<set $tummybruise += 1>>
			<<set $tummybruise to Math.clamp($tummybruise, 0, 100)>>
		<<case "bottom">>
			<<set $bottombruise += 1>>
			<<set $bottombruise to Math.clamp($bottombruise, 0, 100)>>
		<<case "thigh">>
			<<set $thighbruise += 1>>
			<<set $thighbruise to Math.clamp($thighbruise, 0, 100)>>
		<<case "anus">>
			<<set $anusbruise += 1>>
			<<set $anusbruise to Math.clamp($anusbruise, 0, 100)>>
		<<case "vagina">>
			<<set $vaginabruise += 1>>
			<<set $vaginabruise to Math.clamp($vaginabruise, 0, 100)>>
		<<case "penis">>
			<<set $penisbruise += 1>>
			<<set $penisbruise to Math.clamp($penisbruise, 0, 100)>>
		<<case "full">>
			<<set $facebruise += 1>>
			<<set $neckbruise += 1>>
			<<set $chestbruise += 1>>
			<<set $rightarmbruise += 1>>
			<<set $leftarmbruise += 1>>
			<<set $tummybruise += 1>>
			<<set $bottombruise += 1>>
			<<set $thighbruise += 1>>

			<<set $facebruise to Math.clamp($facebruise, 0, 100)>>
			<<set $chestbruise to Math.clamp($chestbruise, 0, 100)>>
			<<set $tummybruise to Math.clamp($tummybruise, 0, 100)>>
			<<set $vaginabruise to Math.clamp($vaginabruise, 0, 100)>>
			<<set $penisbruise to Math.clamp($penisbruise, 0, 100)>>
			<<set $anusbruise to Math.clamp($anusbruise, 0, 100)>>
			<<set $bottombruise to Math.clamp($bottombruise, 0, 100)>>
			<<set $thighbruise to Math.clamp($thighbruise, 0, 100)>>
			<<set $leftarmbruise to Math.clamp($leftarmbruise, 0, 100)>>
			<<set $rightarmbruise to Math.clamp($rightarmbruise, 0, 100)>>
			<<set $neckbruise to Math.clamp($neckbruise, 0, 100)>>
		<</switch>>
	<</if>>
<</widget>>

<<widget "rapestat">><<if $statFreeze isnot true>><<set $rapestat += 1>><<set $rapeTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "moleststat">><<if $statFreeze isnot true>><<set $moleststat += 1>><<set $molestTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "vaginalstat">><<if $statFreeze isnot true>><<set $vaginalstat += 1>><<set $vaginalTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "vaginalejacstat">><<if $statFreeze isnot true>><<set $vaginalejacstat += 1>><<purity -1>><<internalejac>><<fertiliseParasites "vagina">><<creampie "self" "vagina">><<set $vaginalEjacTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "analstat">><<if $statFreeze isnot true>><<set $analstat += 1>><<set $analTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "analejacstat">><<if $statFreeze isnot true>><<set $analejacstat += 1>><<purity -1>><<internalejac>><<fertiliseParasites>><<creampie "self" "anus">><<set $analEjacTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "oralstat">><<if $statFreeze isnot true>><<set $oralstat += 1>><</if>><</widget>>

<<widget "oralejacstat">><<if $statFreeze isnot true>><<set $oralejacstat += 1>><<purity -1>><<internalejac>><<creampie "self" "mouth">><</if>><</widget>>

<<widget "cunnilingusstat">><<if $statFreeze isnot true>><<set $cunnilingusstat += 1>><</if>><</widget>>

<<widget "cunnilingusejacstat">><<if $statFreeze isnot true>><<set $cunnilingusejacstat += 1>><</if>><</widget>>

<<widget "handstat">><<if $statFreeze isnot true>><<set $handstat += 1>><</if>><</widget>>

<<widget "handejacstat">><<if $statFreeze isnot true>><<set $handejacstat += 1>><</if>><</widget>>

<<widget "feetstat">><<if $statFreeze isnot true>><<set $feetstat += 1>><</if>><</widget>>

<<widget "feetejacstat">><<if $statFreeze isnot true>><<set $feetejacstat += 1>><</if>><</widget>>

<<widget "thighstat">><<if $statFreeze isnot true>><<set $thighstat += 1>><</if>><</widget>>

<<widget "thighejacstat">><<if $statFreeze isnot true>><<set $thighejacstat += 1>><</if>><</widget>>

<<widget "cheststat">><<if $statFreeze isnot true>><<set $cheststat += 1>><</if>><</widget>>

<<widget "chestejacstat">><<if $statFreeze isnot true>><<set $chestejacstat += 1>><</if>><</widget>>

<<widget "bottomstat">><<if $statFreeze isnot true>><<set $bottomstat += 1>><</if>><</widget>>

<<widget "bottomejacstat">><<if $statFreeze isnot true>><<set $bottomejacstat += 1>><</if>><</widget>>

<<widget "penilestat">><<silently>>
<<if $statFreeze isnot true>>
	<<if $player.penisExist and !playerHasStrapon()>>
		<<set $penilestat += 1>>
		<<set $penileTimeStat to Time.date.timeStamp>>
	<<elseif playerHasStrapon()>>
		<<set $straponstat += 1>>
	<</if>>
<</if>><</silently>><</widget>>

<<widget "penileejacstat">><<if $statFreeze isnot true>><<set $penileejacstat += 1>><<set $penileEjacTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "clothesstripstat">><<if $statFreeze isnot true>><<set $clothesstripstat += 1>><</if>><</widget>>

<<widget "clothesruinstat">><<if $statFreeze isnot true>><<set $clothesruinstat += 1>><</if>><</widget>>

<<widget "orgasmstat">><<if $statFreeze isnot true>><<set $orgasmstat += 1>><<set $orgasmTimeStat to Time.date.timeStamp>><</if>><</widget>>

<<widget "ejacstat">><<if $statFreeze isnot true>><<set $ejacstat += 1>><</if>><</widget>>

<<widget "hitstat">><<if $statFreeze isnot true>><<set $hitstat += 1>><</if>><</widget>>

<<widget "attackstat">><<if $statFreeze isnot true>><<set $attackstat += 1>><</if>><</widget>>

<<widget "vaginalentranceejacstat">><<if $statFreeze isnot true>><<set $vaginalentranceejacstat += 1>><</if>><</widget>>

<<widget "faceejacstat">><<if $statFreeze isnot true>><<set $faceejacstat += 1>><</if>><</widget>>

<<widget "hairejacstat">><<if $statFreeze isnot true>><<set $hairejacstat += 1>><</if>><</widget>>

<<widget "tummyejacstat">><<if $statFreeze isnot true>><<set $tummyejacstat += 1>><</if>><</widget>>

<<widget "neckejacstat">><<if $statFreeze isnot true>><<set $neckejacstat += 1>><</if>><</widget>>

<<widget "dancestat">><<if $statFreeze isnot true>><<set $dancestat += 1>><</if>><</widget>>

<<widget "analdoublestat">><<if $statFreeze isnot true>><<set $analdoublestat += 1>><</if>><</widget>>

<<widget "vaginaldoublestat">><<if $statFreeze isnot true>><<set $vaginaldoublestat += 1>><</if>><</widget>>

<<widget "sextoystat">><<if $statFreeze isnot true>><<set $sextoystat += 1>><</if>><</widget>>

<<widget "urinestat">><<if $statFreeze isnot true>><<if _args[0]>><<set $urinestat += _args[0]>><<else>><<set $urinestat += 1>><</if>><</if>><</widget>>

<<widget "distinction_stat">>
	<<if $statFreeze isnot true>>
		<<set $distinction_stat += 1>>
		<<if $distinction_stat gte 15>>
			<<earnFeat "Distinguished">>
		<<elseif $distinction_stat gte 5>>
			<<earnFeat "Distinctive">>
		<<else>>
			<<earnFeat "Distinction">>
		<</if>>
	<</if>>
<</widget>>

<<widget "knot_stat">>
	<<if $statFreeze isnot true>>
		<<if $knot_stat is undefined>>
			<<set $knot_stat to 0>>
		<</if>>
		<<set $knot_stat += 1>>
	<</if>>
<</widget>>

<<widget "hunger">>
	<<if _args[0] and $statFreeze isnot true>>
		<<set $hunger += _args[0]>>
		<<set $hunger = Math.clamp($hunger, 0, 2000)>>
	<</if>>
<</widget>>

<<widget "hunger_description">>
	<<if $hunger gte 2000>><span class="red">뱃가죽이 등에 붙을 정도다!</span>
	<<elseif $hunger gte 1600>><span class="pink">배가 고파 죽을 것만 같다.</span>
	<<elseif $hunger gte 1200>><span class="purple">굶주렸다.</span>
	<<elseif $hunger gte 800>><span class="blue">배가 고프다.</span>
	<<elseif $hunger gte 400>><span class="lblue">약간 허기가 졌다.</span>
	<<elseif $hunger gte 1>><span class="teal">만족스럽다.</span>
	<<else>><span class="green">배가 부르다.</span>
	<</if>>
<</widget>>

<<widget "thirst">>
	<<if $thirst gte 2000>><span class="red">탈수 상태다!</span>
	<<elseif $thirst gte 1600>><span class="pink">정말로 목이 마르다.</span>
	<<elseif $thirst gte 1200>><span class="purple">목이 마르다.</span>
	<<elseif $thirst gte 800>><span class="blue">목이 좀 칼칼하다.</span>
	<<elseif $thirst gte 400>><span class="lblue">만족스럽다.</span>
	<<elseif $thirst gte 1>><span class="teal">많이 마셨다.</span>
	<<elseif $thirst lte 0>><span class="green">배가 터지도록 마셨다.</span>
	<</if>>
<</widget>>

<<widget "tirednesscaption">>
	<<if Number.isFinite($tiredness)>>
		<div id="tirednesscaption" @title="'Fatigue: ' + $tiredness.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				피로:
				<<if $options.showCaptionText is true>>
					<<if $tiredness gte C.tiredness.max>>
						<span class="red">기진맥진하다.</span>
					<<elseif $tiredness gte (C.tiredness.max / 5) * 4>>
						<span class="pink">피로하다.</span>
					<<elseif $tiredness gte (C.tiredness.max / 5) * 3>>
						<span class="purple">피곤하다.</span>
					<<elseif $tiredness gte (C.tiredness.max / 5) * 2>>
						<span class="blue">지쳤다.</span>
					<<elseif $tiredness gte C.tiredness.max / 5>>
						<span class="lblue">정신이 말짱하다.</span>
					<<elseif $tiredness gte 1>>
						<span class="teal">완전히 정신이 또렷하다.</span>
					<<else>>
						<span class="green">상쾌한 기분이다.</span>
					<</if>>
				<</if>>
			</div>

			<<if $tiredness gte C.tiredness.max>>
				<<set $stress += (($tiredness - C.tiredness.max) * 16)>><<set $trauma += (($tiredness - C.tiredness.max) / 3)>>
			<</if>>

			<<set $tiredness = Math.clamp($tiredness, 0, C.tiredness.max)>>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar 0 $tiredness `C.tiredness.max` _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "hygiene">>
	<<if $hygiene gte 2000>>
		<span class="red">더럽다.</span>
	<<elseif $hygiene gte 1600>>
		<span class="pink">때가 좀 탔다.</span>
	<<elseif $hygiene gte 1200>>
		<span class="purple">악취가 난다.</span>
	<<elseif $hygiene gte 800>>
		<span class="blue">지저분하다.</span>
	<<elseif $hygiene gte 400>>
		<span class="lblue">깔끔하다.</span>
	<<elseif $hygiene gte 1>>
		<span class="teal">깨끗하다.</span>
	<<elseif $hygiene lte 0>>
		<span class="green">먼지 하나 묻지 않았다.</span>
	<</if>>
<</widget>>

<<widget "stresscaption">>
	<<if Number.isFinite($stress)>>
		<div id="stresscaption" @title="'Stress: ' + $stress.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				스트레스:
				<<if $options.showCaptionText is true>>
					<<if $stress gte $stressmax>>
						<span class="red">정신을 차릴 수가 없다!</span>
					<<elseif $stress gte ($stressmax / 5) * 4>>
						<span class="pink">정신적으로 괴롭다.</span>
					<<elseif $stress gte ($stressmax / 5) * 3>>
						<span class="purple">정신을 혹사하고 있다.</span>
					<<elseif $stress gte ($stressmax / 5) * 2>>
						<span class="blue">긴장하고 있다.</span>
					<<elseif $stress gte $stressmax / 5>>
						<span class="lblue">침착하다.</span>
					<<elseif $stress gte 1>>
						<span class="teal">차분하다.</span>
					<<else>>
						<span class="green">마음이 고요하다.</span>
					<</if>>
				<</if>>
			</div>
			<<set $stress = Math.clamp($stress, 0, $stressmax)>>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar 0 $stress $stressmax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "traumacaption">>
	<<if Number.isFinite($trauma)>>
		<div id="traumacaption" @title="'Trauma: ' + $trauma.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				트라우마:
				<<if $options.showCaptionText is true>>
					<<if $trauma gte $traumamax>>
						<span class="red">정신이 멍하다.</span>
					<<elseif $trauma gte ($traumamax / 5) * 4>>
						<span class="pink">고통을 받고 있다.</span>
					<<elseif $trauma gte ($traumamax / 5) * 3>>
						<span class="purple">불편하다.</span>
					<<elseif $trauma gte ($traumamax / 5) * 2>>
						<span class="blue">걱정스럽다.</span>
					<<elseif $trauma gte ($traumamax / 5) * 1>>
						<span class="lblue">불안하다.</span>
					<<elseif $trauma gte 1>>
						<span class="teal">마음이 뒤숭숭하다.</span>
					<<else>>
						<span class="green">건강하다.</span>
					<</if>>
				<</if>>
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar 0 $trauma $traumamax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "innocencecaption">>
	<div id="innocencecaption">
		<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
			순수함:
			<<if $options.showCaptionText is true>>
				<<if $awareness gte 0>>
					<span class="red">모두 이해하고 있다.</span>
				<<elseif $awareness gt -40>>
					<span class="pink">확신이 없다.</span>
				<<elseif $awareness gt -80>>
					<span class="purple">이해하기 힘들어 한다.</span>
				<<elseif $awareness gt -120>>
					<span class="blue">호기심을 갖고 있다.</span>
				<<elseif $awareness gt -160>>
					<span class="lblue">의심할 줄을 모른다.</span>
				<<elseif $awareness gt -200>>
					<span class="teal">순진하다.</span>
				<<else>>
					<span class="green">아무 것도 모른다.</span>
				<</if>>
			<</if>>
		</div>
		<<set _showCaptionText to !$options.showCaptionText>>
		<<statbarinverted $awareness -200 _showCaptionText>>
		<div style="clear:both;"></div>
	</div>
<</widget>>

<<widget "controlcaption">>
	<<if Number.isFinite($control)>>
		<div id="controlcaption" @title="'Control: ' + $control.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				통제력:
				<<if $options.showCaptionText is true>>
					<<if $possessed>>
						<<if $control gte $controlmax>>
							<span class="green">통제하고 있다.</span>
						<<elseif $control gte ($controlmax / 5) * 4>>
							<span class="teal">거의 통제하고 있다.</span>
						<<elseif $control gte ($controlmax / 5) * 3>>
							<span class="lblue">분투하고 있다.</span>
						<<elseif $control gte ($controlmax / 5) * 2>>
							<span class="blue">몸이 공허하게 느껴진다.</span>
						<<elseif $control gte ($controlmax / 5) * 1>>
							<span class="purple">정신이 멍하다.</span>
						<<elseif $control gte 1>>
							<span class="pink">조종당하고 있다.</span>
						<<else>>
							<span class="red">무력하다.</span>
						<</if>>
					<<else>>
						<<if $control gte $controlmax>>
							<span class="green">확신에 차있다.</span>
						<<elseif $control gte ($controlmax / 5) * 4>>
							<span class="teal">자신이 없다.</span>
						<<elseif $control gte ($controlmax / 5) * 3>>
							<span class="lblue">걱정에 차있다.</span>
						<<elseif $control gte ($controlmax / 5) * 2>>
							<span class="blue">불안하다.</span>
						<<elseif $control gte ($controlmax / 5) * 1>>
							<span class="purple">무서워 하고 있다.</span>
						<<elseif $control gte 1>>
							<span class="pink">겁에 질렸다.</span>
						<<else>>
							<span class="red">공포에 빠져 있다.</span>
						<</if>>
					<</if>>
				<</if>>
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbarinverted $control $controlmax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "arousalcaption">>
	<<if Number.isFinite($arousal)>>
		<div id="arousalcaption" @title="'Arousal: ' + $arousal.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				흥분:
				<<if $options.showCaptionText is true>>
					<<if $arousal gte $arousalmax>>
						<span class="red">흥분에 몸을 떤다.</span>
					<<elseif $arousal gte ($arousalmax / 5) * 4>>
						<span class="pink">열기가 솟아오른다.</span>
					<<elseif $arousal gte ($arousalmax / 5) * 3>>
						<span class="purple">꼴려있다.</span>
					<<elseif $arousal gte ($arousalmax / 5) * 2>>
						<span class="blue">욕정으로 가득 찼다.</span>
					<<elseif $arousal gte $arousalmax / 5>>
						<span class="lblue">흥분해있다.</span>
					<<elseif $arousal gte 1>>
						<span class="teal">성적 욕망이 일어난다.</span>
					<<else>>
						<span class="green">마음이 차갑게 가라앉아 있다.</span>
					<</if>>
				<</if>>
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar `statChange.minArousal()` $arousal $arousalmax _showCaptionText>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "lewditycaption">>
	<<if Number.isFinite($lewdity)>>
		<div id="lewditycaption" @title="'lewdity: ' + $lewdity.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				음란도:
				<<if $options.showCaptionText is true>>
					<<if $lewdity gte $lewditymax>>
						<span class="red">당신은 정력이 넘쳐 몸이 떨린다.</span>
					<<elseif $lewdity gte ($lewditymax / 5) * 4>>
						<span class="pink">당신은 전율을 느낀다.</span>
					<<elseif $lewdity gte ($lewditymax / 5) * 3>>
						<span class="purple">당신은 기분이 들뜬 것을 느낀다.</span>
					<<elseif $lewdity gte ($lewditymax / 5) * 2>>
						<span class="blue">당신은 육욕을 느낀다.</span>
					<<elseif $lewdity gte $lewditymax / 5>>
						<span class="lblue">당신은 흥분감을 느낀다.</span>
					<<elseif $lewdity gte 1>>
						<span class="teal">당신은 설레임을 느낀다.</span>
					<<else>>
						<span class="green">당신은 진정되어 있다.</span>
					<</if>>
				<</if>>
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
			<<statbar 0 $lewdity $lewditymax _showCaptionText `restLewdity)`>>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "allurecaption">>
	<<if Number.isFinite($allure)>>
		<div id="allurecaption" @title="'Allure: ' + $allure.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				색기:
				<<if $options.showCaptionText is true>>
					<<if $allure gte (6000 * $alluremod)>><span class="red">금방이라도 유린당할 것처럼 보인다.</span>
					<<elseif $allure gte (4000 * $alluremod)>><span class="pink">변태같다.</span>
					<<elseif $allure gte (3000 * $alluremod)>><span class="purple">음란한 모습이다.</span>
					<<elseif $allure gte (2000 * $alluremod)>><span class="blue">돋보인다.</span>
					<<elseif $allure gte (1500 * $alluremod)>><span class="lblue">이목을 끈다.</span>
					<<elseif $allure gte (1000 * $alluremod)>><span class="teal">사람들이 시선을 던지곤 한다.</span>
					<<else>><span class="green">지극히 평범하다.</span>
					<</if>>
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<<set _percent=Math.floor(($allure/(8000 * $alluremod))*100)>>
				<<if $allure gte (6000 * $alluremod)>>
				<<print '<div class="redbar" style="width:' + _percent + '%"></div>'>>
				<<elseif $allure gte (4000 * $alluremod)>>
				<<print '<div class="pinkbar" style="width:' + _percent + '%"></div>'>>
				<<elseif $allure gte (3000 * $alluremod)>>
				<<print '<div class="purplebar" style="width:' + _percent + '%"></div>'>>
				<<elseif $allure gte (2000 * $alluremod)>>
				<<print '<div class="bluebar" style="width:' + _percent + '%"></div>'>>
				<<elseif $allure gte (1500 * $alluremod)>>
				<<print '<div class="lbluebar" style="width:' + _percent + '%"></div>'>>
				<<elseif $allure gte (1000 * $alluremod)>>
				<<print '<div class="tealbar" style="width:' + _percent + '%"></div>'>>
				<<else>>
				<<print '<div class="greenbar" style="width:' + _percent + '%"></div>'>>
				<</if>>
			</div>

			<<if $allure gte 8000 * $alluremod>><<set $allure to 8000 * $alluremod>><</if>>
			<<if $alluretest is 1>>
				<<set $allure += 100000>>
			<<elseif $alluretest is 2>>
				<<set $allure -= 100000>>
			<</if>>

			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "updateallure">>
	<<run new Wikifier(null, '<<calculateallure>>')>>
	<<run $('#allurecaption').replaceWith(new Wikifier(null, '<<allurecaption>>').output)>>
<</widget>>

<<widget "oxygencaption">>
	<div id="oxygencaption">
		<<if _args[0] is true>>
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				공기:
			</div>
			<<set _showCaptionText to !$options.showCaptionText>>
		<<else>>
			<<unset _showCaptionText>>
		<</if>>
		<<statbarinverted $oxygen $oxygenmax _showCaptionText>>
		<div style="clear:both;"></div>
	</div>
<</widget>>

<<widget "flashbacktown">>
	<span class="red">당신은 저멀리 어디선가 자동차 경적소리가 요란하게 울리는 것을 듣고는 겁에 질려 어쩔 줄을 모른다. 보이지 않는 덩굴 같은 것이 몸을 타고 올라와 팔다리를 구속하고, 소리 없는 목소리가 조소하며 끝없는 타락을 약속한다. 아주 잠깐 동안 일어난 일이었지만, 폭력의 기억은 남아있다.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 12>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackhome">>
	<span class="red">당신은 자동차가 지나가는 소리를 듣고는 겁에 질려 어쩔 줄을 모른다. 보이지 않는 덩굴 같은 것이 몸을 타고 올라와 팔다리를 구속하고, 소리 없는 목소리가 조소하며 끝없는 타락을 약속한다. 아주 잠깐 동안 일어난 일이었지만, 폭력의 기억은 남아있다.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackbeach">>
	<span class="red">당신은 갈매기가 우는 소리를 듣고는 겁에 질려 어쩔 줄을 모른다. 보이지 않는 덩굴 같은 것이 몸을 타고 올라와 팔다리를 구속하고, 소리 없는 목소리가 조소하며 끝없는 타락을 약속한다. 아주 잠깐 동안 일어난 일이었지만, 폭력의 기억은 남아있다.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackunderground">>
	<span class="red">당신은 땅을 타고 울리는 진동을 느끼고는 겁에 질려 어쩔 줄을 모른다. 보이지 않는 덩굴 같은 것이 몸을 타고 올라와 팔다리를 구속하고, 소리 없는 목소리가 조소하며 끝없는 타락을 약속한다. 아주 잠깐 동안 일어난 일이었지만, 폭력의 기억은 남아있다.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "flashbackschool">>
	<span class="red">당신은 마지막으로 학교에서 추행당한 것을 떠올리고는 겁에 질려 어쩔 줄을 모른다. 보이지 않는 덩굴 같은 것이 몸을 타고 올라와 팔다리를 구속하고, 소리 없는 목소리가 조소하며 끝없는 타락을 약속한다. 아주 잠깐 동안 일어난 일이었지만, 폭력의 기억은 남아있다.</span>
	<<garousal>><<gstress>><<gtrauma>><<arousal 600>><<stress 6>><<trauma 6>>
	<br><br>
<</widget>>

<<widget "drunkcaption">>
	<<if $drunk gt 0>>
		<<set $_colour to getColourClassFromPercentage($drunk * (100 / 480))>>
		<<set $_barColour to $_colour + "bar">>
		<<set $_percent to Math.floor(($drunk/1000)*100)>>
		<<set $_barWidth to `width:${$_percent}%`>>

		<div id="drunkcaption" @title="'Drunk: ' + $drunk.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				<<if $options.showCaptionText is true>>
					<<set $_drunk_level to Math.clamp(Math.floor($drunk / 120), 0, 4) * 120>>
					<<switch $_drunk_level>>
						<<case 0>><span @class="$_colour">정신이 멍하다.</span>
						<<case 120>><span @class="$_colour">약간 취했다.</span>
						<<case 240>><span @class="$_colour">취했다.</span>
						<<case 360>><span @class="$_colour">고주망태가 되었다.</span>
						<<case 480>><span @class="$_colour">완전히 맛이 갔다.</span>
					<</switch>>
				<<else>>
					취기:
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<div @class="$_barColour" @style="$_barWidth"></div>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "druggedcaption">>
	<<if $drugged gt 0>>
		<<set $_colour to getColourClassFromPercentage($drugged / 5)>>
		<<set $_barColour to $_colour + "bar">>
		<<set $_percent to Math.floor(($drugged/1000)*100)>>
		<<set $_barWidth to `width:${$_percent}%`>>

		<div id="druggedcaption" @title="'Drugged: ' + $drugged.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				<<if $options.showCaptionText is true>>
					<span class="pink">음란한 온기가 몸을 가득 채운다.</span>
				<<else>>
					약물:
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<div @class="$_barColour" @style="$_barWidth"></div>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "hallucinogencaption">>
	<<if $hallucinogen gt 0>>
		<<set $_colour to getColourClassFromPercentage($hallucinogen / 5)>>
		<<set $_barColour to $_colour + "bar">>
		<<set $_percent to Math.floor(($hallucinogen/1000)*100)>>
		<<set $_barWidth to `width:${$_percent}%`>>

		<div id="hallucinogencaption" @title="'Hallucinogens: ' + $hallucinogen.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				<<if $options.showCaptionText is true>>
					<span class="purple">당신의 인지 능력이 뒤틀려 있다.</span>
				<<else>>
					환각:
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<div @class="$_barColour" @style="$_barWidth"></div>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "paincaption">>
	<<if Number.isFinite($pain)>>
		<div id="paincaption" @title="'Pain: ' + $pain.toFixed(2)">
			<div @class="($options.showCaptionText is true ? '' : 'rightMeterText')">
				고통:
				<<if $options.showCaptionText is true>>
					<<if $pain gte 100 and $willpowerpain is 0>><span class="red">겉잡을 수 없이 흐느끼고 있다.</span>
					<<elseif $pain gte 80>><span class="pink">울며 훌쩍이고 있다.</span>
					<<elseif $pain gte 60>><span class="purple">울고 있다.</span>
					<<elseif $pain gte 40>><span class="blue">눈물이 얼굴을 타고 흐른다.</span>
					<<elseif $pain gte 20>><span class="lblue">눈에 눈물이 고인다.</span>
					<<elseif $pain gte 1>><span class="teal">마음이 상했다.</span>
					<<else>><span class="green">괜찮다.</span>
					<</if>>
				<</if>>
			</div>
			<div @class="($options.showCaptionText is true ? 'meter' : 'rightMeter')">
				<<set _percent to Math.floor(($pain/100)*100)>>
				<<set _minPercent to Math.clamp(Math.floor((statChange.minPain() / 100)*100), 0, _percent)>>
				<<if $pain gte 100 and $willpowerpain is 0>>
					<<set _statColor to "redbar">>
				<<elseif $pain gte 80>>
					<<set _statColor to "pinkbar">>
				<<elseif $pain gte 60>>
					<<set _statColor to "purplebar">>
				<<elseif $pain gte 40>>
					<<set _statColor to "bluebar">>
				<<elseif $pain gte 20>>
					<<set _statColor to "lbluebar">>
				<<elseif $pain gte 1>>
					<<set _statColor to "tealbar">>
				<<else>>
					<<set _statColor to "greenbar">>
				<</if>>
				<div @class="_statColor" @style="'width:' + _percent + '%'"></div>
				<<if statChange.minPain()>>
					<<if _minPercent>>
						<div @class="_statColor + ' meterMin'" @style="'width:' + _minPercent + '%'"></div>
					<</if>>
				<</if>>
			</div>
			<div style="clear:both;"></div>
		</div>
	<</if>>
<</widget>>

<<widget "raped">>
	<<if $rapeavoid is 1 and $consensual is 0 and $gamemode isnot "soft">>
		<<set $rapeavoid to 0>><<rapestat>>
		<<if $enemytype is "man" and !($npc.length is 1 and $npc[0] is "Eden")>>
			<<famerape $enemynomax>>
		<</if>>
		<<if $awareness lte 200>>
			<<awareness 5>>
		<<elseif $awareness lte 400>>
			<<awareness 1>>
		<</if>>
		<<if $enemytype is "beast" or $enemytype is "struggle">>
			<<set $beastrapestat += 1>>
			<<if $awareness lte 300>>
				<<awareness 1>>
			<</if>>
		<</if>>
		<<if $enemytype is "tentacles">>
			<<set $tentaclerapestat += 1>>
		<</if>>
		<<if $enemytype is "tentacles" or $enemytype is "struggle">>
			<<if $awareness lte 400>>
				<<awareness 1>>
			<</if>>
		<</if>>
		<<controlloss>>
	<<elseif $sexavoid is 1 and $consensual is 1>>
		<<set $sexavoid to 0>>
		<<if $enemytype is "man" and !($npc.length is 1 and $npc[0] is "Eden")>>
			<<famesex $enemynomax>>
		<</if>>
		<<controlloss>>
	<</if>>
<</widget>>

<<widget "molested">>
	<<if $gamemode is "soft">>
		<<set $consensual to 1>>
	<<elseif $molestavoid is 1 and $consensual is 0>>
		<<set $molestavoid to 0>>
		<<moleststat>>

		<<if $flashbacks gte 1>>
			<<switch $location>>
				<<case "town">><<if $flashbacktown is 0>><<set $flashbacktown to 14>><</if>>
				<<case "home">><<if $flashbackhome is 0>><<set $flashbackhome to 14>><</if>>
				<<case "beach">><<if $flashbackbeach is 0>><<set $flashbackbeach to 14>><</if>>
				<<case "school">><<if $flashbackschool is 0>><<set $flashbackschool to 14>><</if>>
				<<case "underground">><<if $flashbackunderground is 0>><<set $flashbackunderground to 14>><</if>>
			<</switch>>
		<</if>>
		<<if $awareness lte 200>>
			<<awareness 5>>
		<<elseif $awareness lte 400>>
			<<awareness 1>>
		<</if>>
		<<if $enemytype is "beast" or $enemytype is "struggle">>
			<<if $awareness lte 300>>
				<<awareness 1>>
			<</if>>
		<</if>>
		<<if $enemytype is "tentacles" or $enemytype is "struggle">>
			<<if $awareness lte 400>>
				<<awareness 1>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "consensual">>
	<<if $awareness lte 200>>
		<<awareness 5>>
	<<elseif $awareness lte 400>>
		<<awareness 1>>
	<</if>>
	<<if $enemytype is "beast" or $enemytype is "struggle">>
		<<if $awareness lte 300>>
			<<awareness 1>>
		<</if>>
	<</if>>
	<<if $enemytype is "tentacles">>
		<<if $awareness lte 400>>
			<<awareness 1>>
		<</if>>
	<</if>>
	<<set $trueconsensual to 1>>
	<<if _args[0]>>
		<<set $consensualGuaranteed to 1>>
	<</if>>
	<<if $npc.length is 1 and ($npc[0] is "Robin" and C.npc.Robin.dom lte 10 and $debug is 1) or ($npc[0] is "Sydney" and C.npc.Sydney.purity gte 50)>>
		<<npc_submissive>>
	<</if>>
<</widget>>

<<widget "controlloss">>
	<<if $gamemode is "soft">>
	<<elseif $consensual is 0>>
		<<set $pullaway to 0>>
		<<set $novaginal to 0>>
		<<set $noanal to 0>>
		<<set $nopenile to 0>>
		<<if $control gt 1>>
			<<if $molesttrait gte 1 and $rapeavoid is 1>>
			<<else>>
				<<set $controlstart to $control>><<control -25>>
				<<if $control gte ($controlmax * 0.74)>>
					<span class="purple">통제감이 약해진다.</span>
				<<elseif $control gte ($controlmax * 0.49)>>
					<span class="purple">통제감이 흔들린다.</span>
				<<elseif $control gte ($controlmax * 0.24)>>
					<span class="pink">통제감에 금이 간다.</span>
				<<elseif $control gte 1>>
					<span class="pink">통제감이 부서져내린다.</span>
				<<else>>
					<span class="red">통제감이 산산조각난다.</span>
				<</if>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "beastescape">>
	<<trauma 12>><<pain 6>><<stress 12>>
	<<set $worn.over_lower.integrity -= 20>>
	<<set $worn.over_upper.integrity -= 20>>
	<<set $worn.lower.integrity -= 20>>
	<<set $worn.upper.integrity -= 20>>
	<<set $worn.under_lower.integrity -= 20>>
	<<set $worn.under_upper.integrity -= 20>>
	<<bruise full>>
	<<gtrauma>><<gpain>><<gstress>>
<</widget>>

<<widget "weatherdisplay">>
	<<set _season to (Time.season == "winter" ? "_winter" : "")>>
	<<set _weather_display to (Time.season == "winter" ? "winter" : "normal")>>
	<<if $options.images is 1>>
		<<if Time.dayState is "night" and (Time.isBloodMoon() or $forcedBloodmoon)>>
			<<set _dayStateWithBloodMoon to "_bloodmoon">>
		<<else>>
			<<set _dayStateWithBloodMoon to "_"+Time.dayState>>
		<</if>>
		<<set _dayState to "_"+Time.dayState>>

		<<set _imgLoc to 'img/misc/'>>
		<<set _imgSky to 'img/misc/old/'>>

		/* sky (upmost part) */
		<<if $location is "tentworld">>
			<<set _skybox to "skybox" + _dayState + "_tentacle">>
		<<else>>
			<<set _skybox to "skybox" + _dayStateWithBloodMoon>>
			<<if $location is "bog">><<set _skybox += "_haze">><</if>>
			<img id="daystate" @src="_imgSky + 'sun' + _dayState + '.png'">
			<img id="daystate" @src="_imgSky + 'moon' + _dayStateWithBloodMoon + '.png'">
		<</if>>

		<div @class="_skybox">
		</div>

		/* weather (middle part) */
		<<if $location isnot "tentworld">>
			<<if Weather.precipitation is "rain">>
				<img id="weather" @src="_imgSky + 'rain' + _dayState + '.gif'">
			<<elseif Weather.precipitation is "snow">>
				<img id="weather" @src="_imgSky + 'snow' + _dayState + '.gif'">
			<<elseif Weather.isOvercast>>
				<img id="weather" @src="_imgSky + 'overcast' + _dayState + _season + '.png'">
			<</if>>
		<</if>>

		/* location (bottom part) */
		/* For backward compatibility during transition period */
		<<script>>
			const path = "img/misc/locations/";
			const location = setup.Locations.get();
			const loc = setup.LocationImages[location];
			T.images = [];

			const imagesToCheck = loc.base ? Object.values(loc.base) : Object.entries(loc.reflective).filter(([key]) => key !== "mask").map(([key, value]) => value);
			imagesToCheck.forEach(item => {
				if (item.condition && !item.condition()) return;

				const imagePath = typeof item === "string" ? item : item.image;
				T.images.push(imagePath instanceof Image ? imagePath.src : `${path}${loc.folder}/${imagePath}`);
			});
		<</script>>

		<div id="oldlocation">
			<<for _img range _images>>
				<img id="oldlocationimg" @src="_img">
			<</for>>
		</div>

	<<else>>
		<<switch Time.dayState>>
			<<case "day">>
				<<switch Weather.name>>
					<<case "clear" "lightClouds">>밝고 화창한 날이다.
					<<case "lightPrecipitation" "heavyPrecipitation" "thunderStorm">>
						<<if Weather.precipitation is "rain">>
							비가 오는 날이다.
						<<else>>
							눈이 오는 날이다.
						<</if>>
					<<case "heavyClouds">>구름이 태양을 가리고 있다.
				<</switch>>
			<<case "night">>
				<<switch Weather.name>>
					<<case "clear" "lightClouds">>별들이 반짝이고 있다.
					<<case "lightPrecipitation" "heavyPrecipitation" "thunderStorm">>
						<<if Weather.precipitation is "rain">>
							비가 오는 밤이다.
						<<else>>
							눈이 오는 밤이다.
						<</if>>
					<<case "heavyClouds">>모든 별빛이 구름에 가려져 있다.
				<</switch>>
			<<case "dawn">>
				<<switch Weather.name>>
					<<case "clear" "lightClouds">>태양이 떠오르고 있다.
					<<case "lightPrecipitation" "heavyPrecipitation" "thunderStorm">>
					<<if Weather.precipitation is "rain">>
						비가 오는 아침이다.
					<<else>>
						눈이 오는 아침이다.
					<</if>>
					<<case "heavyClouds">>구름 낀 아침이다.
				<</switch>>
			<<case "dusk">>
				<<switch Weather.name>>
					<<case "clear" "lightClouds">>태양이 지고 있다.
					<<case "lightPrecipitation" "heavyPrecipitation" "thunderStorm">>
					<<if Weather.precipitation is "rain">>
						비가 오는 저녁이다.
					<<else>>
						눈이 오는 저녁이다.
					<</if>>
					<<case "heavyClouds">>구름 낀 저녁이다.
				<</switch>>
		<</switch>>
		<br>
	<</if>>
<</widget>>


<<widget "wearandtear">>
	<<if _args[0] is "dance">>
		<<if !$worn.over_upper.type.includes("dance")>>
			<<set $worn.over_upper.integrity -= 1>>
		<</if>>
		<<if !$worn.over_lower.type.includes("dance")>>
			<<set $worn.over_lower.integrity -= 1>>
		<</if>>
		<<if !$worn.upper.type.includes("dance")>>
			<<set $worn.upper.integrity -= 1>>
		<</if>>
		<<if !$worn.lower.type.includes("dance")>>
			<<set $worn.lower.integrity -= 1>>
		<</if>>
		<<if !$worn.under_lower.type.includes("dance")>>
			<<set $worn.under_lower.integrity -= 1>>
		<</if>>
		<<if !$worn.under_upper.type.includes("dance")>>
			<<set $worn.under_upper.integrity -= 1>>
		<</if>>
	<<else>>
		<<set $worn.over_upper.integrity -= 1>><<set $worn.over_lower.integrity -= 1>><<set $worn.upper.integrity -= 1>><<set $worn.lower.integrity -= 1>><<set $worn.under_lower.integrity -= 1>><<set $worn.under_upper.integrity -= 1>>
	<</if>>
<</widget>>

<<widget "dry_towel">>
	<<dry_full>>
	<<exposure>>
	<<if $exposed gte 1>>
		<<towelup>>
	<</if>>
<</widget>>

<<widget "towelup">>
	<<if $exposed gte 1>>
		<<if $upperwetstage gte 3 and !$worn.under_upper.type.includes("covered") or $underupperwetstage gte 3 and $worn.under_upper.type.includes("covered")>>
			<<upperwear 3>>
		<</if>>
		<<if $lowerwetstage gte 3 and !$worn.under_lower.type.includes("covered") or $underlowerwetstage gte 3 and $worn.under_lower.type.includes("covered")>>
			<<lowerwear 3>>
		<</if>>
		<<if $worn.upper.exposed gte 1 and !$worn.under_upper.type.includes("covered")>>
			<<upperwear 14>>
		<<elseif $worn.lower.exposed gte 1 and !$worn.under_lower.type.includes("covered")>>
			<<lowerwear 3>>
		<</if>>
	<</if>>
<</widget>>

<<widget "towelupm">>
	<<if $exposed gte 1>>
		<<if $lowerwetstage gte 3 and !$worn.under_lower.type.includes("covered")>>
			<<lowerwear 3>>
		<</if>>
		<<if $worn.lower.exposed gte 1 and !$worn.under_lower.type.includes("covered")>>
			<<lowerwear 3>>
		<</if>>
	<</if>>
<</widget>>

<<widget "ragup">>
<<if $worn.upper.exposed gte 2>>
	<<upperwear 79>>
<</if>>

<<if $worn.lower.exposed gte 2>>
	<<lowerwear 71>>
<</if>>
<</widget>>

<<widget "plantupper">>
	<<if $worn.upper.exposed gte 2 and $worn.under_upper.exposed gte 1
	or $worn.upper.exposed gte 2 and $underupperwetstage gte 3
	or $upperwetstage gte 3 and $worn.under_upper.exposed gte 1
	or $upperwetstage gte 3 and $underupperwetstage gte 3
	or _args[0] is "force">>
		<<upperwear 6>>
	<</if>>
<</widget>>

<<widget "plantlower">>
	<<if $worn.lower.exposed gte 2 and $worn.under_lower.exposed gte 1
	or $worn.lower.exposed gte 2 and $underlowerwetstage gte 3
	or $lowerwetstage gte 3 and $worn.under_lower.exposed gte 1
	or $lowerwetstage gte 3 and $underlowerwetstage gte 3
	or _args[0] is "force">>
		<<lowerwear 8>>
	<</if>>
<</widget>>

<<widget "plantup">>
	<<if $worn.upper.exposed gte 2 and $worn.under_upper.exposed gte 1 or $upperwetstage gte 3 and $underupperwetstage gte 3>>
		<<upperwear 6>>
	<</if>>
	<<if $worn.lower.exposed gte 2 and $worn.under_lower.exposed gte 1 or $lowerwetstage gte 3 and $underlowerwetstage gte 3 or $lowerwetstage gte 3 and $worn.under_lower.exposed gte 1>>
		<<lowerwear 8>>
	<</if>>
<</widget>>

<<widget "schoolspareclothes">>
	<<if !$worn.upper.type.includes("school") or !$worn.lower.type.includes("school") and $worn.upper.set is $worn.lower.set>>
		<<upperwear 5>><<set $worn.upper.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.upper.integrity /= 2>>
	<</if>>
	<<if !$worn.lower.type.includes("school")>>
		<<if $clothingselector is "m">>
			<<lowerwear 6>><<set $worn.lower.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.lower.integrity /= 2>>
		<<else>>
			<<lowerwear 7>><<set $worn.lower.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.lower.integrity /= 2>>
		<</if>>
	<</if>>
<</widget>>

<<widget "spareschoolswimsuit">>
	<<underupperwear 2>><<set $worn.under_upper.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.under_upper.integrity /= 2>>
	<<set $worn.under_lower.colour to clone($worn.under_upper.colour)>><<set $worn.under_lower.integrity /= 2>>
<</widget>>

<<widget "spareschoolswimshorts">>
	<<underlowerwear 7>><<set $worn.under_lower.colour to either("black", "blue", "brown", "green", "pink", "purple", "red", "tangerine", "teal", "white", "yellow")>><<set $worn.under_lower.integrity /= 2>>
<</widget>>

<<widget "exposure">>
	<!-- In safe locations, while alone, the player won't cover up. Love interest check is likely not hitting everywhere it should be due to NPCs generating after this check. -->
	<<if ["Bedroom", "Sleep", "Bird Tower", "Bird Hunt"].some(keyword => V.passage.includes(keyword)) and !($NPCList.some(obj => Object.hasOwn(obj, "type")) and !$NPCList.find(({fullDescription:fd}) => fd && Object.values($loveInterest).includes(fd)))>>
		<<set $libertine to 2>>
	<<else>>
		<<set $libertine to 0>>
		<<if !["beach","pool","sea","lake","lake_ruin"].includes($location)>>
			<<set $libertine to 0>>
		<<else>>
			<<set $libertine to 1>>
		<</if>>
		<<if $location is "dance_studio" and $worn.under_lower.type.includes("dance") and $worn.under_upper.type.includes("dance")>>
			<<set $libertine to 1>>
		<</if>>
	<</if>>


	<<set $worn.over_upper.exposedcarry to $worn.over_upper.exposed>>
	<<set $worn.over_lower.exposedcarry to $worn.over_lower.exposed>>
	<<set $worn.upper.exposedcarry to $worn.upper.exposed>>
	<<set $worn.lower.exposedcarry to $worn.lower.exposed>>
	<<set $worn.under_lower.exposedcarry to $worn.under_lower.exposed>>
	<<set $worn.under_upper.exposedcarry to $worn.under_upper.exposed>>

	<<if $upperwetstage gte 3>>
		<<set $worn.upper.exposed to 2>>
	<</if>>
	<<if $lowerwetstage gte 3>>
		<<set $worn.lower.exposed to 2>>
	<</if>>
	<<if $underlowerwetstage gte 3>>
		<<set $worn.under_lower.exposed to 1>>
	<</if>>
	<<if $underupperwetstage gte 3>>
		<<set $worn.under_upper.exposed to 1>>
	<</if>>

	<<exposedcheck>>

	<<set $exposed to 0>>
	<<if $worn.upper.exposed gte 1 and $worn.over_upper.exposed gte 1>>
		<<if $player.gender_appearance is "m">>
		<<elseif $libertine gte 1 or $possessed or $worn.under_upper.type.includes("covered") or $worn.lower.type.includes("covered")>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<</if>>
	<<if $worn.upper.exposed gte 2 and $worn.over_upper.exposed gte 2 and $player.gender_appearance isnot "m">>
		<<if $possessed>>
		<<elseif $worn.under_upper.type.includes("covered") or $worn.lower.type.includes("covered")>>
		<<elseif $libertine is 1>>
			<<set $topless to 1>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<<else>>
		<<set $topless to 0>>
	<</if>>
	<<if $worn.lower.exposed gte 1 and $worn.over_lower.exposed gte 1>>
		<<if $libertine gte 1 or $possessed or $worn.under_lower.type.includes("covered")>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<</if>>

	<<if $worn.lower.exposed gte 2 and $worn.over_lower.exposed gte 2>>
		<<if $possessed>>
		<<elseif $worn.under_lower.exposed gte 1>>
			<<set $exposed to 2>>
		<<elseif $libertine gte 1 or $worn.under_lower.type.includes("covered")>>
		<<else>>
			<<set $exposed to 1>>
		<</if>>
	<</if>>

	<<set $worn.over_upper.exposed to $worn.over_upper.exposedcarry>>
	<<set $worn.over_lower.exposed to $worn.over_lower.exposedcarry>>
	<<set $worn.upper.exposed to $worn.upper.exposedcarry>>
	<<set $worn.lower.exposed to $worn.lower.exposedcarry>>
	<<set $worn.under_lower.exposed to $worn.under_lower.exposedcarry>>
	<<set $worn.under_upper.exposed to $worn.under_upper.exposedcarry>>
<</widget>>

<<widget "integritycheck">>
	<<outfitChecks>>
	<<if $worn.over_upper.name isnot "naked">>
		<<if $worn.over_upper.integrity lte 0>>
			<<set $worn.over_upper.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">당신의 <<trClothes "over_upper" $worn.over_upper.name "name" "이">>_trResult 조각조각 찢어<<if $worn.upper.exposed gte 2>>지며, <<undertop_ ul>> 노출시킨다<<else>>진다<</if>>.</span>
				<br>
			<</if>>
		<<overupperruined>><<clothesruinstat>><<if $worn.upper.exposed gte 2>><<set $upperoff to 0>><</if>>
		<</if>>
	<</if>>
	<<if $worn.over_lower.name isnot "naked">>
		<<if $worn.over_lower.integrity lte 0>>
			<<set $worn.over_lower.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">당신의 <<trClothes "over_lower" $worn.over_lower.name "name" "이">>_trResult 조각조각 찢어<<if $worn.lower.exposed gte 2>>지며, <<undiesPost "을">> 노출시킨다<<else>>진다<</if>>.</span>
				<br>
			<</if>>
		<<overlowerruined>><<clothesruinstat>><<if $worn.lower.exposed gte 2>><<set $upperoff to 0>><</if>>
		<</if>>
	<</if>>
	<<if $worn.upper.name isnot "naked">>
		<<if $worn.upper.integrity lte 0>>
			<<set $worn.upper.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">당신의 <<trClothes "upper" $worn.upper.name "name" "이">>_trResult 조각조각 찢어지며, <<undertop_ ul>> 노출시킨다.</span>
				<br>
			<</if>>
		<<upperruined>><<clothesruinstat>><<set $upperoff to 0>>
		<</if>>
	<</if>>
	<<if $worn.lower.name isnot "naked">>
		<<if $worn.lower.integrity lte 0>>
			<<set $worn.lower.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd">당신의 <<trClothes "lower" $worn.lower.name "name" "이">>_trResult 조각조각 찢어지며, <<undiesPost "을">> 노출시킨다.</span>
				<br>
			<</if>>
		<<lowerruined>><<clothesruinstat>><<set $loweroff to 0>>
		<</if>>
	<</if>>
	<<if $worn.under_upper.name isnot "naked">>
		<<if $worn.under_upper.integrity lte 0>>
			<<set $worn.under_upper.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd"><<trClothes "under_upper" $worn.under_upper.name "name" "이">>_trResult 조각조각 찢어지며, <<breastsPost "을">> 노출시킨다.</span>
				<br>
			<</if>>
		<<underupperruined>><<clothesruinstat>><<set $underupperoff to 0>>
		<</if>>
	<</if>>
	<<if $worn.under_lower.name isnot "naked">>
		<<if $worn.under_lower.integrity lte 0>>
			<<set $worn.under_lower.type.push("broken")>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd"><<trClothes "under_lower" $worn.under_lower.name "name" "이">>_trResult 조각조각 찢어지며, <<if $worn.genitals.name isnot "naked">><<trClothes "genitals" $worn.genitals.name "name" "을">>_trResult<<else>><<genitalsPost "을">><</if>> 노출시킨다.</span>
				<br>
			<</if>>
		<<underlowerruined>><<clothesruinstat>><<set $underloweroff to 0>>
		<</if>>
	<</if>>
	<<if $worn.genitals.name isnot "naked">>
		<<if $worn.genitals.integrity lte 0>>
			<<set _chastityBreak to 1>>
			<<if _args[0] isnot "no_text">>
				<span class="lewd"><<trClothes "genitals" $worn.genitals.name "name" "이">>_trResult 부서지며, <<if $penisexist is 1>><<penisPost "을">><<else>><<pussyPost "을">><</if>> 노출시킨다.</span>
				<br>
			<</if>>
			<<if playerChastity()>>
				<<set $worn.genitals.type.push("broken")>>
				<<if $vaginalchastityparasite isnot 0>>
					<span class="pink"><<worn_genitals_name_ i>> 사라지자, <<trParasite $vaginalchastityparasite "이">>_trResult 당신의 보지에서 떨어진다.</span>
					<br>
					<<set $vaginalchastityparasite to 0>>
				<</if>>
				<<if $penilechastityparasite isnot 0>>
					<span class="pink"><<worn_genitals_name_ i>> 사라지자, <<trParasite  $penilechastityparasite "이">>_trResult 당신의 자지에서 떨어진다.</span>
					<br>
					<<set $penilechastityparasite to 0>>
				<</if>>
				<<if $analchastityparasite isnot 0>>
					<span class="pink"><<worn_genitals_name_ i>> 사라지자, <<trParasite  $analchastityparasite "이">>_trResult 당신의 항문에서 떨어진다.</span>
					<br>
					<<set $analchastityparasite to 0>>
				<</if>>
				<<if playerChastity("anus")>>
					<<set $worn.genitals.anal_shield to 0>>
				<</if>>
			<</if>>
			<<genitalsruined>><<clothesruinstat>>
		<</if>>
	<</if>>
<</widget>>

<<widget "arm_unbind">>
	<<set $rightboundcarry to 0>>
	<<set $leftboundcarry to 0>>
	<<set $leftarm to 0>>
	<<set $rightarm to 0>>
	<<if $worn.upper.type.includes("binding")>>
		<<set _unbind_check to 1>>
		<<if $worn.upper.set is $worn.lower.set>>
			<<set $worn.lower.type.push("broken")>>
			<<lowerruined>>
		<</if>>
		<<set $worn.upper.type.push("broken")>>
		<<upperruined>>
	<</if>>
<</widget>>

<<widget "unbind">>
	/*<<unbind>> is only used for the player unbinding their arms after they've been tied with rope. it will destroy handheld items. do not use it for unbinding arms after they've been temporarily restrained; use <<unbindtemp>> instead*/
	<<if $rightarm is "bound" and $worn.handheld.name isnot "naked">>
		<<handheldruined>>
	<</if>>
	<<set $rightboundcarry to 0>>
	<<set $leftboundcarry to 0>>
	<<set $leftarm to 0>>
	<<set $rightarm to 0>>
	<<remove_shackle>>
	<<leg_unbind>>
	<<if $head is "bound">>
		<<set $head to 0>>
	<</if>>
	<<if $worn.upper.type.includes("binding")>>
		<<set _unbind_check to 1>>
		<<if $worn.upper.set is $worn.lower.set>>
			<<set $worn.lower.type.push("broken")>>
			<<lowerruined>>
		<</if>>
		<<set $worn.upper.type.push("broken")>>
		<<upperruined>>
	<</if>>
<</widget>>

<<widget "unbindtemp">>
	<<set $rightboundcarry to 0>>
	<<set $leftboundcarry to 0>>
	<<set $leftarm to 0>>
	<<set $rightarm to 0>>
	<<remove_shackle>>
	<<leg_unbind>>
	<<if $head is "bound">>
		<<set $head to 0>>
	<</if>>
<</widget>>

<<widget "bind">>
	/*<<bind>> and <<unbind>> are only used for binding the player's arms with rope. they are only meant to be used for scenes where the player is left helpless and must undo their bindings elsewhere, forcing them to leave behind their handheld items. Use <<bindtemp>> and <<unbindtemp>> for temporarily binding arms.*/
	<<if _args[0]>>
		<<set _args[0] to "bound">>
		<<if $rightarm is "bound" and $worn.handheld.name isnot "naked">>
			<<handheldruined>>
		<</if>>
	<<else>>
		<<set $leftarm to "bound">>
		<<set $rightarm to "bound">>
		<<if $worn.handheld.name isnot "naked">>
			<<handheldruined>>
		<</if>>
	<</if>>
<</widget>>

<<widget "bindtemp">>
	<<set $leftarm to "bound">>
	<<set $rightarm to "bound">>
<</widget>>

<<widget "legbind">>
	<<set $leftleg to "bound">>
	<<set $rightleg to "bound">>
	<<set $feetuse to "bound">>
<</widget>>

<<widget "leg_unbind">>
	<<set $leftleg to 0>>
	<<set $rightleg to 0>>
	<<set $feetuse to 0>>
<</widget>>

<<widget "remove_shackle">>
	<<if $worn.feet.type.includes("shackle")>>
		<<set $worn.feet.type.push("broken")>>
		<<feetruined>>
		<<leg_unbind>>
	<</if>>
<</widget>>

<<widget "shackle_feet">>
	<<feetwear 3>>
	<<legbind>>
<</widget>>

<<widget "headbind">>
	<<set $head to "bound">>
<</widget>>

<<widget "bindings">>
	<<if $leftarm is "bound" and $position isnot "wall">><<set $leftboundcarry to 1>><</if>>
	<<if $rightarm is "bound" and $position isnot "wall">><<set $rightboundcarry to 1>><</if>>
	<<if $rightboundcarry is 1 and $rightarm isnot "bound">>
		<<set $rightarm to "bound">>
	<</if>>
	<<if $leftboundcarry is 1 and $leftarm isnot "bound">>
		<<set $leftarm to "bound">>
	<</if>>
<</widget>>

<<widget "water">>
	<<set _inWater to true>>
	<<if !waterproofCheck($worn.over_upper) and !$worn.over_upper.type.includes("naked") and _args[0] isnot "waist">>
		<<set $upperwet to 200>>
	<</if>>
	<<if !waterproofCheck($worn.upper) and !$worn.upper.type.includes("naked") and _args[0] isnot "waist">>
		<<set $upperwet to 200>>
	<</if>>
	<<if !waterproofCheck($worn.lower) and !$worn.lower.type.includes("naked")>>
		<<set $lowerwet to 200>>
	<</if>>
	<<if !waterproofCheck($worn.upper) and !waterproofCheck($worn.under_upper) and !$worn.under_upper.type.includes("naked") and _args[0] isnot "waist">>
		<<set $underupperwet to 200>>
	<</if>>
	<<if !waterproofCheck($worn.lower) and !waterproofCheck($worn.under_lower) and !$worn.under_lower.type.includes("naked")>>
		<<set $underlowerwet to 200>>
	<</if>>

	<<waterwash>>
<</widget>>

<<widget "wet_all">>
	<<wet_upper>>
	<<wet_lower>>
<</widget>>

<<widget "wet_upper">>
	<<for _slot range ["over_upper", "upper", "under_upper"]>>
		<<if waterproofCheck($worn[_slot])>>
			/* if the clothing is waterproof, protect it and layers below from getting wet */
			<<break>>
		<<elseif !$worn[_slot].type.includes("naked")>>
			/* skin wetness system is not implemented... yet? */
			<<set V[_slot + "wet"] to 200>>
			<<set V[_slot + "wetstage"] to 3>>
		<</if>>
	<</for>>
<</widget>>

<<widget "wet_lower">>
	<<for _slot range ["over_lower", "lower", "under_lower"]>>
		<<if waterproofCheck($worn[_slot])>>
			<<break>>
		<<elseif !$worn[_slot].type.includes("naked")>>
			<<set V[_slot + "wet"] to 200>>
			<<set V[_slot + "wetstage"] to 3>>
		<</if>>
	<</for>>
<</widget>>

<<widget "storecleanup">>
	<<unset $action_unclad_over_outfit>>
	<<unset $action_unclad_over_upper>>
	<<unset $action_unclad_over_lower>>
	<<unset $action_unclad_outfit>>
	<<unset $action_unclad_upper>>
	<<unset $action_unclad_lower>>
	<<unset $action_unclad_under_outfit>>
	<<unset $action_unclad_under_lower>>
	<<unset $action_unclad_under_upper>>
	<<unset $action_unclad_legs>>
	<<unset $action_unclad_feet>>
	<<unset $action_unclad_neck>>
	<<unset $action_unclad_head>>
	<<unset $action_unclad_face>>
	<<unset $action_unclad_hands>>
<</widget>>

<<widget "undiestrauma">>
	<<if !$worn.under_lower.type.includes("naked")>>
		<<gtrauma>><<gstress>><<trauma 1>><<stress 1>>
	<<else>>
		<<gtrauma>><<gstress>><<trauma 3>><<stress 3>>
	<</if>>
<</widget>>

<<widget "goo">>
	<<goocount>>

	<<if $liquidoutsidecount gte 1>>
		<!-- Variables constructed: $semenoutsidecount, $goooutsidecount, $nectaroutsidecount -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V[stuff + "outsidecount"] gte 1)
			.join(',').replace(/([^,]+)(,|$)/g, (match, p1, p2) => {return {"semen": "정액", "goo": "점액", "nectar": "꿀"}[p1] + p2}).split(','))
		>><<set _trResult to _liquid>><<trPost _postNum "으로">><<set _liquid_ro to _trResult>>
		<<if $liquidoutsidecount gte 100>>
			<span class="red">머리부터 발 끝까지 음란한 액체로 흠뻑 젖었다.</span>
			<br>
		<<elseif $liquidoutsidecount gte 25>>
			<span class="pink">몸이 _liquid_ro 흠뻑 젖었다.</span>
			<br>
		<<elseif $liquidoutsidecount gte 20>>
			<span class="purple">몸이 _liquid 투성이다.</span>
			<br>
		<<elseif $liquidoutsidecount gte 15>>
			<span class="purple">피부가 _liquid_ro 미끌미끌하다.</span>
			<br>
		<<elseif $liquidoutsidecount gte 10>>
			<span class="purple">몸이 _liquid_ro 젖었다.</span>
			<br>
		<<elseif $liquidoutsidecount gte 5>>
			<span class="purple">피부가 _liquid_ro 축축하다.</span>
			<br>
		<<elseif $liquidoutsidecount gte 1>>
			<span class="blue">피부에 _liquid이 묻은 느낌이 든다.</span>
			<br>
		<</if>>
	<</if>>

	<<if $player.bodyliquid.vagina.goo gte 1 or $player.bodyliquid.vagina.semen gte 1 or $player.bodyliquid.vagina.nectar>>
		<!-- Variables constructed: $player.bodyliquid.vagina.semen, $player.bodyliquid.vagina.goo, $player.bodyliquid.vagina.nectar -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V.player.bodyliquid.vagina[stuff] gte 1)
			.join(',').replace(/([^,]+)(,|$)/g, (match, p1, p2) => {return {"semen": "정액", "goo": "점액", "nectar": "꿀"}[p1] + p2}).split(','))
		>><<set _trResult to _liquid>><<trPost _postNum "으로">><<set _liquid_ro to _trResult>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<if _liquid.includes(" ")>>
			<<set _s to "">>
		<<else>>
			<<set _s to "s">>
		<</if>>
		<<switch Math.clamp(setup.bodyliquid.combined("vagina"), 1, 5)>>
			<<case 5>>
				<span class="red">자궁에서 _liquid이 흘러넘친다.</span>
				<br>
			<<case 4>>
				<span class="pink"><<pussyPost "에서">> _liquid이 흘러넘친다.</span>
				<br>
			<<case 3>>
				<span class="pink"><<pussyPost "에서">> _liquid이 흘러나온다.</span>
				<br>
			<<case 2>>
				<span class="pink"><<pussyPost "에서">> _liquid이 새어나온다.</span>
				<br>
			<<case 1>>
				<span class="pink"><<pussyPost "에서">> _liquid이 방울방울 떨어진다.</span>
				<br>
		<</switch>>
	<</if>>

	<<if $player.bodyliquid.anus.goo gte 1 or $player.bodyliquid.anus.semen gte 1 or $player.bodyliquid.anus.nectar>>
		<!-- Variables constructed: $player.bodyliquid.anus.semen, $player.bodyliquid.anus.goo, $player.bodyliquid.anus.nectar -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V.player.bodyliquid.anus[stuff] gte 1)
			.join(',').replace(/([^,]+)(,|$)/g, (match, p1, p2) => {return {"semen": "정액", "goo": "점액", "nectar": "꿀"}[p1] + p2}).split(','))
		>><<set _trResult to _liquid>><<trPost _postNum "으로">><<set _liquid_ro to _trResult>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<if _liquid.includes(" ")>>
			<<set _s to "">>
		<<else>>
			<<set _s to "s">>
		<</if>>
		<<switch Math.clamp(setup.bodyliquid.combined("anus"), 1, 5)>>
			<<case 5>>
				<span class="red">장에서 _liquid이 흘러넘친다.</span>
				<br>
			<<case 4>>
				<span class="pink"><<bottomPost "에서">> _liquid이 흘러넘친다.</span>
				<br>
			<<case 3>>
				<span class="pink"><<bottomPost "에서">> _liquid이 흘러나온다.</span>
				<br>
			<<case 2>>
				<span class="pink"><<bottomPost "에서">> _liquid이 새어나온다.</span>
				<br>
			<<case 1>>
				<span class="pink"><<bottomPost "에서">> _liquidUpper이 방울방울 떨어진다.</span>
				<br>
		<</switch>>
	<</if>>

	<<if $player.bodyliquid.mouth.goo gte 1 or $player.bodyliquid.mouth.semen gte 1 or $player.bodyliquid.mouth.nectar>>
		<!-- Variables constructed: $player.bodyliquid.mouth.semen, $player.bodyliquid.mouth.goo, $player.bodyliquid.mouth.nectar -->
		<<set _liquid to formatList(
			["semen", "goo", "nectar"].filter(stuff => V.player.bodyliquid.mouth[stuff] gte 1)
			.join(',').replace(/([^,]+)(,|$)/g, (match, p1, p2) => {return {"semen": "정액", "goo": "점액", "nectar": "꿀"}[p1] + p2}).split(','))
		>><<set _trResult to _liquid>><<trPost _postNum "으로">><<set _liquid_ro to _trResult>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<if _liquid.includes(" ")>>
			<<set _s to "">>
		<<else>>
			<<set _s to "s">>
		<</if>>
		<<set _liquidUpper to _liquid.toUpperFirst()>>
		<<switch Math.clamp(setup.bodyliquid.combined("mouth"), 1, 5)>>
			<<case 5>>
				<span class="red">기침할 때마다 _liquid이 터져 나온다.</span>
				<br>
			<<case 4>>
				<span class="pink">_liquid이 턱을 타고 흘러내린다.</span>
				<br>
			<<case 3>>
				<span class="pink">_liquid이 목구멍 벽을 타고 흘러내린다.</span>
				<br>
			<<case 2>>
				<span class="pink">_liquid이 목구멍 뒤쪽에 켜켜히 쌓인다.</span>
				<br>
			<<case 1>>
				<span class="pink">_liquid의 맛이 입 속에 퍼진다.</span>
				<br>
		<</switch>>
	<</if>>
<</widget>>

<<widget "clampgoo">>
	<<for _bodypart range setup.bodyliquid.bodyparts>>
		<<set $player.bodyliquid[_bodypart]["goo"] to Math.clamp($player.bodyliquid[_bodypart]["goo"], 0, 5)>>
		<<set $player.bodyliquid[_bodypart]["semen"] to Math.clamp($player.bodyliquid[_bodypart]["semen"], 0, 5)>>
		<<set $player.bodyliquid[_bodypart]["nectar"] to Math.clamp($player.bodyliquid[_bodypart]["nectar"], 0, 5)>>
	<</for>>
<</widget>>

<<widget "goocount">>
	<<clampgoo>>
	<<set $goocount to $player.bodyliquid.neck.goo + $player.bodyliquid.rightarm.goo + $player.bodyliquid.leftarm.goo + $player.bodyliquid.thigh.goo + $player.bodyliquid.bottom.goo + $player.bodyliquid.tummy.goo + $player.bodyliquid.chest.goo + $player.bodyliquid.face.goo + $player.bodyliquid.hair.goo + $player.bodyliquid.feet.goo + $player.bodyliquid.vaginaoutside.goo + ($player.bodyliquid.vagina.goo * 3) + ($player.bodyliquid.penis.goo * 3) + ($player.bodyliquid.anus.goo * 3) + ($player.bodyliquid.mouth.goo * 3)>>
	<<set $semencount to $player.bodyliquid.neck.semen + $player.bodyliquid.rightarm.semen + $player.bodyliquid.leftarm.semen + $player.bodyliquid.thigh.semen + $player.bodyliquid.bottom.semen + $player.bodyliquid.tummy.semen + $player.bodyliquid.chest.semen + $player.bodyliquid.face.semen + $player.bodyliquid.hair.semen + $player.bodyliquid.feet.semen + $player.bodyliquid.vaginaoutside.semen + ($player.bodyliquid.vagina.semen * 3) + ($player.bodyliquid.penis.semen * 3) + ($player.bodyliquid.anus.semen * 3) + ($player.bodyliquid.mouth.semen * 3)>>
	<<set $nectarcount to $player.bodyliquid.neck.nectar + $player.bodyliquid.rightarm.nectar + $player.bodyliquid.leftarm.nectar + $player.bodyliquid.thigh.nectar + $player.bodyliquid.bottom.nectar + $player.bodyliquid.tummy.nectar + $player.bodyliquid.chest.nectar + $player.bodyliquid.face.nectar + $player.bodyliquid.hair.nectar + $player.bodyliquid.feet.nectar + $player.bodyliquid.vaginaoutside.nectar + ($player.bodyliquid.vagina.nectar * 3) + ($player.bodyliquid.penis.nectar * 3) + ($player.bodyliquid.anus.nectar * 3) + ($player.bodyliquid.mouth.nectar * 3)>>
	<<set $liquidcount to $goocount + $semencount + $nectarcount>>

	<<set $goooutsidecount to $player.bodyliquid.neck.goo + $player.bodyliquid.rightarm.goo + $player.bodyliquid.leftarm.goo + $player.bodyliquid.thigh.goo + $player.bodyliquid.bottom.goo + $player.bodyliquid.tummy.goo + $player.bodyliquid.chest.goo + $player.bodyliquid.face.goo + $player.bodyliquid.hair.goo + $player.bodyliquid.feet.goo + $player.bodyliquid.vaginaoutside.goo + ($player.bodyliquid.penis.goo * 3)>>
	<<set $semenoutsidecount to $player.bodyliquid.neck.semen + $player.bodyliquid.rightarm.semen + $player.bodyliquid.leftarm.semen + $player.bodyliquid.thigh.semen + $player.bodyliquid.bottom.semen + $player.bodyliquid.tummy.semen + $player.bodyliquid.chest.semen + $player.bodyliquid.face.semen + $player.bodyliquid.hair.semen + $player.bodyliquid.feet.semen + $player.bodyliquid.vaginaoutside.semen + ($player.bodyliquid.penis.semen * 3)>>
	<<set $nectaroutsidecount to $player.bodyliquid.neck.nectar + $player.bodyliquid.rightarm.nectar + $player.bodyliquid.leftarm.nectar + $player.bodyliquid.thigh.nectar + $player.bodyliquid.bottom.nectar + $player.bodyliquid.tummy.nectar + $player.bodyliquid.chest.nectar + $player.bodyliquid.face.nectar + $player.bodyliquid.hair.nectar + $player.bodyliquid.feet.nectar + $player.bodyliquid.vaginaoutside.nectar + ($player.bodyliquid.penis.nectar * 3)>>
	<<set $liquidoutsidecount to $goooutsidecount + $semenoutsidecount + $nectaroutsidecount>>

	<<set $goobodycount to $player.bodyliquid.thigh.goo + $player.bodyliquid.bottom.goo + $player.bodyliquid.tummy.goo + $player.bodyliquid.chest.goo + $player.bodyliquid.vaginaoutside.goo + ($player.bodyliquid.vagina.goo * 3) + ($player.bodyliquid.penis.goo * 3) + ($player.bodyliquid.anus.goo * 3)>>
	<<set $semenbodycount to $player.bodyliquid.thigh.semen + $player.bodyliquid.bottom.semen + $player.bodyliquid.tummy.semen + $player.bodyliquid.chest.semen + $player.bodyliquid.vaginaoutside.semen + ($player.bodyliquid.vagina.semen * 3) + ($player.bodyliquid.penis.semen * 3) + ($player.bodyliquid.anus.semen * 3)>>
	<<set $nectarbodycount to $player.bodyliquid.thigh.nectar + $player.bodyliquid.bottom.nectar + $player.bodyliquid.tummy.nectar + $player.bodyliquid.chest.nectar + $player.bodyliquid.vaginaoutside.nectar + ($player.bodyliquid.vagina.nectar * 3) + ($player.bodyliquid.penis.nectar * 3) + ($player.bodyliquid.anus.nectar * 3)>>
	<<set $liquidbodycount to $goobodycount + $semenbodycount + $nectarbodycount>>
<</widget>>

<<widget "outergoo">>
	<<bodyliquid "neck" "goo">>
	<<bodyliquid "rightarm" "goo">>
	<<bodyliquid "leftarm" "goo">>
	<<bodyliquid "thigh" "goo">>
	<<bodyliquid "bottom" "goo">>
	<<bodyliquid "tummy" "goo">>
	<<bodyliquid "chest" "goo">>
	<<bodyliquid "face" "goo">>
	<<bodyliquid "hair" "goo">>
	<<bodyliquid "feet" "goo">>
<</widget>>

<<widget "waist_goo">>
	<<bodyliquid "feet" "goo" 5>>
	<<bodyliquid "bottom" "goo" 5>>
	<<bodyliquid "thigh" "goo" 5>>
	<<if $player.penisExist>>
		<<bodyliquid "penis" "goo" 5>>
	<</if>>
	<<if $player.vaginaExist>>
		<<bodyliquid "vaginaoutside" "goo" 5>>
	<</if>>
<</widget>>

<<widget "random_goo">>
	<<set $_rng to random (0, 9)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "right arm", "left arm", "thigh", "bottom",
		"tummy", "chest", "face", "hair", "feet"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].goo += 1>>

	그것이 당신의 
	<span class="purple"><<trBodypart $_part>>_trResult</span> <<print either("위로 후두둑 떨어진다", "위를 뒤덮는다", "위에 떨어진다", "위에 철벅 떨어진다")>>.
<</widget>>

<<widget "random_semen">>
	<<set $_rng to random (0, 9)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "right arm", "left arm", "thigh", "bottom",
		"tummy", "chest", "face", "hair", "feet"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].semen += 1>>

	그것이 당신의
	<span class="purple"><<trBodypart $_part>>_trResult</span> <<print either("위로 후두둑 떨어진다", "위를 뒤덮는다", "위에 떨어진다", "위에 철벅 떨어진다")>>.
<</widget>>

<<widget "random_goo_head">>
	<<set $_rng to random (0, 3)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "chest", "face", "hair"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].goo += 1>>

	그것이 당신의 
	<span class="purple"><<trBodypart $_part>>_trResult</span> <<print either("위로 후두둑 떨어진다", "위를 뒤덮는다", "위에 떨어진다", "위에 철벅 떨어진다")>>.
<</widget>>

<<widget "random_semen_head">>
	<<set $_rng to random (0, 3)>> <!-- 1-10 but 0 indexed -->
	<<set $_part_text to [
		"neck", "chest", "face", "hair"
		].select($_rng)>>
	<<set $_part to $_part_text.replace(" ","")>>
	<<set $player.bodyliquid[$_part].semen += 1>>

	그것이 당신의 
	<span class="purple"><<trBodypart $_part>>_trResult</span> <<print either("위로 후두둑 떨어진다", "위를 뒤덮는다", "위에 떨어진다", "위에 철벅 떨어진다")>>.
<</widget>>

<<widget "washmakeup">>
	<<if $makeup.lipstick != 0 or $makeup.eyeshadow != 0 or ($makeup.mascara != 0 and !$makeup.mascara.includes('waterproof')) or $makeup.concealer != 0>>
		<<set $makeupWashed = 1>>
		<<set $makeup.lipstick = 0>>
		<<set $makeup.eyeshadow = 0>>
		<<if $makeup.mascara and !$makeup.mascara.includes('waterproof')>>
			<<set $makeup.mascara = 0>>
			<<set $makeup.mascara_running = 0>>
		<</if>>
		<<set $makeup.concealer = 0>>
	<</if>>
<</widget>>

<<widget "waterwash">>
	<<if $combat isnot 1>>
		<<for _bodypart range setup.bodyliquid.bodyparts>>
			<<if $player.bodyliquid[_bodypart]["goo"] gte 1>><<set $waterwash += 1>><<set $allure += 500>><<bodyliquid _bodypart "goo" -1>><</if>>
			<<if $player.bodyliquid[_bodypart]["semen"] gte 1>><<set $waterwash += 1>><<set $allure += 500>><<bodyliquid _bodypart "semen" -1>><</if>>
			<<if $player.bodyliquid[_bodypart]["nectar"] gte 1>><<set $waterwash += 1>><<set $allure += 500>><<bodyliquid _bodypart "nectar" -1>><</if>>
		<</for>>
		<<washRecordedSperm "vagina" "pc">>
		<<washRecordedSperm "anus" "pc">>
	<</if>>

	<<if $waterwash gte 10>>
		<span class="lewd">엄청난 양의 음란한 액체가 물에 씻겨나간다. 이목을 끌지 않길 바랄 뿐이다.</span>
	<<elseif $waterwash gte 5>>
		<span class="lewd">많은 양의 음란한 액체가 물에 씻겨나간다. 이목을 끌지 않길 바랄 뿐이다.</span>
	<<elseif $waterwash gte 2>>
		<span class="lewd">음란한 액체가 물에 씻겨나간다. 이목을 끌지 않길 바랄 뿐이다.</span>
	<<elseif $waterwash is 1>>
		<span class="lewd">약간의 음란한 액체가 물에 씻겨나간다. 이목을 끌지 않길 바랄 뿐이다.</span>
	<</if>>
	<<set $waterwash to 0>>

	<<washmakeup>>
<</widget>>

<<widget "wash">>
	<<washRecordedSperm "vagina" "pc">>
	<<washRecordedSperm "anus" "pc">>
	<<bodyliquid "clear">>
	<<if $parasite.right_thigh.name is "maggot">>
		<<removeparasite right_thigh>>
	<</if>>
	<<if $parasite.left_thigh.name is "maggot">>
		<<removeparasite left_thigh>>
	<</if>>
	<<if $parasite.right_arm.name is "maggot">>
		<<removeparasite right_arm>>
	<</if>>
	<<if $parasite.left_arm.name is "maggot">>
		<<removeparasite left_arm>>
	<</if>>
	<<if $parasite.tummy.name is "maggot">>
		<<removeparasite tummy>>
	<</if>>
	<<if $parasite.bottom.name is "maggot">>
		<<removeparasite bottom>>
	<</if>>

	<<for _active_bodypart range setup.bodyparts>>
		<<if $skin[_active_bodypart].pen is "pen" or $skin[_active_bodypart].pen is "lipstick" or $skin[_active_bodypart].pen is "mud">>
			<<bodywriting_clear _active_bodypart>>
		<</if>>
	<</for>>
	<<washmakeup>>
<</widget>>

<<widget "wash_face">>
	<<bodyliquid "face" "semen" -5>>
	<<bodyliquid "face" "goo" -5>>
	<<bodyliquid "face" "nectar" -5>>
	<<if $skin.left_cheek.pen is "pen" or $skin.left_cheek.pen is "lipstick" or $skin.left_cheek.pen is "mud">>
		<<bodywriting_clear left_cheek>>
	<</if>>
	<<if $skin.right_cheek.pen is "pen" or $skin.right_cheek.pen is "lipstick" or $skin.right_cheek.pen is "mud">>
		<<bodywriting_clear right_cheek>>
	<</if>>
	<<if $skin.forehead.pen is "pen" or $skin.forehead.pen is "lipstick" or $skin.forehead.pen is "mud">>
		<<bodywriting_clear forehead>>
	<</if>>
	<<washmakeup>>
<</widget>>

<<widget "wash_mouth">>
	<<bodyliquid "mouth" "semen" -5>>
	<<bodyliquid "mouth" "goo" -5>>
	<<bodyliquid "mouth" "nectar" -5>>
<</widget>>

<<widget "tipset">>
	<<set $tip to random(1000, 3000)>>
	<<if $tip lte 2000>>
		<<set $tipreaction to "low">>
	<<else>>
		<<set $tipreaction to "mid">>
	<</if>>

	<<if _args[0] is "serving">>
		<!-- +20% for every visible clothing item with 'serving' tag -->
		<<set $_servingClothesCount to getVisibleClothesList().countWith(item => item.type.includes("serving"))>>
		<<set $tip += $tip * 0.2 * $_servingClothesCount>>
	<</if>>

	<<set $tip to $tipmod * $tip>>
	<<set $tip *= (1 + ($attractiveness / 10000))>>
	<<if $mathstrait gte 1>>
		<<set $tip *= (1 + ($mathstrait / 4))>>
	<</if>>

	<<set $tip to Math.trunc($tip)>>
	<<if $tip lt $tip_add>>
		<<set $tip to $tip_add>>
	<</if>>

	<<if $tip gte 10000 and _args[0] isnot "body">>
		<<set $tip to 2000 * Math.round( $tip / 2000.0 )>>
	<<elseif $tip gte 1000>>
		<<set $tip to 500 * Math.round( $tip / 500.0 )>>
	<<else>>
		<<set $tip to 50 * Math.round( $tip / 50.0 )>>
	<</if>>
	<<set $tip to Math.max( $tip, 50 )>>
<</widget>>

<<widget "tipreceive">>
	<span class="gold"><<if random(1, 10000) is 10000>>당신은 브로조프<<else>>당신은<</if>> <<printmoney $tip>>를 얻었다.</span>
	<<set $money += $tip>>
	<<if $tip gte 50000>>
		<<earnFeat "Negotiator">>
	<</if>>
	<<set $tip to 0>>
<</widget>>

<<widget "tip_neg">>
	당신은
	<<if $tipreaction is "low">>
		생각했던 것보다 적은 가격으로,
	<<else>>
		적절한 가격으로,
	<</if>><<printmoney $tip>>에 협상을 마친다.
<</widget>>

<<widget "tip_up">>
	<<He_ nun>> 팁을 <<printmoney $tip>>로 올려 제안한다.
<</widget>>

<<widget "passout">>
	<<set $stress -= 5000>>
	<<set $passoutstat += 1>>
	<<set $passoutTimeStat to Time.date.timeStamp>>
	<<ruffleHair>>
<</widget>>

<<widget "vaginaraped">>
	<<if $NPCList[$vaginatarget] isnot undefined>>
		<<if $templePromised isnot $NPCList[$vaginatarget].fullDescription>>
			<<fallenTransform>> /*transformations.twee*/
		<</if>>
	<<else>>
		<<fallenTransform>>
	<</if>>
	<<set $vaginafucked to 1>>
<</widget>>

<<widget "penisraped">>
	<<if $NPCList[$penistarget] isnot undefined>>
		<<if $templePromised isnot $NPCList[$penistarget].fullDescription>>
			<<fallenTransform>> /*transformations.twee*/
		<</if>>
	<<else>>
		<<fallenTransform>>
	<</if>>
	<<set $penisfucked to 1>>
<</widget>>

<<widget "anusraped">>
	<<set $anusfucked to 1>>
<</widget>>

<<widget "internalejac">>
	<<if $demon gte 6>>
		<<set $demonabsorb += 1>>
	<</if>>
<</widget>>

<<widget "sexcheck">>/*Sets variable to 1 if the PC is penetrated, penetrating, or similar.*/
	<<if $vaginastate is "penetrated" or
	$anusstate is "penetrated" or
	$mouthstate is "penetrated" or
	$penisstate is "otheranus" or
	$penisstate is "penetrated" or
	$anusstate is "othermouth" or
	$vaginastate is "othermouth" or
	$penisstate is "othermouth" or
	$penisstate is "tentacle" or
	$penisstate is "tentacledeep" or
	$vaginastate is "tentacle" or
	$vaginastate is "tentacledeep" or
	$anusstate is "tentacle" or
	$anusstate is "tentacledeep" or
	$mouthstate is "tentacle" or
	$mouthstate is "tentacledeep">>
		<<set $current_sex to 1>>
	<<else>>
		<<set $current_sex to 0>>
	<</if>>
<</widget>>

<<widget "textmap">>
	<<if $options.mapMovement is true and !$possessed>>
	__Map__<br>
		|.....<a class="no-numberify mapmove" onclick="mapMove('Barb Street')" title="Barb Street">Ba</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Cliff Street')" title="Cliff Street">Cl</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Starfish Street')" title="Starfish Street">St</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Mer Street')" title="Mer Street">Me</a><br>
		|..╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲<br>
		|<a class="no&#9866;numberify mapmove" onclick="mapMove('Domus Street')" title="Domus Street">Do</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Residential alleyways')" title="ResidentialAlley">&#9866;</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Connudatus Street')" title="Connudatus Street">Co</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Commercial alleyways')" title="CommercialAlley">&#9866; </a><a class="no&#9866;numberify mapmove" onclick="mapMove('High Street')" title="High Street">Hi</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Park')" title="Park">&#9866;</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Oxford Street')" title="Oxford Street">Ox</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Industrial alleyways')" title="IndustrialAlley">&#9866;</a> <a class="no&#9866;numberify mapmove" onclick="mapMove('Harvest Street')" title="Harvest Street">Ha</a><br>
		|..╲ ╱ ╲ ╱ ╲ ╱ ╲ ╱<br>
		|.....<a class="no&#9866;numberify mapmove" onclick="mapMove('Danube Street')" title="Danube Street">Da</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Wolf Street')" title="Wolf Street">Wo</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Nightingale Street')" title="Nightingale Street">Ni</a> &#9866; <a class="no&#9866;numberify mapmove" onclick="mapMove('Elk Street')" title="Elk Street">El</a><br>
	<<else>>
		__Map__<br>
		|.....Ba &#9866; Cl &#9866; St &#9866; Me<br>
		|..╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲<br>
		|Do &#9866; Co &#9866; Hi &#9866; Ox &#9866; Ha<br>
		|..╲ ╱ ╲ ╱ ╲ ╱ ╲ ╱<br>
		|.....Da &#9866; Wo &#9866; Ni &#9866; El<br>
	<</if>>
	<br>
<</widget>>

<<widget "map">>
	<<set $map.location to _args[0]>>
	<<if $options.images is 1 and $options.mapMovement is true and $options.mapLegacy isnot true and !$possessed>>
		<<set _boxLocations to [
			{ x: 1,		y: 46}, /*Domus				*/
			{ x: 38,	y: 9},	/*Barb				*/
			{ x: 38,	y: 83},	/*Danube			*/
			{ x: 63,	y: 46},	/*Connudatus		*/
			{ x: 88,	y: 9},	/*Cliff				*/
			{ x: 88,	y: 83},	/*Wolf				*/
			{ x: 114,	y: 46},	/*High				*/
			{ x: 146,	y: 9},	/*Starfish			*/
			{ x: 146,	y: 83},	/*Nightingale		*/
			{ x: 176,	y: 46},	/*Oxford			*/
			{ x: 204,	y: 9},	/*Mer				*/
			{ x: 204,	y: 83},	/*Elk				*/
			{ x: 230,	y: 46},	/*Harvest			*/
			{ x: 38,	y: 46},	/*Residential Alley	*/
			{ x: 88,	y: 46},	/*Commercial Alley	*/
			{ x: 146,	y: 46},	/*Park				*/
			{ x: 204,	y: 46}	/*Industrial Alley	*/
		]>>

		/*This version of sugarcube doesn't perform any processing inside of SVG elements, so we need to perform those actions ourselves inside a custom macro */
		<<svg 260 130>>
			<image x="2" xlink:href="img/misc/map.png"> </image>
			<image x="2" @xlink:href="'img/misc/maparrow' + $map.location + '.png'"> </image>

			<<for _i to 0; _i lt $map.arrayList.length; _i++>>
				<<set _canMoveTo = $debug || $map.available[$passage].includes($map.arrayList[_i])>>
				<<set _showMarker = $debug || ($options.mapMarkers && (_canMoveTo || $passage is $map.arrayList[_i]))>>

				<a class="mapmove"
						@onclick="'mapMove(V.map.arrayList[' + _i + ']);'"
						@alt="$map.arrayList[_i] + (_canMoveTo ? ' (0:05)' : '')"
						@title="$map.arrayList[_i] + (_canMoveTo ? ' (0:05)' : '')">

					<rect @x="_boxLocations[_i].x"
							@y="_boxLocations[_i].y"
							height="34"
							width="30"
							@style="'stroke:cyan;fill-opacity:0;stroke-opacity:' + (_showMarker ? '0.6' : '0') + ';'">
					</rect>
				</a>
			<</for>>
		<</svg>>

	<<elseif $options.images is 1 and $options.mapLegacy isnot true>>
		<svg width="260" height="130">
			<image x="2" xlink:href="img/misc/map.png"/>
			<image x="2" @xlink:href="'img/misc/maparrow'+$map.location+'.png'"/>
		</svg>
	<<elseif $options.images is 1>>
		<<if $options.mapMovement is true and !$possessed>>
			<!-- Image Map Generated by http://www.image-map.net/ -->
			<map id="town-image-map" name="town-image-map">
				<area class="no-numberify" alt="Barb Street" title="Barb Street" coords="62,20,39,42" shape="rect" onclick="mapMove('Barb Street')">
				<area class="no-numberify" alt="Domus Street" title="Domus Street" coords="2,75,26,49" shape="rect" onclick="mapMove('Domus Street')">
				<area class="no-numberify" alt="Danube Street" title="Danube Street" coords="33,110,70,84" shape="rect" onclick="mapMove('Danube Street')">
				<area class="no-numberify" alt="Wolf Street" title="Wolf Street" coords="86,117,114,86" shape="rect" onclick="mapMove('Wolf Street')">
				<area class="no-numberify" alt="High Street" title="High Street" coords="116,77,139,46" shape="rect" onclick="mapMove('High Street')">
				<area class="no-numberify" alt="Connudatus Street" title="Connudatus Street" coords="64,77,88,49" shape="rect" onclick="mapMove('Connudatus Street')">
				<area class="no-numberify" alt="Cliff Street" title="Cliff Street" coords="88,40,117,-1" shape="rect" onclick="mapMove('Cliff Street')">
				<area class="no-numberify" alt="Starfish Street" title="Starfish Street" coords="147,41,172,12" shape="rect" onclick="mapMove('Starfish Street')">
				<area class="no-numberify" alt="Nightingale Street" title="Nightingale Street" coords="143,115,170,82" shape="rect" onclick="mapMove('Nightingale Street')">
				<area class="no-numberify" alt="Oxford Street" title="Oxford Street" coords="170,73,203,45" shape="rect" onclick="mapMove('Oxford Street')">
				<area class="no-numberify" alt="Mer Street" title="Mer Street" coords="202,42,229,14" shape="rect" onclick="mapMove('Mer Street')">
				<area class="no-numberify" alt="Elk Street" title="Elk Street" coords="197,111,238,77" shape="rect" onclick="mapMove('Elk Street')">
				<area class="no-numberify" alt="Harvest Street" title="Harvest Street" coords="252,46,228,76" shape="rect" onclick="mapMove('Harvest Street')">
				<area class="no-numberify" alt="Industrial Alley" title="Industrial Alley" coords="225,73,209,53" shape="rect" onclick="mapMove('Industrial alleyways')">
				<area class="no-numberify" alt="Park" title="Park" coords="154,65,170,52" shape="rect" onclick="mapMove('Park')">
				<area class="no-numberify" alt="Commercial Alley" title="Commercial Alley" coords="94,69,110,56" shape="rect" onclick="mapMove('Commercial alleyways')">
				<area class="no-numberify" alt="Residential Alley" title="Residential Alley" coords="38,70,57,56" shape="rect" onclick="mapMove('Residential alleyways')">
			</map>
		<</if>>
		<div id="divmap"><img id="map" src="img/misc/map.png"><img id="maparrow" usemap="#town-image-map" @src="'img/misc/maparrow' + _args[0] + '.png'"></div>
	<<else>>
		<<textmap>>
	<</if>>
<</widget>>

<<widget "rentday">>
	<<set $_text_output to ["일요일","월요일","화요일","수요일","목요일","금요일","토요일"][$rentday-1]>>
	<<print $_text_output>>
<</widget>>

<<widget "tearup">>
	<<if $pain lte 20>>
		<<set $pain to 20>>
	<</if>>
<</widget>>

<<widget "roomoptions">>
	<<if $sexStats.pills.boughtOnce is true or $sexStats.pills["pills"]["Dr Harper\'s prescription"].owned gte 1 or $sexStats.pills["pills"]["asylum\'s prescription"].owned gte 1>>
		<<pillicon>><<link [[약 서랍을 확인한다|PillCollection]]>><<set $pillsExitPassage to $passage>><<endevent>><</link>>
		<br>
	<</if>>
<</widget>>

<<widget "christmas_options">>
	<<if $christmas_wrap is 1>>
		<<switch $christmas_gift_robin>>
			<<case "shirt_unwrapped">>
				<<gifticon "shirt">><<link [[로빈의 셔츠와 치마를 포장한다 (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "shirt">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "sundress_unwrapped">>
				<<gifticon "sundress">><<link [[로빈의 선드레스를 포장한다 (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "sundress">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "kimono_unwrapped">>
				<<gifticon "kimono">><<link [[로빈의 기모노를 포장한다 (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "kimono">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "tuxedo_set_unwrapped">>
				<<gifticon "tuxedo">><<link [[로빈의 턱시도를 포장한다 (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "tuxedo">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "gothic_gown_unwrapped">>
				<<gifticon "gothic">><<link [[로빈의 고딕 드레스를 포장한다 (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "gothic gown">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
			<<case "christmas_unwrapped">>
				<<gifticon "christmas hat">><<link [[로빈의 크리스마스 옷을 포장한다 (0:10)|Bedroom Robin Wrap]]>><<pass 10>><<set $christmas_gift_robin to "christmas">><<set $christmas_gift_robin_wrapped to 1>><</link>>
				<br>
		<</switch>>
		<<if $christmas_gift is "clothes_unwrapped">>
			<<gifticon "christmas">><<link [[고아들을 위한 선물을 포장한다 (3:00)|Bedroom Orphans Clothes Wrap]]>><<pass 180>><<set $christmas_gift to "clothes">><</link>>
			<br>
		<</if>>
	<</if>>
<</widget>>


<<widget "encountersteal">>
	<<rng>>
	<<if isPubfameTaskAccepted("morgan") and $npc.includes("Morgan")>>
		<<pubfameComplete "morgan" "steal">>
		<<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<<elseif isPubfameTaskAccepted("hospital") and $pubfame.hospital.active is 1>>
		<<pubfameComplete "hospital" "steal">>
		<<crimeUp 20 "petty">><<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<<elseif $location is "prison">>
		<<set _teeth to random(3,10)>>
		당신은 하얗고, 반투명한 보석들을 훔친다.
		<<prison_teeth _teeth>> <<prison_teeth_text _teeth>>
	<<elseif $location is "island">>
		/* Steal a specific antique like a wooden carving? */
		<<if currentSkillValue("skulduggery") gte 800 and $rng gte 95>>
			<span class="green">당신은 막대기를 하나 훔친다.</span><<set $island.wood += 1>>
		<<elseif (currentSkillValue("skulduggery") gte 800 and $rng gte 80) or $rng gte 90>>
			<span class="green">당신은 호두 한 웅큼을 훔친다.</span><<set $island.walnut += 1>>
		<<else>>
			<span class="red">당신은 훔칠 것을 아무것도 찾지 못한다.</span>
		<</if>>
	<<elseif $location is "farm">>
		<<if $rng gte 90 and !$farm_key>>
			<<set $farm_key to true>>
			<<set $farmCellUnlk to false>>
			당신은 <span class="green">열쇠 꾸러미</span>를 그 <<persons_ yi>> 호주머니에서 꺼내 지푸라기 속에 숨긴다.<<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
		<<else>>
			<span class="red">당신은 훔칠 것을 아무것도 찾지 못한다.</span>
		<</if>>
	<<elseif ["naked", "schoolSwim"].includes(_stealType)>>
		<span class="red">당신은 훔칠 것을 아무것도 찾지 못한다.</span>
	<<elseif $rng gte 96 and $spray lt $spraymax>>
		<<spray 1>>
		<span class="green">당신은 후추 스프레이 충전제를 훔친다.</span>
		<<crimeUp 50 "petty">><<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<<elseif $rng gte 90 and !$compoundcard>>
		<<set $compoundcard to 1>>
		당신은 기이한 카드를 훔친다. 거기엔 주소가 하나 쓰여있다. <span class="gold">엘크 가</span>에 위치한 장소다.
	<<else>>
		<<rng 5 100>>
		당신은 <<moneyGain $rng>>를 훔친다.
		<<crimeUp $rng "petty">><<combatskulduggeryskilluse>><<combatcontrol 10>><<gcombatcontrol>>
	<</if>>
<</widget>>

<<widget "statbaricons">>
	<<if $options.images is 1 and _args[0]>>
		<<if _args[1] gte 1>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 1>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 2>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 2>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 3>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 3>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 4>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 4>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 5>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 5>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 6>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 6>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 7>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 7>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 8>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 8>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 9>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 9>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
		<<if _args[1] gte 10>>
			<img id="statbar" @src="'img/ui/' + _args[0] + '.png'">
		<<elseif _args[2] gte 10>>
			<img id="statbar" src="img/ui/point.png">
		<</if>>
	<</if>>
<</widget>>

<<widget "characteristic-text">>
	<<set _config = _args[0]>>

	<<if _config.states and _config.states.length gt 0>>

		<<set _config.currentLevel = 0>>
		/* Loop through the provided states to find the one we are currently at*/
		<<for _i to 0; _i lt _config.states.length; _i++>>
			<<if _config.currentValue gte _config.states[_i].requiredValue>>
				<<set _config.currentLevel = _i>>
			<</if>>
		<</for>>

		/* Set the details to show from the current state */
		<<set _config.preText = _config.states[_config.currentLevel].preText || _config.preText>>
		<<set _config.description = _config.states[_config.currentLevel].description>>
		<<set _config.postText = _config.states[_config.currentLevel].postText || _config.postText>>
		<<set _config.color = _config.states[_config.currentLevel].color>>
	<</if>>

	<<if _config.preText>>
		_config.preText
	<</if>>
	<span @class="_config.color">_config.description</span>
	<<if _config.postText>>
		_config.postText
	<</if>>
<</widget>>

<<widget "characteristic-box">>
	<<set _config = _args[0]>>
	<<if _config.states and _config.states.length gt 0>>

		<<set _config.currentLevel = 0>>
		/* Loop through the provided states to find the one we are currently at*/
		<<for _i to 0; _i lt _config.states.length; _i++>>
			<<if _config.currentValue gte _config.states[_i].requiredValue>>
				<<set _config.currentLevel = _i>>
			<</if>>
		<</for>>

		/* Set the details to show from the current state */
		<<set _config.level =		_config.states[_config.currentLevel].level>>
		<<set _config.description = _config.states[_config.currentLevel].description>>
		<<set _config.color =		_config.states[_config.currentLevel].color>>

		/* Determine the colour of the bottom bar based on a few types, default is to match the level colour */
		<<if _config.meterColorType eq 'next'>>
			<<if _config.currentLevel lt _config.states.length - 1>>
				<<set _config.meterColor = _config.states[_config.currentLevel + 1].color>>
			<<else>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<<elseif _config.meterColorType eq 'prev'>>
			<<if _config.currentLevel gt 0>>
				<<set _config.meterColor = _config.states[_config.currentLevel - 1].color>>
			<<else>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<<elseif _config.meterColorType eq 'max'>>
			<<if _config.currentLevel eq _config.states.length - 1>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<<else>>
			<<if _config.meterColor eq undefined>>
				<<set _config.meterColor = _config.states[_config.currentLevel].color>>
			<</if>>
		<</if>>

		/* Calculate the percent to the next level based on the gap between the nearest two states */
		<<if _config.percent isnot undefined>>
			<<set _config.percent = Math.floor(_config.percent)>>
		<<else>>
			<<if _config.currentLevel eq (_config.states.length - 1)>>
				/* Calculate percentage above highest state if max value is specified */
				<<if _config.maxValue>>
					<<set _config.percent = Math.floor(100*(_config.currentValue - _config.states[_config.currentLevel].requiredValue) / (_config.maxValue - _config.states[_config.currentLevel].requiredValue))>>
				<<else>>
					<<set _config.percent = 100>>
				<</if>>
			<<else>>
				<<set _config.percent = Math.floor(100*(_config.currentValue - _config.states[_config.currentLevel].requiredValue) / (_config.states[_config.currentLevel + 1].requiredValue - _config.states[_config.currentLevel].requiredValue))>>
			<</if>>
		<</if>>

	<<else>>
		<<set _config.percent= Math.floor(_config.currentValue)>>
	<</if>>

	<<set _config.barWidth = Math.clamp(_config.percent, 0, 100)>>

	<<if _config.secondValue>>
		<<set _config.secondPercent= Math.floor(_config.secondValue)>>
		<<set _config.secondBarWidth= Math.clamp(_config.secondPercent, 0, 100)>>
	<</if>>

	<div class="characteristic-box">
		<div class="characteristic-top-line">
			<<if $options.images is 1 and _config.icon>>
				<img class="characteristic-icon" @src="'img/' + _config.icon + '.png'" />
			<</if>>
			<span class="characteristic-title">
				_config.name<<characteristic-box-modifier `clone(_config.modifier)` `clone(_config.modTypes)` `clone(_config.name)`>>
				<<if _config.sensitivity gte 4>>
					<mouse class = "pink tooltip-small">
						!!!
						<span class="pink"><i>민감도: <<print _config.sensitivity>></i></span>
					</mouse>
				<<elseif _config.sensitivity gte 3>>
					<mouse class = "purple tooltip-small">
						!!
						<span class="purple"><i>민감도: <<print _config.sensitivity>></i></span>
					</mouse>
				<<elseif _config.sensitivity gte 2>>
					<mouse class = "blue tooltip-small">
						!
						<span class="blue"><i>민감도: <<print _config.sensitivity>></i></span>
					</mouse>
				<</if>>
			</span>
			<<if _config.states>>
				<<if _config.displayType eq "level">>
					<span @class="'characteristic-level ' + _config.color">
						<big>_config.level</big><small>/<<print (_config.states.length - 1)>></small>
					</span>
				<<elseif _config.displayType eq "grade">>
					<span class="characteristic-level">
						<span @class="_config.color">_config.level</span> <<if _config.level neq '없음'>><small class="grade-percent black">_config.percent%</small><</if>>
					</span>
				<</if>>
			<</if>>
		</div>
		<<if _config.description>>
			<span @class="'characteristic-description ' + _config.color">_config.description</span>
		<</if>>
		<<if _config.showStars>>
			<span class="characteristic-description grade-progress">일일 성취도</span>
			<div class="progress-stars">
				<img class="icon" @src="'img/ui/' + (_config.starLevel > 0 ? 'bronze_star'	: 'empty_star') + '.png'" />
				<img class="icon" @src="'img/ui/' + (_config.starLevel > 1 ? 'silver_star'	: 'empty_star') + '.png'" />
				<img class="icon" @src="'img/ui/' + (_config.starLevel > 2 ? 'gold_star'	: 'empty_star') + '.png'" />
			</div>
		<</if>>
		<div class="meter">
			<div @class="(_config.meterColor ? _config.meterColor + 'bar' : 'goldbar')" @style="'width:' + _config.barWidth + '%'"></div>
			<<if _config.secondBarWidth>>
				<div @class="(_config.secondMeterColor ? _config.secondMeterColor + 'bar' : 'goldbar')" @style="'width:' + _config.secondBarWidth + '%'"></div>
			<</if>>
		</div>
	</div>
<</widget>>

<<widget "characteristic-box-modifier">><<silently>>
	<<if _args[0] isnot undefined or _args[0] isnot 100>>
		<<set $_modifier to _args[0] - 100>>
		<<if $_modifier gt 0>>
			<<set $_result to " <small class='green characteristic-modifier'>(+"+$_modifier+"%)</small>">>
		<<elseif $_modifier lt 0>>
			<<set $_result to " <small class='red characteristic-modifier'>("+$_modifier+"%)</small>">>
		<</if>>
	<</if>>
	<</silently>>
	<<if $_result>>
		<<set $_good to _args[1].good>>
		<<set $_bad to _args[1].bad>>
		<<set $_stat to _args[2].toLowerCase()>>
		<span @class="$_modifier gt 0 ? 'green' : 'red'"><mouse class = "tooltip-small">
			$_result
			<<if $_good.length gt 0 and $_bad.length gt 0>>
				<span class="green"><<putpost_ rul $_stat>> 높임: <<print $_good>> <span class="red"><<putpost_ rul $_stat>> 낮춤: <<print $_bad>></span></span>
			<<elseif $_good.length gt 0>>
				<span class="green"><<putpost_ rul $_stat>> 높임: <<print $_good>></span>
			<<elseif $_bad.length gt 0>>
				<span class="red"><<putpost_ rul $_stat>> 낮춤: <<print $_bad>></span>
			<</if>>
		</mouse></span>
	<</if>>
<</widget>>

<<widget "relation-text">>
	<<set _config = _args[0]>>

	<<if _config.states and _config.states.length gt 0>>

		<<set _config.currentLevel = _config.states[0]>>
		<<if _config.currentLevel.secondaryStates>>
			<<set _config.currentLevel = _config.currentLevel.secondaryStates[0]>>
		<</if>>

		/* Loop through the provided states to find the one we are currently at*/
		<<script>>
			for(let i = 0; i < T.config.states.length; i++) {

				if(T.config.currentValue >= T.config.states[i].requiredValue) {

					if(T.config.states[i].secondaryStates) {

						for(let j = 0; j < T.config.states[i].secondaryStates.length; j++) {
							if(T.config.secondaryValue >= T.config.states[i].secondaryStates[j].requiredValue) {
								T.config.currentLevel = T.config.states[i].secondaryStates[j];
							}
						}

					} else {
						T.config.currentLevel = T.config.states[i];
					}
				}
			}

		<</script>>

		/* Set the details to show from the current state */
		<<set _config.preText =		_config.currentLevel.preText || _config.preText>>
		<<set _config.description = _config.currentLevel.description>>
		<<set _config.postText =	_config.currentLevel.postText || _config.postText>>
		<<set _config.color =		_config.currentLevel.color>>
	<</if>>


	<<if _config.preText>>
		_config.preText
	<</if>>
	<span @class="_config.color">_config.description</span>
	<<if _config.postText>>
		_config.postText
	<</if>>
<</widget>>

<<widget "relation-box-simple">>
	<<set _boxConfig = _args[0]>>
	<div class="relation-box" @style="(_boxConfig.style || '')">
		<<if _boxConfig.name>>
			<div class="relation-top-line">
				<<if $options.images and _boxConfig.icon>>
						<img class="relation-icon" @src="_boxConfig.icon" />
				<</if>>
				<span class="relation-name">_boxConfig.name</span>
			</div>
		<</if>>
		<div class="relation-description">
			_boxConfig.description
		</div>
	</div>
<</widget>>

<<widget "relation-box-wolves">>
	<<if $wolfpackfear gte 1 || $wolfpacktrust gte 1 || $syndromewolves gte 1 || $wolfpackleader gte 1>>
	<div class="relation-box" @style="(_boxConfig.style || '')">
		<div class="relation-top-line">
			<<if $options.images>>
					<img class="relation-icon" src="img/misc/icon/wolfpup.png" />
			<</if>>
			<span class="relation-name">늑대 무리</span>
		</div>
		<div class="relation-description">
			늑대들은
			<<if $wolfpackleader gte 1>> 당신을 <span class="green">무리 우두머리로 본다.</span>
				<<elseif $syndromewolves gte 1>> 당신을 <span class="green">그들의 <<ppackbrother_ ro>> 본다.</span>
				<<elseif $wolfpacktrust gte 12>> <span class="green">당신을 믿고 있다.</span>
				<<elseif $wolfpacktrust gte 6>> <span class="teal">당신을 받아들이기 시작했다.</span>
				<<elseif $wolfpackfear gte 12>> <span class="red">당신을 무서워하고 있다.</span>
				<<elseif $wolfpackfear gte 6>> <span class="purple">당신을 무서워하기 시작했다.</span>
				<<else>><span class="pink"> 당신을 사냥감으로 본다.</span>
			<</if>>
		</div>
	</div>
	<</if>>
<</widget>>

<<widget "relation-box">>
	<<silently>>
		<<set _npcData = _args[0]>>
		<<set _npcOverrides = _args[1] || {}>>

		<<script>>

			/* Returns true/false based on whether the requirements to display a stat are met, automatically true if no requirement specified */
			T.checkRequirements = function (stat) {
				let statOverrides = T.npcOverrides[stat];

				if(statOverrides)
					return !statOverrides.hasOwnProperty("requirements") || statOverrides.requirements;
				else
					return true;
			};

			T.importantNpcStats = ["love", "lust", "dom", "trauma", "rage", "purity", "corruption", "harmony", "ferocity"];
			T.otherNpcStats = ["love", "lust"];

			let statDefaults = {
				"love" : {
					name : "사랑",
					value : T.npcData.love,
					activeIcon : 'img/ui/heart.png',
					inactiveIcon: 'img/ui/emptyheart.png',
					color: 'red'
				},
				"lust" : {
					name : "욕정",
					value : T.npcData.lust,
					iconOrientation : 'vertical',
					activeIcon : 'img/ui/vial.png',
					inactiveIcon : 'img/ui/emptyvial.png',
					color: 'pink'
				},
				"dom" : {
					name : "지배",
					value : T.npcData.dom,
					activeIcon : "img/ui/collar.png",
					color: 'purple'
				},
				"trauma" : {
					name : "트라우마",
					value : T.npcData.trauma,
					activeIcon : "img/ui/redbolt.png",
					color: 'teal'
				},
				"rage" : {
					name : "분노",
					value : T.npcData.rage,
					activeIcon : "img/ui/rage.png",
					color: 'gold'
				},
				"purity" : {
					name: "순결",
					value: T.npcData.purity,
					activeIcon: (T.npcData.virginity.vaginal == false || T.npcData.virginity.penile == false ? "img/misc/icon/tf_fallen.png" : "img/misc/icon/tf_angel.png"),
					color: 'white'
				},
				"corruption" : {
					name: "타락",
					value: T.npcData.corruption,
					iconOrientation : 'horizontal-inverted',
					activeIcon: "img/misc/icon/tf_demon.png",
					color: 'purple'
				},
				"harmony" : {
					name: "화합",
					value: V.wolfpackharmony,
					iconOrientation : 'vertical',
					activeIcon: "img/ui/wolfharmony.png",
					color: 'purple'
				},
				"ferocity" : {
					name: "흉폭성",
					value: V.wolfpackferocity,
					iconOrientation : 'vertical',
					activeIcon: "img/ui/wolfferocity.png",
					color: 'purple'
				}
			};

			T.getStatConfig = function(stat) {
				let baseConfig = statDefaults[stat] || {};

				return Object.assign({}, baseConfig, T.npcOverrides[stat]);
			};
			if(V.loveInterest){
				/* Check if this is a main love interest */
				if (V.loveInterest.primary == T.npcData.nam) {
					T.loveInterest = true;
				} else if (V.loveInterest.secondary == T.npcData.nam) {
					T.loveInterest = true;
				} else if (V.loveInterest.tertiary == T.npcData.nam) {
					T.loveInterest = true;
				} else {
					T.loveInterest = false;
				}
			}
		<</script>>
	<</silently>>
	<<if _npcData and _npcData.init is 1>>
		<<if (_npcData.nam is ("Ivory Wraith") or ($wraith.mimic is _npcData.nam and $wraith.revealed))>>
			<<rngWraithSocial>>
			<<if _npcData.nam is ("Ivory Wraith") and ($wraith.mimic is "" and (_wraithEventSocial or $wraith.type)) and $wraithIntro>>
				<div class="relation-box">
					<div class="relation-top-line">
						<span class="relation-name">
							<<trNamedNPC _npcData.nam>>_trResult<small> _npcData.nam</small>
							<small class="relation-title black"><i><<trNamedNPC _wraithTitle>>_trResult</i></small>
						</span>
						<div class="quick-stats">
							<<for _j = 0; _j lt _otherNpcStats.length; _j++>>
								<<if _npcData[_otherNpcStats[_j]] gt 0 and _checkRequirements(_otherNpcStats[_j])>>
									<<relation-box-stat _getStatConfig(_otherNpcStats[_j])>>
								<</if>>
							<</for>>
						</div>
					</div>
					<div class="relation-description">
						<<if $options.images is 1 and (_rngWraithFace is 1 or $possessed)>>
							<img id="wraith" @src="'img/misc/icon/wraith' + V.wraith.state + '.png'">
						<<else>>
							<<npcrelationship _npcData.nam>>
						<</if>>
					</div>
				</div>
			<<elseif $wraithIntro and $wraith.mimic is _npcData.nam and $wraith.revealed and _npcOverrides and _npcOverrides.important>>
				<div class="relation-box">
					<div class="relation-top-line">
						<span class="relation-name">
							<<trNamedNPC _npcData.nam>><<print _trResult>>?
							<small class="relation-title black"><i><<trNamedNPC _wraithTitle>>_trResult</i></small>
						</span>
						<<if _loveInterest>>
							<img class="love-interest-icon" src="img/ui/love_interest.png" alt="연애 상대" title="연애 상대"/>
						<</if>>
					</div>
					<div class="relation-description">
						<<set _rngWraithLineChance to 1>>
						<<npcrelationship "Ivory Wraith">>
					</div>
					<div @class="'relation-stat-list' + ($options.images ? '' : ' no-images')">
						<<set $_statCount to 0>>
						<<for _j = 0; _j lt _importantNpcStats.length-2; _j++>>
							<<if _npcData[_importantNpcStats[_j]] gt 0 and _checkRequirements(_importantNpcStats[_j])>>
								<<set $_statCount++>>
								<<relation-box-stat _getStatConfig(_importantNpcStats[_j]) true>>
							<</if>>
						<</for>>
						<<for _j to $_statCount; _j lt 3; _j++>>
							<div class="relation-stat-block"></div>
						<</for>>
					</div>
				</div>
			<<else>>
			/* Do not display anything */
			<</if>>
		<<elseif _npcOverrides and _npcOverrides.important>>
			<div class="relation-box">
				<div class="relation-top-line">
					<span class="relation-name">
						<<trNamedNPC _npcData.nam>>_trResult
						<small class="relation-title black"><i><<trNamedNPC _npcData.title>>_trResult</i></small>
					</span>
					<<if _loveInterest>>
						<img class="love-interest-icon" src="img/ui/love_interest.png" alt="연애 상대" title="연애 상대"/>
					<</if>>
				</div>
				<div class="relation-description">
					<<npcrelationship _npcData.nam>>
				</div>
				<div @class="'relation-stat-list' + ($options.images ? '' : ' no-images')">
					<<set $_statCount to 0>>
					<<if _importantNPCs[_k].nam is "Black Wolf">><<set _npcStats to _importantNpcStats.length>>
						<<else>><<set _npcStats to _importantNpcStats.length-2>>
					<</if>>
					<<for _j = 0; _j lt _npcStats; _j++>>
						<<if _npcData[_importantNpcStats[_j]] gt 0 and _checkRequirements(_importantNpcStats[_j])>>
							<<set $_statCount++>>
							<<relation-box-stat _getStatConfig(_importantNpcStats[_j]) true>>
						<</if>>
					<</for>>
					<<for _j to $_statCount; _j lt 3; _j++>>
						<div class="relation-stat-block"></div>
					<</for>>
				</div>
			</div>
		<<else>>
			<div class="relation-box">
				<div class="relation-top-line">
					<span class="relation-name">
						<<trNamedNPC _npcData.nam>>_trResult
						<small class="relation-title black"><i><<trNamedNPC _npcData.title>>_trResult</i></small>
					</span>
					<div class="quick-stats">
						<<for _j = 0; _j lt _otherNpcStats.length; _j++>>
							<<if _npcData[_otherNpcStats[_j]] gt 0 and _checkRequirements(_otherNpcStats[_j])>>
								<<relation-box-stat _getStatConfig(_importantNpcStats[_j])>>
							<</if>>
						<</for>>
					</div>
				</div>
				<div class="relation-description">
					<<npcrelationship _npcData.nam>>
				</div>
			</div>
		<</if>>
	<</if>>
<</widget>>

<<widget "relation-box-stat">>
	<<silently>>
		<<set _config = _args[0]>>
		<<set _important = _args[1]>>

		<<set _config.progress = Math.floor(Math.clamp(100*((_config.value - (_config.minValue || 0)) / (_config.maxValue || 100)), 0, 100))>>
	<</silently>>
	<div class="relation-stat-block" @style="'--progress: ' + _config.progress + '%;'">
		<<if _important>>
			<label>_config.name</label>
		<</if>>
		<<if $options.images>>
			<div class="relation-stat">
				<span @class="'relation-stat-icon ' + (_config.iconOrientation || 'horizontal')">
					<img class="active-icon-img" @src="_config.activeIcon">
					<<if _config.inactiveIcon>>
						<img class="inactive-icon-img" @src="_config.inactiveIcon">
					<<else>>
						<img class="inactive-icon-img outlined" @src="_config.activeIcon">
					<</if>>
				</span>
				<span class="relation-stat-percent black">_config.progress<small>%</small></span>
			</div>
		<<else>>
			<<if _important>>
				<span class="relation-stat-percent black">&nbsp;_config.progress<small>%</small></span>
				<div @class="'progress-bar ' + _config.color + 'bar'"></div>
			<</if>>
		<</if>>
	</div>
<</widget>>

<<widget "connector-box">>
	<div @class="'connector-box ' + (_args[3] ? 'invert' : '')" @style="'--connector-height: ' + _args[0] + 'px; --center-offset: ' + (_args[1] || 50) + '%; --end-offset: ' + (_args[2] || 0) + 'px;'">
		<div class="connector-box-top"></div>
		<div class="connector-box-bottom"></div>
	</div>
<</widget>>

<<widget "oralpassage">>
	<<takeVirginity _args[0] "oral">><<oralstat>><<oralejacstat>><<ejacstat>><<cumswallow 'human'>>
<</widget>>

<<widget "relationshipclamp">>
	<<set _i to $NPCNameList.indexOf("Robin")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].trauma = Math.clamp($NPCName[_i].trauma, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 100)>>
	<<set _i to $NPCNameList.indexOf("Whitney")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 30)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 20)>>
	<<set _i to $NPCNameList.indexOf("Eden")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 200)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 150)>>
	<<set _i to $NPCNameList.indexOf("Kylar")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].rage = Math.clamp($NPCName[_i].rage, 0, 100)>>
	<<set _i to $NPCNameList.indexOf("Avery")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].rage = Math.clamp($NPCName[_i].rage, 0, 100)>>
	<<set _i to $NPCNameList.indexOf("Great Hawk")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, 0, 100)>>
	<<alexclamp>>
	<<set _i to $NPCNameList.indexOf("Sydney")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 150)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 100)>>
	<<set $NPCName[_i].purity = Math.clamp($NPCName[_i].purity, 0, 100)>>
	<<set $NPCName[_i].corruption = Math.clamp($NPCName[_i].corruption, 0, 50)>>
	<<set _i to $NPCNameList.indexOf("Black Wolf")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 150)>>
	<<set $NPCName[_i].harmony = Math.clamp($wolfpackharmony || 0, 0, 100)>>
	<<set $NPCName[_i].ferocity = Math.clamp($wolfpackferocity || 0, 0, 100)>>

	<<set _i to $NPCNameList.indexOf("Darryl")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("River")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Mason")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Sam")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -50, 50)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Wren")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Charlie")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Bailey")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Briar")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Doren")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Gwylan")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Harper")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Jordan")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Landry")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Leighton")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Morgan")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Winter")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Niki")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Quinn")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Remy")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>
	<<set _i to $NPCNameList.indexOf("Zephyr")>>
	<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, -100, 100)>>
	<<set $NPCName[_i].dom = Math.clamp($NPCName[_i].dom, -50, 50)>>

	<<set _i to $NPCNameList.indexOf("Ivory Wraith")>>
	<<if $wraith.state is "haunt">>
		<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 10)>>
		<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 10, 20)>>
	<<else>>
		<<set $NPCName[_i].love = Math.clamp($NPCName[_i].love, 0, 20)>>
		<<set $NPCName[_i].lust = Math.clamp($NPCName[_i].lust, 0, 20)>>
	<</if>>
<</widget>>

<<widget "fringecheck">>
	<<if $fringetype is "default">>
		<<set $fringetype to "messy">>
	<</if>>
<</widget>>

<<widget "haircheck">>
	<<if $hairtype is "default">>
		<<set $hairtype to "messy">>
	<</if>>
<</widget>>

<<widget "fringedescription">>
	<<if $haircolour isnot $hairfringecolour>>
		<<if $hairFringeColourStyle is "gradient">>
			<<set _colour to "two-toned">>
		<<else>>
			<<set _colour to $hairfringecolour>>
		<</if>>
		<<trColour _colour>><<set $_fringe to _trResult + " 앞머리">>
	<<else>>
		<<set $_fringe to "앞머리">>
	<</if>>

	<<if $fringelength gte 980>>
		당신의 <<print $_fringe>>는 매우 길다.
	<<elseif $fringelength gte 800>>
		당신의 <<print $_fringe>>는 길다.
	<<elseif $fringelength gte 600>>
		당신의 <<print $_fringe>>는 조금 길다.
	<<elseif $fringelength gte 400>>
		당신의 <<print $_fringe>>는 보통의 길이다.
	<<elseif $fringelength gte 200>>
		당신의 <<print $_fringe>>는 짧다.
	<<else>>
		당신의 <<print $_fringe>>는 매우 짧다.
	<</if>>
<</widget>>

<<widget "willpowerpain">>
	<<if $pain gte 100 and $willpowerpain is undefined and _willpowerpainchecked isnot true>>
		<<if (currentSkillValue('willpower') / 10) gte (($pain - 100) + random(1, 100))>>
			<span class="green">고통에 정신이 압도당할 뻔하나, 당신은 견뎌낸다.</span>
			<<gwillpower>><<willpower 1>>
			<br>
		<<else>>
			<span class="red">고통에 정신이 압도당한다.</span>
			<<if $position is "stalk">>
				당신은 무릎을 꿇으며 쓰러진다.
			<</if>>
			<<ggwillpower>><<willpower 5>><<set $willpowerpain to 0>>
			<br>
		<</if>>
	<<set _willpowerpainchecked to true>>
	<</if>>
<</widget>>

<<widget "willpowerorgasm">>
	<<if $orgasmdown gte 1 and _willpowerorgasmchecked isnot true>>
		<<if (currentSkillValue('willpower') / 10) gte (($orgasmdown * 30) + random(1, 80))>>
			<span class="green">당신은 오르가즘에 몸을 타고 퍼지는 전율을 견뎌낸다.</span>
			<<gwillpower>><<willpower 1>><<set $orgasmdown to 0>>
			<br>
		<<else>>
			<span class="red">당신은 오르가즘으로 인한 경련에 저항한다.</span>
			<<if $position is "stalk">>
				당신은 무릎을 꿇으며 쓰러진다.
			<</if>>
			<<gwillpower>><<willpower 1>>
			<br>
		<</if>>
	<<set _willpowerorgasmchecked to true>>
	<</if>>
<</widget>>

<<widget "clothescolour">><<silently>>
	<<set _slot to _args[0]>>
	<<if $worn[_slot].colour isnot 0 and $worn[_slot].colour isnot undefined>>
		<<if $worn[_slot].colour.substring(0, 3) is "wet">>
			<<trColour $worn[_slot].colour.substring(3)>><<set _text_output to _trResult>>
		<<elseif $worn[_slot].colour_sidebar is 1>>
			<<if $worn[_slot].colour == "custom">>
				<<set _col to getCustomColourName($worn[_slot].colourCustom)>><<trColour _col>><<set _text_output to _trResult>>
			<<else>>
				<<trColour $worn[_slot].colour>><<set _text_output to _trResult>>
			<</if>>
		<</if>>
	<</if>>
<</silently>><<print _text_output>><</widget>>

<<widget "nounderwearcheck">>
	/*Checks if the PC is pantiless, but otherwise decent. Results in low level exhibitionism increases.*/
	/*
		Feature was disabled previously, has been re-enabled after meeting the below requirement
		Vrelnir: Exhibitionism should only rise when the player directly choses certain actions. The PC could have their underwear stolen, which would result in exhibitionism rising without a direct decision to do so.
	*/
	<<if (!$worn.over_lower.type.includes("naked") or !$worn.lower.type.includes("naked")) and $worn.under_lower.type.includes("naked") and ["notWorn", "notBought", "sold", "given"].includes($worn.under_lower.exposedType) and $exposed lte 0 and $exhibitionism lt 19 and !$daily.no_underwear>>
		<<set $no_underwear += 1>>
	<</if>>
	<<if $no_underwear gte 8>>
		<<set $daily.no_underwear to true>>
		<<set $no_underwear to 0>>
		<<set $effectsmessage to 1>>
		<<set $exhibitionism_message to 1>>
	<</if>>
<</widget>>

<<widget "breastfed">>
	<<set $milk_drank_stat += random(1, 5)>>
	<<if random(1, 100) gte 70>>
		<<if $NPCList[0].type and $NPCList[0].type is "wolfgirl">>
			<<transform wolf 1>>
		<<elseif $NPCList[0].type and $NPCList[0].type is "foxgirl">>
			<<transform fox 1>>
		<<else>>
			<<transform cat 1>>
		<</if>>
	<</if>>
	<<if $milkdranktrait is 1>><<physique 1>><</if>>
	<<purity -1>>
	<<set $hunger -= 200>><<set $thirst -= 200>>
<</widget>>

<<widget "nectarfed">>
	<<set _nectarGain to 0>>
	<<set _nectarGain += (Math.ceil(_args[0] / 10) + random(0,2))>>
	<<set $nectar_drank_stat += _nectarGain>>
	<<set $nectar_addiction += _nectarGain>>
	<<if _args[0] gte 11>>
		<<purity -1>>
	<</if>>
	<<set $hunger -= (_args[0] * 5)>><<set $thirst -= (_args[0] * 5)>>
	<<drugs _args[0]>><<set $arousal += _args[0]>>
	<<if $ejaculating is 1>>
		<<alcohol `(_args[0] * 3)`>>
		<<bodyliquid "mouth" "nectar">>
	<</if>>
	<<if $backgroundTraits.includes("plantlover")>>
		<<if $nectar_timer lte 14>>
			<span class="green">당신은 힘이 넘치는 감각을 느낀다.</span> <<stress -12>><<llstress>><<pain -4>><<lpain>>
		<<else>>
			<<set _nectarStress to (-1 * _nectarGain)>>
			<<physique 1 "invig">><<stress _nectarStress>><<lstress>>
		<</if>>
		<<set $nectar_timer to 21>>
	<</if>>
	<<set $nectar_addiction = Math.clamp($nectar_addiction, 0, 200)>>
<</widget>>

<<widget "setup_pillory">>
	<<set $pillory_tenant to {person : clone($baseNPC), exists : 0, duration : 0, served : 0, startTime: 0, endTime : 0,
		crowd : 0, wet : 0, upperexposed : 0 , lowerexposed : 0, fruit : 0, fruitstock: 0, face : 0, ass : 0, genital : 0, broken : 0,
		lastviewed : 0, special : {name : "", desc : ""}}>>
<</widget>>

<<widget "new_npc_pillory">>
	<<if not _args[0]>>
		<<if $rng gte 20>><<generate1>><<else>><<generatey1>><</if>>
		<<set $_already_served to random(0,2)>>
	<<else>>
		<<set $_already_served to 0>>
	<</if>>
	<<set $pillory_tenant.exists to 1>>
	<<set $pillory_tenant.person to clone($NPCList[0])>>
	<<set $pillory_tenant.duration to random(4,27)>>

	<<set $_duration to random(4,27)>>
	<<set $_endTime to new DateTime(Time.date).addHours($_duration)>>
	<<set $pillory_tenant.startTime to Time.date.timeStamp>>
	<<set $pillory_tenant.endTime to $_endTime.timeStamp>>

	<<set $pillory_tenant.crowd to 1>>
	<<set $pillory_tenant.wet to 0>>
	<<set $pillory_tenant.upperexposed to 0>>
	<<set $pillory_tenant.lowerexposed to 0>>
	<<set $pillory_tenant.fruit to 0>>
	<<set $pillory_tenant.fruitstock to 3>>
	<<set $pillory_tenant.spank to 0>>
	<<set $pillory_tenant.face to 0>>
	<<set $pillory_tenant.ass to 0>>
	<<set $pillory_tenant.genital to 0>>
	<<set $pillory_tenant.broken to 0>>
	<<set $pillory_tenant.lastViewed to Time.date.timeStamp>>

	<<person1>>
	<<if $pillory_tenant.special.name is "">>
		한 <<personPost "이">> <<if $_already_served is 0>>현재 구속대에 갇혀있다.<<else>>최근에 구속대에 갇혀있었다.<</if>>
		<<endevent>>
		<<npc_pillory_release_schedule>>
		<br><br>
	<<else>>
		소문에 의하면 <<hePost "이">> 공개굴욕형에 처해질 것이라고 한다.
		<br>
		<<endevent>>
	<</if>>
<</widget>>

<<widget "imprison_whitney">>
	<<clear_pillory>>
	<<npc Whitney>>
	<<set C.npc.Whitney.state to "pillory">>
	<<set $pillory_tenant.special.name to "Whitney">>
	<<set $pillory_tenant.special.desc to C.npc.Whitney.title>>
	<<new_npc_pillory $NPCList[0]>>
	<<endevent>>
	<<set $framed to 0>>
<</widget>>

<<widget "imprison_leighton">>
	<<clear_pillory>>
	<<npc Leighton>>
	<<set $pillory_tenant.special.name to "Leighton">>
	<<set $pillory_tenant.special.desc to C.npc.Leighton.title>>
	<<new_npc_pillory $NPCList[0]>>
	<<endevent>>
	<<set $framed to 0>>
<</widget>>

<<widget "imprison_npc">> /* number as argument to select npc 0-5. Only use at end of scene. */
	<<clear_pillory>>
	<<if not _args[0]>>
		<<set _id to 0>>
	<<else>>
		<<set _id to _args[0]>>
	<</if>>
	<<if _args[1]>>
		<<set $pillory_tenant.special.desc to _args[1]>>
	<</if>>
	<<new_npc_pillory $NPCList[_id]>>
	<<endevent>>
<</widget>>

<<widget "get_pillory_npc">>
	<<set $NPCList[0] to clone($pillory_tenant.person)>><<person1>>
<</widget>>

<<widget "A_pillory_person">>  /* Can't simplify to <<pillory_person>> because: 'a thin man', but not 'a Whitney') */
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<personPost _args[0]>><<set _out += "어떤 " + _trResult>>
	<<else>>
		<<trNamedNPC $pillory_tenant.special.name "name" _args[0]>><<set _out += _trResult>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "The_pillory_person">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<personPost _args[0]>><<set _out += "그 " + _trResult>>
	<<else>>
		<<trNamedNPC $pillory_tenant.special.name "name" _args[0]>><<set _out += _trResult>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "a_pillory_person">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<personPost _args[0]>><<set _out += "어떤 " + _trResult>>
	<<else>>
		<<trNamedNPC $pillory_tenant.special.name "name" _args[0]>><<set _out += _trResult>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "the_pillory_person">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<personPost _args[0]>><<set _out += "그 " + _trResult>>
	<<else>>
		<<trNamedNPC $pillory_tenant.special.name "name" _args[0]>><<set _out += _trResult>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "pillory_type">>
	<<silently>><<set _out to "">>
	<<get_pillory_npc>>
	<<if $pillory_tenant.special.name is "">>
		<<personPost _args[0]>><<set _out += _trResult>>
	<<else>>
		<<trNamedNPC $pillory_tenant.special.desc 'title' _args[0]>><<set _out += _trResult>>
	<</if>>
	<</silently>><<print _out>>
<</widget>>

<<widget "npc_pillory">>
	<<A_pillory_person "이">> 도시 구속대에 갇혀있다.
	<<npc_pillory_release_schedule>>
	<br><br>
	<<endevent>>
<</widget>>

<<widget "npc_pillory_detail">>
	<<get_pillory_npc>>
	<<A_pillory_person "이">> 도시 구속대에 갇혀있다.
	<<npc_pillory_appearance>>
	<<npc_pillory_abuse>>
	<<npc_pillory_release_schedule>>
	<br><br>
	<<endevent>>
<</widget>>

<<widget "npc_pillory_appearance">>
	<<update_npc_pillory_appearance>>
	/*Desc*/
	<<if Time.dayState is "night">>
		<<if $pillory_tenant.crowd gte 10>>술에 취한 엄청난 수의 군중들이,
		<<elseif $pillory_tenant.crowd gte 6>>떠들석한 많은 수의 군중들이,
		<<elseif $pillory_tenant.crowd gte 4>>불길한 느낌의 군중들이,
		<<else>>작긴 하지만 불길한 느낌의 군중들이,
		<</if>>
	<<else>>
		<<if $pillory_tenant.crowd gte 10>>흥분하면서 야유하고 있는 군중들이
		<<elseif $pillory_tenant.crowd gte 6>>많은 수의 군중들이
		<<elseif $pillory_tenant.crowd gte 4>>호심에 주변을 돌아다니는 무리들이
		<<else>>작은 무리가
		<</if>>
	<</if>>엎드린 상태로 구속대에 갇힌 <<pillory_type "을">> 둘러싸고 있다.
	<<if $pillory_tenant.broken gte 32>><<HePost "은">> 엄청난 충격을 받은 것 같다. 어쩌면 겪은 학대로 영구히 망가졌을지도 모른다.
	<<elseif $pillory_tenant.broken gte 16>><<HePost "은">> 겪은 학대로 인해 눈물을 흘리고 있다.
	<<elseif $pillory_tenant.broken gte 8>><<HePost "은">> 학대로 인해 흐느끼고 있다.
	<<elseif $pillory_tenant.broken gte 4>><<hePost "이">> 속상하다는 것은 눈에 보이지만, 어떻게든 숨기려고 하고 있다.
	<<else>><<HePost "은">> 반항적인 태도로, 태연한 척을 하고 있다.
	<</if>>
	<br>

	/*describe exposure*/
	<<if $pillory_tenant.upperexposed gte 3>>
		<<His_ yi>> <<trBreastsdesc $pillory_tenant.person.breastsdesc "이">>_trResult 군중에게 완전히 노출되어있다.
		<<if $pillory_tenant.spank gte 8>><<His_ yi>> 유두는 잔뜩 꼬집히고, 얻어맞고, 빨리고, 물리고 당겨진 탓에 붉게 부었다.
		<<elseif $pillory_tenant.spank gte 4>><<His_ yi>> 유두는 학대당해 아파 보인다.
		<</if>>
	<<elseif $pillory_tenant.upperexposed gte 2>>
		<<if $pronoun is "f">>
			<<His_ yi>> 상의가 벗겨져, 오직 브라만이 군중으로부터 <<trBreastsdesc $pillory_tenant.person.breastsdesc "을">>_trResult 가려주고 있다.
		<<else>>
			<<His_ yi>> 상의가 벗겨져, 군중에게 <<trBreastsdesc $pillory_tenant.person.breastsdesc "이">>_trResult 완전히 노출되었다.
			<<if $pillory_tenant.spank gte 8>><<His_ yi>> 유두는 잔뜩 꼬집히고, 얻어맞고, 물리고 당겨진 탓에 붉게 부었다.
			<<elseif $pillory_tenant.spank gte 4>><<His_ yi>> 유두는 학대당해 아파 보인다.
			<</if>>
		<</if>>
	<<elseif $pillory_tenant.upperexposed gte 1>><<His_ yi>> 상의가 찢어져, 군중에게 <<if $pronoun is "f">>브라가<<else>><<trBreastsdesc $pillory_tenant.person.breastsdesc "이">>_trResult<</if>> 부분적으로 노출되었다.
	<</if>>
	<<if $pillory_tenant.lowerexposed gte 2>><<His_ yi>> <<if $pillory_tenant.upperexposed gte 1>>엉덩이 또한 <<else>>엉덩이가<</if>>노출되어,
		<<if $pillory_tenant.person.gender is "f">><<his_ yi>> 보지가
		<<else>><<his_ yi>> <<penisdesc_ ga $pillory_tenant.person.penisdesc>>
		<</if>>모두에게 보인다.
		<<if $pillory_tenant.spank gte 5>><<His_ yi>> 엉덩이는 거칠게
			<<if $pillory_tenant.fruit gte 5>>얻어맞은 것으로 보이고, <<his_ yi>> <<if $pillory_tenant.face gte 2>>정액<<if $pillory_tenant.face gte 4>> 범벅인 <<else>>이 묻은 <</if>><</if>>얼굴은 멍과 으깨진 과일로 엉망진창이다.
			<<else>>얻어맞은 것으로 보인다.
			<</if>>
		<<elseif $pillory_tenant.fruit gte 6>><<His_ yi>> <<if $pillory_tenant.face gte 2>>정액<<if $pillory_tenant.face gte 4>>범벅인 <<else>>이 묻은 <</if>><</if>>얼굴은 멍과 으깨진 과일로 엉망진창이다.
		<<elseif $pillory_tenant.fruit gte 2>><<His_ yi>> <<if $pillory_tenant.face gte 2>>정액<<if $pillory_tenant.face gte 4>> 범벅인 <<else>>이 묻은 <</if>><</if>>얼굴은 멍과 으깨진 과일 때문에 바로 눈에 들어온다.
		<</if>>
		<<if $pillory_tenant.ass gte 2>><<His_ yi>> 엉덩이는 여러 번
			<<if $pillory_tenant.genital gte 2>>강간당했고,
				<<if $pillory_tenant.person.gender is "m">><<print either("노출된","학대당한","비참한")>> 자지는 점액으로 뒤덮혀있다.
				<<else>><<print either("노출된","붉어진","학대당한")>> 보지에서는 정액이 <<if $pillory_tenant.genital gte 4>>흘러나온다<<else>>방울방울 떨어진다<</if>>.
				<</if>>
			<<else>>한 번 강간당했다.
			<</if>>
		<<elseif $pillory_tenant.genital gte 5>><<His_ yi>> <<if $pillory_tenant.person.gender is "m">>자지<<else>>보지<</if>>는 생으로 강간당했다.
		<<elseif $pillory_tenant.genital gte 2>><<HePost "은">> 여러 번 강간당했다.
		<</if>>
	<<elseif $pillory_tenant.lowerexposed gte 1>>
		<<His_ yi>> <<if $pronoun is "f">>드레스는 허리 위로 들춰져,<<else>>바지는 내려져,<</if>>
		군중에게 속옷을 노출하고 있다.
	<<elseif $pillory_tenant.wet is 2>>비로 인해 <<his_ yi>> 옷은 속이 다 비친다.
	<<elseif $pillory_tenant.wet is 1>><<His_ yi>> 옷은 축축해서 반투명해진 상태이나, 점차 말라가고 있다.
	<</if>>
	<<if $pillory_tenant.upperexposed is 0 and $pillory_tenant.lowerexposed is 0 and $pillory_tenant.face is 0 and $pillory_tenant.fruit gte 1>>
		<<if $pillory_tenant.fruit gte 6>><<His_ yi>> 얼굴은 멍과 으깨진 과일로 엉망진창이다.
		<<elseif $pillory_tenant.fruit gte 2>><<His_ yi>> 얼굴은 멍과 으깨진 과일 때문에 바로 눈에 들어온다.
		<</if>>
	<</if>>
<</widget>>

<<widget "update_npc_pillory_appearance">>
	<<set $_lastViewed to new DateTime($pillory_tenant.lastViewed)>>
	<<set $_timeLeft to Time.date.compareWith($_lastViewed, true)>>
	<<if $_timeLeft / TimeConstants.secondsPerHour lte -2>>
		/* last viewed time tracked to avoid this firing on every viewing */
		<<set $pillory_tenant.lastViewed to Time.date.timeStamp>>

		/*Weather effects*/
		<<if Weather.precipitation is "rain">>
			<<set $pillory_tenant.wet to 2>>
		<<elseif $pillory_tenant.wet is 2>>
			<<set $pillory_tenant.wet to 1>>
		<<else>>
			<<set $pillory_tenant.wet to 0>>
		<</if>>

		/*Chance of abuse based on crowd and time passed*/
		<<set _totalSeconds to Time.date.compareWith(new DateTime($pillory_tenant.startTime), true) / TimeConstants.secondsPerHour>>
		<<set $_chance to Math.clamp(_totalSeconds / TimeConstants.secondsPerHour, 0, 24)>>
		<<set $_chance *= $pillory_tenant.crowd>>

		/*increased by spectacle*/
		<<set $_factor to ($pillory_tenant.upperexposed + $pillory_tenant.lowerexposed + $pillory_tenant.fruit
			+ $pillory_tenant.spank + $pillory_tenant.face + $pillory_tenant.ass + $pillory_tenant.genital)>>

		<<if Time.dayState is "night">>
			<<set $_factor += 3>>
		<</if>>
		<<if $pillory_tenant.wet is 2>>
			<<set $_factor += 4>>
		<</if>>
		<<set $_prob to ($_chance * $_factor)>>

		/*Out of sight changes to tenant */
		<<rng>>
		<<if $rng gte (40 - $_prob)>><<set $pillory_tenant.fruit += 1>><</if>>
		<<rng>>
		<<if $rng gte (60 - $_prob)>><<set $pillory_tenant.crowd += 2>><</if>>
		<<rng>>
		<<if $rng gte (60 - $_prob)>><<set $pillory_tenant.upperexposed += 1>><</if>>
		<<rng>>
		<<if $rng gte (80 - $_prob)>><<set $pillory_tenant.lowerexposed += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - $_prob)>><<set $pillory_tenant.crowd += 2>><</if>>
		<<rng>>
		<<if $rng gte (100 - $_prob)>><<set $pillory_tenant.fruit += 2>><<set $pillory_tenant.face += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - $_prob) and $pillory_tenant.lowerexposed gte 2>><<set $pillory_tenant.spank += 2>><<else>><<set $pillory_tenant.spank += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - $_prob) and $pillory_tenant.lowerexposed gte 2>><<set $pillory_tenant.genital += 1>><</if>>
		<<rng>>
		<<if $rng gte (100 - $_prob) and $pillory_tenant.lowerexposed gte 2>><<set $pillory_tenant.ass += 1>><</if>>

		/*lock down exposure and replenish fruit */
		<<if $pillory_tenant.upperexposed gte 3>><<if $pillory_tenant.person.gender is "f" or $pillory_tenant.person.pronoun is "f">><<set $pillory_tenant.upperexposed to 3>><<else>><<set $pillory_tenant.upperexposed to 2>><</if>><</if>>
		<<if $pillory_tenant.lowerexposed gt 2>><<set $pillory_tenant.lowerexposed to 2>><</if>>
		<<set $pillory_tenant.fruitstock to 3>>
		<<set $pillory_tenant.broken += ($pillory_tenant.ass + $pillory_tenant.genital + $pillory_tenant.face + $pillory_tenant.fruit + $pillory_tenant.spank)>>
	<</if>>
<</widget>>

<<widget "npc_pillory_abuse">>
	<<set $_lastViewed to new DateTime($pillory_tenant.lastViewed)>>
	<<set $_timeLeft to Time.date.compareWith($_lastViewed, true)>>
	<<if $_timeLeft / TimeConstants.secondsPerHour lte -2>>
		<<set $pillory_tenant.lastViewed to Time.date.timeStamp>>
		<<rng>><<generate2>><<person2>>
		<<set $_ly to either("난폭하게","대놓고","화난듯이","맹렬히","뻔뻔하게","계속해서","서투르게","거칠게","과장되게","예의 바르게","즐겁게","신난듯이","취한듯이","솜씨 없이")>>
		<<if Time.dayState isnot "night">>
			<<if $rng gte 56>> /* 45% chance of jeer and shout only, 55% chance of something active */
				여러 사람들이 <<personPost "이">> 필두로 죄수를 조롱하며 욕설을 퍼붓는다.
			<<elseif $rng gte 41>> /* 15% */
				<<rng>>
				<<if $pillory_tenant.person.pronoun is "f" and $rng gte 40>> /* 60% if upper-exposed F */
					거친 농부 복장을 한 <<personPost "이">> 양동이를 들고 구속대로 다가간다.
					그러고는 <<pillory_type>>의 가슴 아래에 양동이를 놓더니, <<person2>><<hePost "은">>
					<<if $pillory_tenant.upperexposed lte 1>>죄수의 상의를 벗기고는,<</if>>
					<<if $pillory_tenant.upperexposed lte 2>><<set $pillory_tenant.upperexposed to 3>> 그녀의 브라를 풀고,<</if>>
					<<pillory_type>>의 <<trBreastsdesc $pillory_tenant.person.breastsdesc "을">>_trResult 잡고는 양동이에 우유를 짜는듯한 행동을 취한다.
					<br><br>
					<<if $rng % 3 is 0>>
						<<if $rng % 2>>
							곧 가슴에서 모유가 터져나온다. 농부는 미소를 짓더니, 곧 일정한 박자를 타면서 능숙하게 두 가슴에서 모유를 짜낸다.
							<br>
							"착한 소로군." 농부는 <<the_pillory_person>>의 머리를 헝클어트리고는 거의 다 찬 양동이를 들고 떠난다.
						<<else>><<set $pillory_tenant.spank += 1>>
							곧 <<pillory_type>>의 가슴에서 모유가 똑똑 떨어진다. 집요하게 유두를 쥐어짜고 당기고 한 뒤에야 농부는 죄수로부터 상당한 양의 모유를 짜낼 수 있었다. 
							그녀의 <<trBreastsdesc $pillory_tenant.person.breastsdesc "은">>_trResult 피부가 벗겨져 아파 보인다.
							<br>
							농부는 죄수의 머리를 쓰다듬고는 반쯤 찬 양동이를 들고 떠난다.
						<</if>>
					<<else>><<set $pillory_tenant.spank += 1>>
						점차 유두를 거칠게 꼬집고 당겨봐도, 모유는 나오지 않는다.
						<<if $rng % 2>>
							결국 포기한 채로, <<person2>><<personPost "은">> <<his_ yi>> 머리를 쓰다듬는다. "가엽기도 하지. 텅 비어버렸구나."
							<br>
							<<HePost "은">> <<pillory_type>>의 뒤로 걸어가서는
							<<if $pillory_tenant.lowerexposed lte 1>><<his_ yi>> <<print either("실크 팬티를","평범한 팬티를","망가진 속옷을","보이쇼츠를")>> 벗기고는,
							<<else>>엉덩이를 양 옆으로 벌린 뒤<</if>> 모두에게 <<if $pillory_tenant.person.gender is "f">><<his_ yi>> 보지를 <<else>><<his_ yi>> 엉덩이를 <</if>>보여준다.
							<br>
							"이 소는 다 말랐어." <<person2>><<hePost "이">> 군중을 향해 외친다. <<if $pillory_tenant.person.gender is "f">>"누가 송아지 한 마리쯤 임신하게 해보지 그래."<<else>>"누가 속 좀 채워주지 그래."<</if>>
							<br>
							<<HePost "은">> 텅 빈 양동이를 들고 떠난다.
							<<set $pillory_tenant.lowerexposed to 2>>
						<<else>>
							결국 포기한 채로, 농부는 텅 빈 양동이를 들고 떠난다.
						<</if>>
						<br>
					<</if>>
				<<elseif $pillory_tenant.person.gender is "m" and $rng gte 40>>
					거친 농부 복장을 한 <<personPost "이">> 투명한 잔을 들고 구속대로 다가간다.
					<br>
					그러고는 <<pillory_type>>의 가랑이 밑에 잔을 놓더니, <<person2>><<hePost "은">>
					<<if $pillory_tenant.lowerexposed lte 0>><<if $pillory_tenant.person.pronoun is "m">>죄수의 바지를 내리고는,<<else>>죄수의 스커트를 끌어올리고는,<</if>><</if>>
					<<if $pillory_tenant.lowerexposed lte 1>><<set $pillory_tenant.lowerexposed to 2>><<if $pillory_tenant.person.pronoun is "m">> 속바지도 벗긴 뒤, <<else>> 팬티도 내린 뒤, <</if>><</if>>
					죄수의 <<trPenisdesc $pillory_tenant.person.penisdesc>>_trResult를 잡고는 문지르기 시작한다.
					죄수는 충격을 받은 듯한 얼굴을 하더니, 곧 분노에 찬 표정으로 바뀌고, 곧 갈등하는 듯한 표정을 짓더니, 곧 다시 충격받은 얼굴을 한 채로 조롱하는 군중 앞에서 잔에다가 사정을 한다.
					<<person2>>
					<<if $rng % 3>>
						농부는 잔을 물끄러미 바라보더니 다시 시작한다. 숙련가인지, <<HePost "은">> 한 손으로는 핸드폰을 조작하고,
						다른 한 손으로는 <<pillory_type>>에게 절정을 몇 번 더 안겨준다.
						<br>
						10분 뒤, 농부는 정액으로 가득 찬 잔을 들고 떠나고, <<the_pillory_person "은">>
						충격, 수치심, 고통과 만족감이 뒤섞인 표정을 지은 채로 구속대에 매달려있다.
					<<else>><<set $pillory_tenant.spank += 1>>
						농부는 한 손으로는 <<his_ yi>> 핸드폰을 조작하고, 다른 한 손으로는 <<pillory_type "을">> 절정시키려 한다.
						<br>
						몇 분쯤 지난 뒤, 농부는 혼란스러운 듯한 표정을 짓더니, 곧 <<the_pillory_person "이">> 별다른 반응을 보이지 않는다는 것에 짜증을 낸다.
						<<person2>><<personPost "은">> <<his_ yi>> 주머니에서 장치 하나를 꺼내든다. <<HePost "은">> 장치의 한쪽 끝부분을 <<pillory_type>>의 자지 뿌리 쪽에 붙이고,
						다른 한쪽을 죄수의 항문 깊숙히 밀어넣는다.
						<br>
						농부가 버튼을 누르자 전기가 타닥거리는 소리가 크게 울려퍼지더니, <<the_pillory_person "은">> 비명을 내지르고는, 경련하며 계속해서 가버린다.
						<br>
						20초 정도 핸드폰을 들여다보던 <<person2>><<personPost "은">> 장치를 끄더니, 잔을 물끄러미 쳐다보고는 고개를 끄덕인다.
						<br>
						군중은 농부가 이 과정을 몇 번 반복하는 광경에 몰두한다. 마침내 농부는 정액으로 가득 찬 잔을 들고 떠나고,
						<<the_pillory_person "은">> 고통, 수치심과 기이한 만족감에 얼굴을 움찔거리며 축 처진 채로 구속대에 매달려있다.
					<</if>>
					<br>
				<<elseif $pillory_tenant.person.gender is "f" and $rng gte 20>>
					거친 농부 복장을 한 <<personPost "이">> 유리 비커를 들고 구속대로 다가간다.
					<br>
					그러고는 <<pillory_type>>의 가랑이 밑에 비커를 놓더니, <<person2>><<hePost "은">>
					<<if $pillory_tenant.lowerexposed lte 0>><<if $pillory_tenant.person.pronoun is "f">>죄수의 스커트를 끌어올리고는,<<else>>죄수의 바지를 내리고는,<</if>><</if>>
					<<if $pillory_tenant.lowerexposed lte 1>><<set $pillory_tenant.lowerexposed to 2>><<if $pillory_tenant.person.pronoun is "f">> 팬티도 내린 뒤,<<else>> 속바지도 벗긴 뒤,<</if>><</if>>
					죄수의 보지를 붙잡고는 문지르기 시작한다.
					잠시 충격에 빠져있다가, <<the_pillory_person "은">> 입술을 비죽 내민 채로 이 수치스러운 상황을 받아들이기로 한다. 그 직후에 <<his_ yi>> 보지에 차가운 금속이 쑤셔박힌다.
					곧 <<his_ yi>> 얼굴이 공포로 물들려는 순간 무언가 클리토리스를 꽉 물고, 곧바로 전기의 물결이 <<his_ yi>> 몸에 밀려든다.
					<br>
					군중은 <<the_pillory_person "이">> 반복해서 휘몰아치는 절정에 몸을 비트는 과정에 몰두한다.
					농부는 거의 신경을 쓰지 않으며, <<the_pillory_person>>의 액체를 놓치지 않기 위해 비커를 가까이 댄 상태에서, <<person2>><<his_ yi>> 핸드폰만 들여다본다.
					마침내, 농부는 장치의 전원을 끈 뒤 빼낸다. 
					<<HePost "은">> 핸드폰에서 시선을 돌리지 않은 채로 액체로 가득 찬 비커를 든 채 떠난다.
					<br>
					<<The_pillory_person "은">> 굴욕감에 가득 차서, 충격과 수치심, 성적 탈진감이 뒤섞인 표정을 짓는다.
				<<else>>
					<<if Time.month > 4 && Time.month < 9 and $rng % 4>>
						<<set _bug to either("벌","말벌","호박벌")>>
						<<The_pillory_person "은">> _bug이 주변에서 원을 그리는 모습에 비명을 지르며 어쩔 줄을 모르고 몸을 꿈틀거리고 퍼덕거리기만 한다.
						<br>
						<<if $rng % 3 is 0>>
							상냥한 관중이 _bug을 손으로 쫓아낸다.
						<<elseif $rng % 3 is 1>>
							군중은 조롱하며 웃음을 터트린다. 결국 _bug은 흥미를 잃고는 다른 곳으로 날아간다.
						<<else>>
							<<if $pillory_tenant.lowerexposed is 2 and $rng % 2>>
								<<if $pronoun is "m">><<set _part to either("엉덩이","다리 위쪽","허벅지 안쪽","자지","불알","허리")>>
								<<else>><<set _part to either("엉덩이","다리","허벅지 안쪽","보지","허리")>>
								<</if>>
							<<elseif $pillory_tenant.upperexposed gte 3 and $pronoun is "f">>
								<<set _part to either("가슴","유두","겨드랑이","늑골","몸통","등")>>
							<<elseif $pillory_tenant.upperexposed gte 2>>
								<<set _part to either("가슴","겨드랑이","늑골","배꼽","등")>>
							<<else>>
								<<set _part to either("팔","어깨","볼","다리","허리","손목","팔꿈치")>>
							<</if>>
							<<HePost "은">> _bug이 _part에 앉더니 침을 쏘자 <<print either("고함을 친다","비명을 지른다","칭얼거린다","엉엉 운다")>>.
						<</if>>
					<<else>>
						화난 사원의 <<monk_ ga>> 도덕적으로 병든 이를 착취한다며 군중을 꾸짖는다.
						많은 사람들이 부끄러워하고, 몇몇은 자리를 떠난다.
						<<set $pillory_tenant.crowd -= 1>>
						<<if $pillory_tenant.upperexposed + $pillory_tenant.lowerexposed gte 1>>
							<<set $pillory_tenant.upperexposed to 0>><<set $pillory_tenant.lowerexposed to 0>>
							마침내 <<monk_ ga>> <<pillory_type>>의 옷을 다시 입혀주어 <<his_ yi>> 존엄성을 회복시켜준다.
						<</if>>
					<</if>>
				<</if>>
			<<elseif $rng gte 36>> /* 5% */
				어떤 <<personPost "이">> <<pillory_type>>에게 과일을 던진다. 움직이거나 막을 방법이 없기에, 과일이 <<himPost>>의 얼굴에 정통으로 맞는다.
				과일의 산성기를 눈에서 닦아낼 수가 없기에 더더욱 아파 보인다.
				<<set $pillory_tenant.fruit += 1>>
			<<elseif $rng gte 26>> /* 10% */
				어떤 <<personPost "이">> <<pillory_type>>에게 과일을 던지나 완전히 빗나간다.
			<<elseif $rng gte 16>> /* 10% */
				어떤 <<personPost "이">> 구속대로 가더니 <<pillory_type>>의 <<if $pronoun is "f">>젖가슴<<else>>불알<</if>>을 $_ly 애무한다.
			<<elseif $rng gte 11 and $pillory_tenant.upperexposed lt 3>>/* 5% */
				어떤 <<personPost "이">> <<pillory_type>>에게로 다가가더니
				<<if $pillory_tenant.upperexposed is 2>>
					<<if $pronoun is "f">>
					$_ly 브라를 벗겨, 조롱하는 군중을 향해 <<his_ yi>> <<trBreastsdesc $pillory_tenant.person.breastsdesc "을">>_trResult 노출시킨다.
					<<else>>
					$_ly <<his_ yi>> 유두를 비튼다.
					<<set $pillory_tenant.spank += 1>>
					<</if>>
				<<elseif $pillory_tenant.upperexposed is 1>>
					<<if $pronoun is "f">>
					완전히 상의를 벗기고는, 조롱하는 군중을 향해 <<his_ yi>> 브라를 노출시킨다.
					<<else>>
					완전히 상의를 벗기고는, 조롱하는 군중을 향해 <<his_ yi>> <<trBreastsdesc $pillory_tenant.person.breastsdesc "을">>_trResult 노출시킨다.
					<</if>>
				<<else>>
					<<if $pronoun is "f">>
					상의를 들춰, 조롱하는 군중을 향해 <<his_ yi>> 브라를 일부분 노출시킨다.
					<<else>>
					상의를 들춰, 조롱하는 군중을 향해 <<his_ yi>> 가슴 대부분을 노출시킨다.
					<</if>>
				<</if>><<set $pillory_tenant.upperexposed += 1>>
			<<elseif $rng gte 6 and $pillory_tenant.lowerexposed lt 2>>/* 5% */
				<<personPost "이">> <<the_pillory_person>>에게로 다가가더니
				<<if $pillory_tenant.lowerexposed is 1>>
					<<if $pillory_tenant.person.gender is "f">><<pillory_type>>의 속옷을 벗기고는, 조롱하는 군중을 향해 <<his_ yi>> 엉덩이와 보지를 완전히 노출시킨다.
					<<else>><<pillory_type>>의 속옷을 완전히 벗기고는, 조롱하는 군중을 향해 <<his_ yi>> 엉덩이와 <<trPenisdesc $pillory_tenant.person.penisdesc>>_trResult를 노출시킨다.
					<</if>>
				<<else>>
					<<if $pronoun is "f">><<pillory_type>>의 치마를 들추고는,<<else>>바지를 내리고는,<</if>> 조롱하는 군중을 향해 속옷을 노출시킨다.
				<</if>><<set $pillory_tenant.lowerexposed += 1>>
			<<else>><<set $pillory_tenant.spank += 1>>/* 5% */
				어떤 <<personPost "이">> <<pillory_type>>에게로 다가가더니 <<his_ yi>> 엉덩이를 세게 때린다. 철썩 하는 소리가 거리에 울려퍼진다.
			<</if>>
		<<else>> /*night*/
			<<if $rng gte 86>> /* 15% chance of jeer and shout only, 85% chance of something active */
				여러 사람들이 <<personPost "이">> 필두로 죄수를 조롱하며 고함을 친다.
			<<elseif $rng gte 81>> /* 5% */
				어떤 <<personPost "이">> <<pillory_type>>에게 과일을 던진다. 움직이거나 막을 방법이 없기에, 과일이 <<the_pillory_person>>의 얼굴에 정통으로 맞는다. 커다란 환호성이 울려퍼진다.
				과일의 산성기를 눈에서 닦아낼 수가 없기에 더더욱 아파 보인다.
				<<set $pillory_tenant.fruit += 1>>
			<<elseif $rng gte 76>> /* 5% */
				어떤 <<personPost "이">> <<pillory_type>>에게 과일을 던지나 완전히 빗나간다.
			<<elseif $pillory_tenant.person.pronoun is "f" and $pillory_tenant.upperexposed lt 3>>
				<<set $pillory_tenant.upperexposed to 3>>
				<<personPost "이">> 무력한 <<pillory_type>>에게로 다가가더니 상의를 전부 벗겨, <<his_ yi>> <<if $pronoun is "f">><<trBreastsdesc $pillory_tenant.person.breastsdesc "을">>_trResult<<else>>가슴을<</if>> 군중에게 완전히 드러낸다.
			<<elseif $pillory_tenant.person.pronoun is "m" and $pillory_tenant.upperexposed lt 2>>
				<<set $pillory_tenant.upperexposed to 2>>
				<<personPost "이">> 무력한 <<pillory_type>>에게로 다가가더니 상의를 전부 벗겨, <<his_ yi>> <<if $pronoun is "f">><<trBreastsdesc $pillory_tenant.person.breastsdesc "을">>_trResult<<else>>가슴을<</if>> 군중에게 완전히 드러낸다.
			<<elseif $pillory_tenant.lowerexposed lt 2>>
				<<set $pillory_tenant.lowerexposed to 2>>
				<<personPost "이">> 무력한 <<pillory_type>>에게로 다가가더니 하의를 전부 벗겨, <<his_ yi>> <<if $pillory_tenant.person.gender is "f">>보지를<<else>><<penisdesc_ rul $pillory_tenant.person.penisdesc>><</if>> 군중에게 완전히 드러낸다. 커다란 환호성이 울려퍼진다.
			<<elseif $rng gte 66>> /* 10% */
				<<personPost "이">> 근처에 돌아다니던 개로 하여금 죄수의 헐벗은 엉덩이에 올라타도록 유도한다. 녀석은
				<<if $rng % 2>>머뭇거리며 <<the_pillory_person>>의 엉덩이를 몇 번 킁킁거리나,
				<</if>>별 흥미를 보이지 않는다.
			<<elseif $rng gte 58>> /* 8% */
				<<set $pillory_tenant.spank += 1>>
				어떤 <<personPost "이">> 구속대 뒤로 몰래 다가가서는 <<pillory_type>>의 노출된 <<if $pillory_tenant.person.gender is "f">>보지를<<else>>고환을<</if>> $_ly 후려친다. <<hePost "이">> 고통에 울부짖는 동안 군중은 조롱하고 웃음을 터트린다.
			<<elseif $rng gte 51>> /* 7% */
				<<set $pillory_tenant.spank += 2>><br>
				당신이 학교 주위에서 본 적이 있지만 수업을 들어본 적은 없는 어떤 선생이, 술취한 발걸음으로 구속대 앞으로 걸어간다.
				<<if $pillory_tenant.special.name is "Whitney">>
					<br><<set $pillory_tenant.spank += 1>>
					"이런, 안녕, 휘트니! <<print either("여기서 보다니 반갑구나!","이게 누구야!","여기에서 움직일 수 없는 거니? 불행하게도!","이거 입장이 상당히 바뀐 것 같지 않니!?","너를 여기서 보다니 멋진 놀라움이구나!")>>" <<he_ ga>> 싱긋 웃으며, 혀 꼬부라진 소리로 말한다.
					"<<print either("우리 둘 다 네가 이걸 벌어놨다는 것을 알고 있지.","우리 둘 다 네가 이걸 받기에 충분히 마땅하다는 것을 알고 있지.","그리고 오늘의 수업은 인과관계에 대한 것이란다.","네가 내게 지어준 못된 조그만 별명을 기억하니?","저번날에 네가 내 수업에서 무엇을 했는지 기억하니?")>>"
				<<elseif $pillory_tenant.special.name is "Leighton">>
					<br><<set $pillory_tenant.spank += 1>>
					"이런, 안녕하세요. 당신이세요, 교장님?" <<he_ ga>> 구속대 뒤에서, 시야에 들어가지 않도록 서서 말한다.
					"<<print either("제 생각에는 지금이 어떤 '익명 직원 평가' 시간인 것 같네요.","교장님이 '친절하기 위한 잔인함'에 대해 뭐라고 말씀하셨는지 기억하시죠?","그러니까 제가 추측하기에는 지금이 교장님에 대한 '솔직담백한 평가'를 할 차례 같은데요?","그래서 여기가 직원 불만사항을 발표할 '적절한 토론장'인 거죠?")>>"
				<<else>><br>
					"이런, 안녕하신가 거기," <<he_ ga>> 싱긋 웃으며, 혀 꼬부라진 소리로 말한다.
					"<<print either("보아하니 자네가 꽤 무례하게 굴었나 보군 그래.","징계라. 아주 중요하지.","좋은 저녁이지 않은가? 그렇게 생각하지 않나? 저 보름달 좀 보게나!")>>"
				<</if>><br>
				<<He_ nun>> <<pillory_type>>의 엉덩이를 <<person2>><<his_ yi>> 팔이 아플 때 까지 후려친다. 군중들은 <<person1>><<person_ i>> 아픔에 울부짖자  야유하며 웃는다.
			<<elseif $rng gte 41>> /* 10% */
				<<set $pillory_tenant.face += 1>>
				어떤 <<personPost "이">> 구속대 앞으로 가서는 <<pillory_type>> 앞에서 $_ly 자위하기 시작한다.
				<<person2>><<if $pronoun is "m">>곧 <<the_pillory_person>>의 얼굴에 정액이 튄다.
				<<else>><<HePost "은">> <<the_pillory_person>>의 얼굴에 <<person2>><<his_ yi>> 보지를 문지르며 가버린다.
				<</if>> 군중은 조롱하며 웃음을 터트린다.
			<<elseif $rng gte 31>> /* 10% */
				<<set $pillory_tenant.ass += 1>>
				어떤 <<personPost "이">> 구속대 뒤로 가서는 <<pillory_type>>의 항문을 $_ly <<if $pronoun is "m">>강간한다<<else>>손가락으로 쑤신다<</if>>. 군중은 <<person2>><<himPost "을">> 응원한다.
			<<elseif $rng gte 21>> /* 10% */
				<<set $pillory_tenant.genital += 1>>
				어떤 <<personPost "이">> 구속대 뒤로 가서는 <<if $pronoun is "m">><<the_pillory_person "을">><<else>><<the_pillory_person "을">> 페니스 밴드로<</if>> $_ly 강간한다. <<person2>>군중은 사진을 찍으며 <<himPost "을">> 응원한다.
			<<elseif $rng gte 11>> /* 10% */
				<<set $pillory_tenant.genital += 1>><<set $pillory_tenant.ass += 1>>
				들개가 _ly <<the_pillory_person "을">> 강간하는 동안 군중은 그걸 지켜보며 사진을 찍는다. 어떤 <<person2>><<personPost "이">> 보상으로 <<print either("개에게 비스킷을 준다.","개의 머리를 쓰다듬어준다.","개에게 단 것을 준다.","개에게 크림빵을 준다.")>>
				<br>
				군중은 이 변태적인 구경거리를 즐긴다.
			<<elseif $rng gte 6 and maleChance() gt 0 and (maleChance() lt 100 or $pillory_tenant.person.gender isnot "m")>> /* 5% - with men allowed */
				<<set $pillory_tenant.ass += 1>><<set $pillory_tenant.face += 1>>
				<<if $rng % 3 is 0>>비번인 남자 경찰 두 명이 다가온다. 그들은 어떤 <<personPost>> 에게 동영상을 찍게 하고 그들은<<else>>두 남자가 다가온다. 그들은 함께<</if>>
				<<if $pillory_tenant.person.gender is "m">>항문을 써서 <<else>>$_ly <</if>>위와 아래로 <<the_pillory_person "을">> 범한다. 군중들은 이 구경거리를 즐긴다.
			<<elseif $rng gte 6 and maleChance() lt 100 and (maleChance() gt 0 or $pillory_tenant.person.gender isnot "f")>> /* 5% - with women allowed */
				<<set $pillory_tenant.ass += 1>><<set $pillory_tenant.face += 1>>
				<<if $rng % 3 is 0>>비번인 여자 경찰 두 명이 다가온다. 그들은 어떤 <<personPost>> 에게 동영상을 찍게 하고 그들은<<else>>두 여자가 다가온다. 그들은 함께<</if>>
				<<if $pillory_tenant.person.gender is "m">>항문을 써서 <<else>>$_ly <</if>>위와 아래로 <<the_pillory_person "을">> 페니스 밴드를 찬 채로 범한다. 군중들은 이 구경거리를 즐긴다.
			<<else>> /* 5% */
				<<set $pillory_tenant.spank += 1>>
				어떤 <<personPost "이">> <<pillory_type>>에게 다가와서는 엉덩이를 세게 때린다. 철썩 하는 소리가 거리에 울려퍼진다.
			<</if>>
		<</if>>
	<<else>>/* already abused this hour - no action, don't want spamming this scene to accelerate things ridiculously */
		사람들이
		<<if Time.schoolDay and ((Time.hour gte 7 and Time.hour lte 8) or Time.hour is 15) and $rng lte 34>>
			<<pillory_type "을">> 둘러싸고는 <<print either("야유한다","웃는다","손가락질 한다","욕설을 내뱉는다","놀린다","조롱한다","흘겨본다")>>. 인근 학교의 학생 무리가 지나가며, 넋을 놓고
			<<if $pillory_tenant.lowerexposed gte 2 or $pillory_tenant.upperexposed gte 3>>음란하게 노출한 죄수를 쳐다본다.
				<<if $rng % 3 is 0>>
				격분한 구경꾼이 구속대로 달려가서는 <<pillory_type>>의 옷을 다시 입혀준다.
				<<set $pillory_tenant.lowerexposed to 0>><<set $pillory_tenant.upperexposed to 0>><</if>>
			<<else>>죄수를 쳐다본다.
			<</if>>
		<<elseif Time.dayState isnot "night">>
			<<if $rng lte 80>>
				<<pillory_type "을">> 둘러싸고는 <<print either("야유하며","웃으며","손가락질 하며","욕설을 내뱉으며","놀리며","조롱하며","흘겨보며")>> <<print either("서로 뭔가를 중얼거린다.","사진을 찍는다.","흥겨워한다.")>>
			<<elseif $rng lte 93>>
				<<pillory_type "을">> 둘러싸고는 <<print either("야유한다","웃는다","손가락질 한다","욕설을 내뱉는다","놀린다","조롱한다","흘겨본다")>>. 몇몇은 질렸는지 떠나간다.
				<<set $pillory_tenant.crowd -= 1>>
			<<else>>
				<<pillory_type "을">> 둘러싸고는 <<print either("야유한다","웃는다","손가락질 한다","욕설을 내뱉는다","놀린다","조롱한다","흘겨본다")>>. 버스 한 대가 근처에서 사람들을 내려준다. 몇몇이 구속대에 몰린 군중에 합류한다.
				<<set $pillory_tenant.crowd += 1>>
			<</if>>
		<<else>>
			<<if $rng lte 67>>
				<<if $pillory_tenant.lowerexposed gte 2 and $rng % 4 is 0>><<pillory_type "을">> 둘러싸고는 <<print either("야유하며","웃으며","손가락질 하며","욕설을 내뱉으며","놀리며","조롱하며","흘겨보며")>> <<his_ yi>> 노출된, 맨엉덩이 앞에서 포즈를 취하고는 셀카를 찍는다.
				<<else>><<pillory_type "을">> 둘러싸고는 <<print either("야유하며","웃으며","손가락질 하며","욕설을 내뱉으며","놀리며","조롱하며","흘겨보며")>> <<print either("험악한 말들을 중얼거린다.","술을 마신다.","빈 맥주 캔을 던진다.","험악한 위협을 가한다.","죄수와 함께 셀카를 찍는다.","지저분한 농담을 던진다.")>>
				<</if>>
			<<elseif $rng lte 85>>
				<<pillory_type "을">> 둘러싸고는 <<print either("야유한다","웃는다","손가락질 한다","욕설을 내뱉는다","놀린다","조롱한다","흘겨본다")>>. 몇몇은 질렸는지 떠나간다.
				<<set $pillory_tenant.crowd -= 1>>
			<<else>>
				<<pillory_type "을">> 둘러싸고는 <<print either("야유한다","웃는다","손가락질 한다","욕설을 내뱉는다","놀린다","조롱한다","흘겨본다")>>. 지나가던 몇 사람이 구속대에 몰린 군중에 합류한다.
				<<set $pillory_tenant.crowd += 1>>
			<</if>>
		<</if>>
	<</if>>
	<<if $pillory_tenant.upperexposed gte 3>><<if $pillory_tenant.person.gender is "f" or $pillory_tenant.person.pronoun is "f">><<set $pillory_tenant.upperexposed to 3>><<else>><<set $pillory_tenant.upperexposed to 2>><</if>><</if>>
	<<if $pillory_tenant.lowerexposed gt 2>><<set $pillory_tenant.lowerexposed to 2>><</if>>
<</widget>>

<<widget "npc_pillory_release_schedule">>
	<<get_pillory_npc>>
	<br>
	<<set $_endTime to new DateTime($pillory_tenant.endTime)>>
	<<set $_timeLeft to Time.date.compareWith($_endTime)>>
	<<if $_timeLeft.days lt 1>>
		<<HePost "은">>
		<<if $_timeLeft.hours gt 0>>
			$_timeLeft.hours 시간 뒤에 풀려날 예정이다.
		<<else>>
			즉시 풀려날 예정이다.
		<</if>>
	<<else>>
		<<He>> is scheduled for release <<if $_timeLeft.days is 1>>tomorrow<<else>>in two days<</if>> at
		<<switch $_endTime.hour>>
			<<case 0>>자정에 풀려날 예정이다.
			<<case 12>>정오에 풀려날 예정이다.
			<<default>><<ampm $_endTime.hour>>에 풀려날 예정이다.
		<</switch>>
	<</if>>
	<<endevent>>
<</widget>>

<<widget "end_npc_pillory">>
	<<get_pillory_npc>>
	<<if Time.minute lte 15>>
		경찰관 한 사람이 <<print either("지금","바로","끙끙거리며","이제")>>
		<<the_pillory_person "을">> 구속대에서 풀어준다. <<if Weather.precipitation is "rain">><<His_ yi>> 옷은 비에 젖어 속이 비쳐보인다.<<elseif Weather.isFreezing>><<He_ nun>> 추위에 몸을 떤다.<</if>>
	<<elseif Time.minute lte 30>>
		<<The_pillory_person "은">> <<print either("글썽이는","반항적인","트라우마의 징조가 보이는","격분한")>> 눈으로 비틀거리며 구속대에서 멀어져가고 있다.
		<<if Weather.precipitation is "rain">><<His_ yi>> 옷은 비에 젖어 속이 비쳐보인다.<</if>>
	<<else>>
		<<The_pillory_person "은">> 풀려나 돌아갔다. 몇몇 공무원들이 구속대를 청소하고 있다.
	<</if>>
	<<set _totalSeconds to Time.date.compareWith(new DateTime($pillory_tenant.startTime), true) / TimeConstants.secondsPerHour>>
	<<set $_hours to _totalSeconds / TimeConstants.secondsPerHour>>
	<<set $rng += $_hours>>
	<<if $rng gte 67 or $rng gte 33 and Weather.precipitation is "rain">>많은 군중들이 야유하며 소리지르고 있다.<</if>>
	<br><br>
	<<clear_pillory>>
	<<endevent>>
<</widget>>

<<widget "clear_pillory">>
	<<if $pillory_tenant and $pillory_tenant.special.name is "Whitney">>
		<<set C.npc.Whitney.state to "active">>
	<</if>>
	<<setup_pillory>>
<</widget>>

<<widget "drench">>
	<!-- Drench PC in lewd liquid(s). First arguments set filth type: semen(default), goo, nectar or multiple. Last argument sets level 1-5 (default 1). Body interiors will be ignored if "outside" is specified as any of the arguments. -->
	<!-- valid examples: <<drench>> <<drench goo nectar 3 outside>><<drench outside 2>> -->
	<!-- invalid example: <<drench 3 semen>> -->
	<<set $_outside to _args.includes("outside") ? "outside" : "all">>
	<!-- "outside" can appear as the last argument, if so - delete it so the $_amount will be properly detected -->
	<<run _args.delete("outside")>>
	<<set $_amount to Number.isInteger(_args.last()) ? Math.clamp(_args.last(), 1, 5) : 1>>
	<<set $_goo to _args.includesAny("goo", "slime", "liquid") ? "goo" : "">>
	<<set $_nectar to _args.includes("nectar") ? "nectar" : "">>
	<<set $_semen to (_args.includesAny("semen","cum") || ($_goo + $_nectar).length === 0) ? "semen" : "">>
	<<set $hygiene to 3000>>
	<<bodyliquid $_outside $_semen $_goo $_nectar $_amount>>
<</widget>>

<<widget "awarenessup">>
	<<set _awareness to _args[1]>>
	<<if $awareness gte _args[0]>>
		<span class="pink">이미 다 알고 있던 것이다.</span>
	<<else>>
		<<gawareness>><<awareness _awareness>>
	<</if>>
<</widget>>

<<widget "linkradiogroup">>
	<<set _receiver_name to _args[0]>>
	<<set _options to _args[1]>>
	<<set _set_value to State.getVar(_receiver_name)>>

	<span class="no-numberify">
		<<for _label, _value range _options>>
			<<capture _receiver_name, _value>>
				<span @class="(_set_value is _value ? 'goldLink' : '')">
					<<link _label>>
						<<run State.setVar(_receiver_name, _value)>>
						<<run Engine.show()>> <!-- refresh the page without leaving it -->
					<</link>>
				</span>
			<</capture>>
			|
		<</for>>
	</span>
<</widget>>

<<widget "deskText">>
<<if $studyBooks is undefined>>
	<<set $studyBooks to {}>>
	<<set $studyBooks.rented to "none">>
	<<set $studyBooks.stolen to "none">>
<</if>>
<<set _desk to Furniture.get('desk')>>
<<set _chair to Furniture.get('chair')>>
<<set _projectOptions to [$scienceproject, $mathsproject].includes("ongoing")>>
<<set _bookOptions to ($studyBooks.stolen is 'Raul and Janet' or $studyBooks.rented is 'Raul and Janet' or $studyBooks.stolen is 'Pinch' or $studyBooks.rented is 'Pinch')>>
<<set _wardrobe to Furniture.get('wardrobe')>>
<<set _playOptions to ($englishPlay is 'ongoing' and $englishPlayRoles.Player isnot 'none')>>

<<if _projectOptions || _playOptions || _bookOptions || ($christmas_wrap is 1 && $christmas_gift_robin_wrapped isnot 1) || ($christmas_wrap is 1 && $christmas_gift is "clothes_unwrapped")>>
	<<if _args[0] is "noicon">>
		당신의 <<trFurniture _desk.name "name" "과">>_trResult <<trFurniture _chair.name "name" "이">>_trResult 옷장 옆에 끼워 넣어져 있다.
		<br>
		<<projectoptions>>
		<<homeStudyOptions>>
		<<christmas_options>>
		<br>
	<</if>>
<<else>>
	<<if _args[0] is "icon">>
		<br>
		<<deskchairicon>>당신의 <<trFurniture _desk.name "name" "과">>_trResult <<trFurniture _chair.name "name" "이">>_trResult 옷장 옆에 끼워 넣어져 있다.
	<</if>>
<</if>>
<</widget>>


<<widget "tableText">>
<<set _table to Furniture.get('table')>>
<<set _chair to Furniture.get('chair')>>
<<if $pregnancyStats.parasiteDoctorEvents gte 2>>
	<<if _args[0] is "noicon">>
		<<if _table>>
			<br>
			당신의 <<if _chair and _chair.name isnot "chair">><<trFurniture _table.name "name" "과">>_trResult <<trFurniture _chair.name "name">>_trResult 하나가<<else>><<trFurniture _table.name "name" "이">>_trResult<</if>> 벽 옆에 놓여 있다.
			<br>
		<<elseif _chair and _chair.name isnot "chair">>
			<br>
			당신의 <<trFurniture _chair.name "name">>_trResult 하나가 벽 옆에 놓여 있다.
			<br>
		<<else>>
			<br>
			당신의 수조가 바닥에 놓여 있다.
			<br>
		<</if>>
		<<fishtankicon>><<containersLink>>
	<</if>>
<<else>>
	<<if _args[0] is "icon">>
		<<if _table>>
			<br>
			<<bedroomtablechairicon>> 당신의 <<if _chair and _chair.name isnot "chair">><<trFurniture _table.name "name" "과">>_trResult <<trFurniture _chair.nameSolo "name" "이">>_trResult<<else>><<trFurniture _table.name "name" "이">>_trResult<</if>> 벽 옆에 놓여 있다.
		<<elseif _chair and _chair.name isnot "chair">>
			<br>
			<<bedroomtablechairicon>> 두번째 <<trFurniture _chair.name "name" "이">>_trResult 벽 옆에 놓여 있다.
		<</if>>
	<</if>>
<</if>>
<</widget>>

<<widget "radiogroup">>
	<<set _receiver_name to _args[0]>>
	<<set _possible_values_by_label to _args[1]>>
	<<set _set_value to State.getVar(_receiver_name)>>

	<<for _label, _value range _possible_values_by_label>>
		<label>
		<<if _set_value is _value>>
			<<radiobutton _receiver_name _value checked>>
		<<else>>
			<<radiobutton _receiver_name _value>>
		<</if>>
		_label
		</label>
	<</for>>
<</widget>>

<<widget "settextcolorfromfemininity">>
	<<if _args[0] gt 0>>
		<<set _text_color to "pink">>
	<<elseif _args[0] lt 0>>
		<<set _text_color to "lblue">>
	<<else>>
		<<set _text_color to "">>
	<</if>>
<</widget>>

<<widget "settextcolorfromgender">>
	<<if _args[0] is "f">>
		<<set _text_color to "pink">>
	<<elseif _args[0] is "m">>
		<<set _text_color to "lblue">>
	<<else>>
		<<set _text_color to "">>
	<</if>>
<</widget>>

<<widget "cheatStart">>
	<<set $cheatdisable to "f">><<set $money to 500000>>
	<<set $rentmoney to 10000>><<rentmod>>
	<<set $renttime to 7>><<set $rentday to Time.weekDay>>
	<<set $rentstage to 1>>
<</widget>>

<<widget "swim_check">>
	<<if ($worn.upper.type.includes("naked") or $worn.upper.type.includes("swim")) and
	($worn.lower.type.includes("naked") or $worn.lower.type.includes("swim")) and
	($worn.under_upper.type.includes("naked") or $worn.under_upper.type.includes("swim")) and
	($worn.under_lower.type.includes("naked") or $worn.under_lower.type.includes("swim"))>>
		<<set _swim_check to 1>>
	<</if>>
<</widget>>

<<widget "pantsable">>
	<!-- check if lowerwear allows for player to be pantsed or upskirted
	_pantsable: lowerwear can be pulled down; _upskirt: skirt can be flipped up -->
	<<if setup.clothes.lower[clothesIndex('lower', $worn.lower)].skirt is 1 and ($worn.lower.set is $worn.upper.set)>>
		<<set _upskirt to 1>>
		<<set _pantsable to 0>>
	<<elseif setup.clothes.lower[clothesIndex('lower', $worn.lower)].skirt is 1>>
		<<set _upskirt to 1>>
		<<set _pantsable to 1>>
	<<elseif ["shortalls"].includes($worn.lower.name) or ($worn.lower.set is $worn.upper.set)>>
		<<set _upskirt to 0>>
		<<set _pantsable to 0>>
	<<else>>
		<<set _upskirt to 0>>
		<<set _pantsable to 1>>
	<</if>>
<</widget>>

<<widget "skulduggeryuse">>
	<<if _args[0] is true>>
		<!-- This argument lets us use skulduggery without adding extra linebreaks that make formatting things a nightmare. -->
		<<if $skulduggery lte ($skulduggerydifficulty + 100)>>
			<<combatskulduggeryskilluse>>
		<<else>>
			<span class="blue">너무 쉬웠다. 아무 것도 배우지 못했다.</span>
		<</if>>
	<<else>>
		<<if $skulduggery lte ($skulduggerydifficulty + 100)>>
			<<skulduggeryskilluse>>
		<<else>>
			<span class="blue">너무 쉬웠다. 아무 것도 배우지 못했다.</span>
			<br><br>
		<</if>>
	<</if>>
<</widget>>

<<widget "wetness_init">>
	<<if $objectVersion.vaginaWetness lt 3 or $objectVersion.vaginaWetness is undefined>>
		<<set $vaginaWetness to 0>>
		<<set $trackedArousal to [0]>>
		<<set $masturbation_vaginaFluid to 0>>
		<<set $vaginaArousalWetness to 0>>
		<<set $timeSinceArousal to 0>>

		<<set $objectVersion.vaginaWetness to 3>>
	<</if>>
<</widget>>

<<widget "hand_gag">>/*First arg the NPC index. Second arg the hand used.*/
	<<if !$worn.face.type.includes("gag") and _args[0] isnot undefined>>
		<<if _args[1] is "left">>
			<<set $mouthuse to "lefthand">><<set $NPCList[_args[0]].lefthand to "mouth">>
		<<else>>
			<<set $mouthuse to "righthand">><<set $NPCList[_args[0]].righthand to "mouth">>
		<</if>>
	<</if>>
<</widget>>

<<widget "prop">>
	<<for _i = 0; _i < _args.length; _i++>>
		<<set $prop.push(_args[_i])>>
	<</for>>
<</widget>>

<<widget "schoolrep">>
	<<if _args[0] and _args[1] and (!$worn.face.type.includes("mask") or _args[1] lt 0)>>
		<<if $schoolrep[_args[0]] lt 5 or _args[1] lt 0>>
			<<if _args[0] is "crossdress" and ($daily.school.crossdress is undefined or _args[1] lt 0)>>
				<<set $daily.school.crossdress to 1>>
				<<set $schoolrep[_args[0]] += _args[1]>>
				<<if $schoolrep.crossdress gte 5>>
					<<set $genderknown.pushUnique("Kylar")>>
					<<set $genderknown.pushUnique("Whitney")>>
					<<set $genderknown.pushUnique("Sydney")>>
					<<set $genderknown.pushUnique("Sirris")>>
					<<set $genderknown.pushUnique("River")>>
					<<set $genderknown.pushUnique("Doren")>>
					<<set $genderknown.pushUnique("Winter")>>
					<<set $genderknown.pushUnique("Mason")>>
					<<set $genderknown.pushUnique("Leighton")>>
					<<set $school_crossdress_message to 5>>
				<<elseif $schoolrep.crossdress gte 1 and _args[1] gte 1>>
					<<set $school_crossdress_message to $schoolrep.crossdress>>
				<</if>>
				<<set $schoolrep.crossdress to Math.clamp($schoolrep.crossdress, 0, 5)>>
				<<if _args[1] gt 0>><<set $weekly.crossdressingFameReduction to true>><</if>>
				<<set $schoolrep.herm to 0>> /* Reset for females that lose a "penis" */
			<<elseif _args[0] is "herm" and ($daily.school.herm is undefined or _args[1] lt 0)>>
				<<set $daily.school.herm to 1>>
				<<set $schoolrep[_args[0]] += _args[1]>>
				<<if $schoolrep.herm gte 5>>
					<<set $genderknown.pushUnique("Kylar")>>
					<<set $genderknown.pushUnique("Whitney")>>
					<<set $genderknown.pushUnique("Sydney")>>
					<<set $genderknown.pushUnique("Sirris")>>
					<<set $genderknown.pushUnique("River")>>
					<<set $genderknown.pushUnique("Doren")>>
					<<set $genderknown.pushUnique("Winter")>>
					<<set $genderknown.pushUnique("Mason")>>
					<<set $genderknown.pushUnique("Leighton")>>
					<<set $school_herm_message to 5>>
				<<elseif $schoolrep.herm gte 1 and _args[1] gte 1>>
					<<set $school_herm_message to $schoolrep.herm>>
				<</if>>
				<<set $schoolrep.herm to Math.clamp($schoolrep.herm, 0, 5)>>
				<<set $schoolrep.crossdress to 0>> /* Reset for females that gain a "penis" */
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "schoolrep_naked">>
	<<if !playerChastity("hidden")>>
		<<if $player.penisExist and $player.vaginaExist>>
			<<schoolrep herm 1>>
		<<elseif $player.gender isnot $player.gender_appearance and $NudeGenderDC gt 0>>
			/*increases crossdressing fame if NPCs judge gender based on genitals*/
			<<schoolrep crossdress 1>>
		<<elseif $player.gender is $player.gender_appearance and $schoolrep.crossdress gt 0 and !$daily.crossdressingFameReduction and !$weekly.crossdressingFameReduction and random(0,100) gte 100 - ($schoolrep.crossdress * 3)>>
			<<schoolrep crossdress -1>>
			<<set $daily.crossdressingFameReduction to true>>
		<</if>>
	<</if>>
<</widget>>

<<widget "event_trigger">>
	<<set $danger to random(1, 10000)>>
	<<if $danger gte (9900 - $allure)>>
		<<set $event_trigger to 1>>
	<</if>>
<</widget>>

<<widget "combat_lewdity_text">>
	<<combat_promiscuity_text>>
	<<combat_deviancy_text>>
<</widget>>

<<widget "adjust_school_traits">>
	<<if $science gte 1000>>
		<<set $sciencetrait to 4>>
	<<elseif $science gte 700>>
		<<set $sciencetrait to 3>>
	<<elseif $science gte 400>>
		<<set $sciencetrait to 2>>
	<<elseif $science gte 200>>
		<<set $sciencetrait to 1>>
	<<else>>
		<<set $sciencetrait to 0>>
	<</if>>
	<<if $maths gte 1000>>
		<<set $mathstrait to 4>>
	<<elseif $maths gte 700>>
		<<set $mathstrait to 3>>
	<<elseif $maths gte 400>>
		<<set $mathstrait to 2>>
	<<elseif $maths gte 200>>
		<<set $mathstrait to 1>>
	<<else>>
		<<set $mathstrait to 0>>
	<</if>>
	<<if $english gte 1000>>
		<<set $englishtrait to 4>>
	<<elseif $english gte 700>>
		<<set $englishtrait to 3>>
	<<elseif $english gte 400>>
		<<set $englishtrait to 2>>
	<<elseif $english gte 200>>
		<<set $englishtrait to 1>>
	<<else>>
		<<set $englishtrait to 0>>
	<</if>>
	<<if $history gte 1000>>
		<<set $historytrait to 4>>
	<<elseif $history gte 700>>
		<<set $historytrait to 3>>
	<<elseif $history gte 400>>
		<<set $historytrait to 2>>
	<<elseif $history gte 200>>
		<<set $historytrait to 1>>
	<<else>>
		<<set $historytrait to 0>>
	<</if>>
	<<set $english to Math.clamp($english, 0, 1000)>>
	<<set $maths to Math.clamp($maths, 0, 1000)>>
	<<set $science to Math.clamp($science, 0, 1000)>>
	<<set $history to Math.clamp($history, 0, 1000)>>
<</widget>>

/*
	Argument 1 is base amount. You can also use decimals.
	Argument 2 is variation.
	Argument 3 is crime.
	<<moneyGain 1>> will give £1.00 which is not stolen.
	<<moneyGain 1 false false>> will give £1.00 which is not stolen.
	<<moneyGain 1 true>> will give between £0.80 and £1.20 which is not stolen.
	<<moneyGain 1 true true>> will give between £0.80 and £1.20 which is stolen, and can scale further with skulduggery.
	<<moneyGain 1 false true>> will give £1.00 which is stolen, and can scale with skulduggery.
*/
<<widget "moneyGain">><<silently>>
	<<if _args[0]>>
		<<set _base_amount to _args[0] * 100>>
	<<else>>
		<<set _base_amount to 100>>
	<</if>>
	<<if _args[1]>>
		<<set _variation to Math.floor(random(Math.floor(_base_amount / 5 * -1), Math.floor(_base_amount / 5)))>>
	<<else>>
		<<set _variation to 0>>
	<</if>>
	<<if _args[2]>>
		<<set _skulduggeryMulti to (1 + (currentSkillValue('skulduggery') / 2000))>>
	<<else>>
		<<set _skulduggeryMulti to 1>>
	<</if>>
	<<set _money_gain to Math.floor((_base_amount + _variation) * _skulduggeryMulti)>>
	<<if _args[2]>>
		<<crimeUp `_money_gain / 100` "thievery">>
	<</if>>
	<<set $money += _money_gain>>
<</silently>><<printmoney _money_gain>><</widget>>

/*
	Used like above, but only shows the money amount, doesn't add money or crime.
	Use <<crimeUp `_money_gain / 100`>> and <<set $money += _money_gain>> where necessary in links, etc.
*/
<<widget "moneyGainDisplay">><<silently>>
	<<if _args[0]>>
		<<set _base_amount to _args[0] * 100>>
	<<else>>
		<<set _base_amount to 100>>
	<</if>>
	<<if _args[1]>>
		<<set _variation to Math.floor(random(Math.floor(_base_amount / 5 * -1), Math.floor(_base_amount / 5)))>>
	<<else>>
		<<set _variation to 0>>
	<</if>>
	<<if _args[2]>>
		<<set _skulduggeryMulti to (1 + (currentSkillValue('skulduggery') / 2000))>>
	<<else>>
		<<set _skulduggeryMulti to 1>>
	<</if>>
	<<set _money_gain to Math.floor((_base_amount + _variation) * _skulduggeryMulti)>>
<</silently>><<printmoney _money_gain>><</widget>>

<<widget "formatmoney">>
	<<set _integer to Math.floor(_args[0] / 100)>>
	<<set _printargs to Math.abs(_integer).toLocaleString("en-GB")>>
	<<if _integer <= 9999>>
		<<set _printargs to _printargs + (_args[0] % 100 ? "." + ("0" + Math.floor(Math.abs(_args[0] % 100))).slice(-2) : "")>>
	<</if>>
	<<set _printmoney to (_args[0] gte 0 ? "" : "-") + "£" + _printargs>>
<</widget>>

<<widget "printmoney">><<silently>><!-- (amount in pennies, highlight toggle) -->
	<<if _args.length gt 2 or typeof(_args[0]) isnot "number">><!-- sanity checks -->
		<<set _printmoney to '<span class="red">printmoney error: invalid arguments: _args</span>'>>
	<<else>>
		<<formatmoney _args[0]>>
	<</if>>
	<<set _text_output to `<span @class='_args[1]?_args[1]:"gold"'>` + _printmoney + '</span>'>>
<</silently>><<print _text_output>><</widget>>

<<widget "sadism">>
	<<if _args[0]>>
		<<set $sadism += _args[0]>>
		<<set $sadism to Math.clamp($sadism, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "masochism">>
	<<if _args[0]>>
		<<set $masochism += _args[0]>>
		<<set $masochism to Math.clamp($masochism, 0, 1000)>>
	<</if>>
<</widget>>

<<widget "enable_rescue">>
	<<set $rescue to 1>>
<</widget>>

<<widget "hypnotised">>
	<<if _args[0]>>
		<<set $hypnotised += _args[0]>>
	<</if>>
<</widget>>

<<widget "giftSexToys">>
	<!-- _args[0] is the named NPC. -->
	<!-- Currently only works for strap-ons. Will need a refactor when other toy scenes are written. -->
	<<run window.handSextoysGiftToNPC(_args[0])>>
	<<set _strapons to checkIfNPCHasCategorySextoy(_args[0],"strap-on")>>
	<<if _strapons.length > 0>>
		<<for _i = 0; _i lt _strapons.length; _i++>>
			<<if _strapons[_i].shape is undefined>>
				<<set _strapons[_i].shape to "dildo">>
			<</if>>
			<<if _strapons[_i].prefixdescriptor is undefined>>
				<<set _strapons[_i].prefixdescriptor to "">>
			<</if>>
			<<generateNewStrapon _strapons[_i].size _strapons[_i].colour _strapons[_i].shape>>
			<<giveNNPCnewstrapon _args[0]>>
		<</for>>
	<</if>>
<</widget>>

<<widget "bodyliquid">><<silently>>
	<!-- first argument is either bodypart, all, outside, inside, or clear (required) -->
	<!-- second and later arguments are liquid types (semen, goo, nectar, or all; at least one required) -->
	<!-- last argument is optional and if numeric - specifies the amount (default: 1) -->

	<!-- process first argument and delete it so <<bodyliquid all all>> will work as expected -->
	<<set $_bodypart to _args[0]>>
	<<run _args.deleteAt(0)>>
	<<set $_clear to $_bodypart is "clear">>
	<<switch $_bodypart>>
		<<case "all" "clear">>
			<!-- use clone() to make sure we're not modifying setup -->
			<<set $_bodypart to clone(setup.bodyliquid.bodyparts)>>
		<<case "outside">>
			<<set $_bodypart to clone(setup.bodyliquid.bodyparts)>>
			<<run $_bodypart.delete(setup.bodyliquid.innerbodyparts)>>
		<<case "inside">>
			<<set $_bodypart to clone(setup.bodyliquid.innerbodyparts)>>
		<<default>>
			<<if setup.bodyliquid.bodyparts.includes($_bodypart)>>
				<<set $_bodypart to [$_bodypart]>>
			<<else>>
				<<set $_fail to true>>
			<</if>>
		<!--/case -->
	<</switch>>
	<<if !$_fail and (!$_clear or _args.last() lte -5)>>
		<<if !V.player.penisExist>>
			<<run $_bodypart.delete("penis")>>
		<</if>>
		<<if !V.player.vaginaExist>>
			<<run $_bodypart.delete("vagina", "vaginaoutside")>>
		<</if>>
		<<if $_bodypart.length is 0 and $options.debugdisable is "f">>
			<<run console.log(Utils.GetStack(), "- attempt to slap bodyliquid on nonexistent genitals failed successfully")>>
		<</if>>
	<</if>>

	<!-- select which liquids to modify, fail if none -->
	<<if $_clear or _args.includes("all")>>
		<<set $_liquids to clone(setup.bodyliquid.liquidtype)>>
	<<else>>
		<<set $_liquids to []>>
		<<if _args.includesAny("goo", "slime", "fluid")>>
			<!-- "slime" alternative because slime is a common descriptor -->
			<!-- "fluid" alternative for <<tentacleadv>> -->
			<<set $_liquids.push("goo")>>
		<</if>>
		<<if _args.includes("nectar")>>
			<<set $_liquids.push("nectar")>>
		<</if>>
	<</if>>
	<<if _args.includesAny("cum", "semen")>>
		<!-- "cum" alternative because cum is a common descriptor -->
		<<set $_liquids.push("semen")>>
	<</if>>
	 <<if $_liquids.length is 0>>
		<<set $_fail to true>>
	 <</if>>

	<!-- process The Final Argument, if integer - assume amount, else default to 1 -->
	<<if $_clear>>
		<<set $_amount to -10>>
	<<elseif Number.isInteger(_args.last())>>
		<<set $_amount to _args.last()>>
	<<else>>
		<<set $_amount to 1>>
	<</if>>

	<<if $_fail is true>>
	<<else>>
		<<for $_part range $_bodypart>>
			<<for $_type range $_liquids>>
				<<set $player.bodyliquid[$_part][$_type] to Math.clamp($player.bodyliquid[$_part][$_type] + $_amount, 0, 5)>>
			<</for>>
		<</for>>
	<</if>>
	<</silently>>
	<<if $options.debugdisable is "f" and $_fail is true>>
		<<error {
			message	: `bodyliquid widget on ${Utils.GetStack()} failed, please report`,
			source	: `Arguments: ${$_bodypart} | ${_args[0]} | ${_args[1]} | ${_args[2]} | ${_args[3]}.`
		}>>
	<</if>>
<</widget>>


<<widget "semenswallowedstat">>
	<<if $statFreeze isnot true and _args[0] isnot undefined>>
		<<set $semenswallowedstat += _args[0]>>
	<</if>>
<</widget>>

<<widget "animalsemenswallowedstat">>
	<<if $statFreeze isnot true and _args[0] isnot undefined>>
		<<set $animalsemenswallowedstat += _args[0]>>
	<</if>>
<</widget>>

<<widget "visionPrepMorph">>
	/*
	!!!!! Should be used after <<freezePlayerStats>> !!!!!!
	Resets stats to a default state in preparation to transform player into another character.
	*/
	<<if !$frozenValues>>
		<<error {message:"<<visionPrepMorph>> was called, but player stats are not frozen!"}>>
		<<exitAll>>
	<</if>>

	<<set $worn.genitals to clone(setup.clothes.genitals[0])>>
	<<run delete V.worn.butt_plug>>
	<<set $clothingrebuy to 0>>

	<<for _bodypart range $parasite.bodyparts>>
		<<set $parasite[_bodypart] to {}>>
	<</for>>
	<<bodyliquid "clear">>
	<<bodywriting_init>>
	<<set $player.virginity to {anal:true,oral:true,penile:true,vaginal:true,temple:false,handholding:true,kiss:true}>>

	<<set $pain to 0>>
	<<set $arousal to 0>>
	<<set $tiredness to 0>>
	<<set $stress to 0>>
	<<set $trauma to 0>>
	<<set $control to 500>>

	<<set $angel to 0>>
	<<set $angelbuild to 0>>
	<<set $fallenangel to 0>>
	<<set $fallenbuild to 0>>
	<<set $demon to 0>>
	<<set $demonbuild to 0>>
	<<set $wolfgirl to 0>>
	<<set $wolfbuild to 0>>
	<<set $cat to 0>>
	<<set $catbuild to 0>>
	<<set $cow to 0>>
	<<set $cowbuild to 0>>
	<<set $harpy to 0>>
	<<set $birdbuild to 0>>
	<<set $fox to 0>>
	<<set $foxbuild to 0>>
	<<run Object.keys(V.transformationParts).forEach((tf) => {
		Object.entries(V.transformationParts[tf]).forEach(([part, value]) => {
			if (value !== 'disabled' && value !== 'hidden') {
				V.transformationParts[tf][part] = 'hidden';
			}
		});
	})>>
	<<set $skulduggery to 0>>
	<<set $spray to 0>>
<</widget>>
