:: Widgets Mirror [widget]
<<widget "calchairlengthstage">>
	<<if $hairlength gte 1000>>
		<<set $hairlengthstage to "feet">>
	<<elseif $hairlength gte 800>>
		<<set $hairlengthstage to "thighs">>
	<<elseif $hairlength gte 600>>
		<<set $hairlengthstage to "navel">>
	<<elseif $hairlength gte 400>>
		<<set $hairlengthstage to "chest">>
	<<elseif $hairlength gte 200>>
		<<set $hairlengthstage to "shoulder">>
	<<else>>
		<<set $hairlengthstage to "short">>
	<</if>>

	<<if $fringelength gte 1000>>
		<<set $fringelengthstage to "feet">>
	<<elseif $fringelength gte 800>>
		<<set $fringelengthstage to "thighs">>
	<<elseif $fringelength gte 600>>
		<<set $fringelengthstage to "navel">>
	<<elseif $fringelength gte 400>>
		<<set $fringelengthstage to "chest">>
	<<elseif $fringelength gte 200>>
		<<set $fringelengthstage to "shoulder">>
	<<else>>
		<<set $fringelengthstage to "short">>
	<</if>>
	<<set $hairlength = Math.clamp($hairlength, 0, 1000)>>
	<<set $fringelength = Math.clamp($fringelength, 0, 1000)>>
<</widget>>

<<widget "mirror">>
	<div id="mirror">
		<<if _args[0] isnot undefined>>
			<<mirrorDisplay _args[0]>>
		<<else>>
			<<mirrorDisplay>>
		<</if>>
	</div>
<</widget>>

<<widget "preMirror">>
	<<if (Browser.isMobile).any()>>
		<<set $showMannequins to 0>>
	<<else>>
		<<set $showMannequins to 1>>
	<</if>>
<</widget>>

<<widget "postMirror">>
	<<shopClothingFilterReset>> /* Due to the reusing of shop code */
<</widget>>

<<widget "mirrorDisplay">>
	<<switch $mirrorMenu>>
		<<case "appearance">>
			<<if playerBellyVisible(true) and !playerAwareTheyArePregnant()>>
				<<mirrorAppearancePregnancy>>
			<<else>>
				<<mirrorAppearance>>
			<</if>>
		<<case "skin">>
			<<mirrorSkin>>
		<<case "hair">>
			<<mirrorHair>>
		<<case "makeup">>
			<<mirrorMakeup>>
		<<case "transformation">>
			<<mirrorTransformation>>
		<<case "debug">>
			<<mirrorDebug>>
		<<default>>
			<<mirrorMenu _args[0]>>
	<</switch>>
	<<calchairlengthstage>>
	<br><br>
<</widget>>

<<widget "mirrorwet">>
	<<if _args[1] or _args[2] or _args[3]>>
		<br>
		<<set $_part to _args[0]>>
		<<set $_semen to _args[1]>>
		<<set $_slime to _args[2]>>
		<<set $_nectar to _args[3]>>
		당신의 <<trBodypart $_part "은">>_trResult
		<<if $_part is "thighs" or $_part is "feet">>
			
		<<else>>
			
		<</if>>
		<<if $_semen gt 0>>
			<<switch Math.clamp($_semen, 1, 5)>>
				<<case 1>> <<set $_status to '<span class="blue">축축해져</span>'>>
				<<case 2>> <<set $_status to '<span class="purple">적셔져</span>'>>
				<<case 3>> <<set $_status to '<span class="purple">미끄러워져</span>'>>
				<<case 4>> <<set $_status to '<span class="pink">젖어</span>'>>
				<<case 5>> <<set $_status to '<span class="red">흠뻑 젖어</span>'>>
			<</switch>>
			<<if $_slime gt 0 and $_nectar gt 0>>
				정액으로 $_status 있고,
			<<elseif $_slime gt 0 or $_nectar gt 0>>
				정액으로 $_status 있고
			<<else>>
				정액으로 $_status 있다.
			<</if>>
		<</if>>
		<<if $_slime gt 0>>
			<<switch Math.clamp($_slime, 1, 5)>>
				<<case 1>> <<set $_status to '<span class="blue">축축해져</span>'>>
				<<case 2>> <<set $_status to '<span class="purple">적셔져</span>'>>
				<<case 3>> <<set $_status to '<span class="purple">미끄러워져</span>'>>
				<<case 4>> <<set $_status to '<span class="pink">젖어</span>'>>
				<<case 5>> <<set $_status to '<span class="red">흠뻑 젖어</span>'>>
			<</switch>>
			<<if $_nectar gt 0>>
				점액으로 $_status 있고
			<<else>>
				점액으로 $_status 있다.
			<</if>>
		<</if>>
		<<if $_nectar gt 0>>
			<<switch Math.clamp($_nectar, 1, 5)>>
				<<case 1>> <<set $_status to '<span class="blue">축축해져</span>'>>
				<<case 2>> <<set $_status to '<span class="purple">적셔져</span>'>>
				<<case 3>> <<set $_status to '<span class="purple">미끄러워져</span>'>>
				<<case 4>> <<set $_status to '<span class="pink">젖어</span>'>>
				<<case 5>> <<set $_status to '<span class="red">흠뻑 젖어</span>'>>
			<</switch>>
			꿀로 $_status 있다.
		<</if>>
	<</if>>
<</widget>>

<<widget "mirrorMenu">>
	<<set $_mirror to _args[0] || 'mirror'>>
	당신은 <<putpost $_mirror "을">> 들여다본다.
	<<if $fallenangel is 2>>
		사람 같지도 않은 모습의 인물이
	<<elseif $hallucinogen gte 200>>
		<<putpost $_mirror "이">> 새까만 검은 웅덩이로 녹아내리더니, 당신의 앞에 둥둥 떠있다.
		<<if $_mirror is 'mirror'>>
			유리 파편이 당신의 살갗을 스치고 지나가더니 허공 속으로 녹아든다.
		<</if>>
		<br>
		당신은 공허 속을 바라보고, 공허 또한
	<<elseif $hallucinogen gte 100>>
		이해할 수 없는 각도로 그 표면이 일그러지기 시작하더니, 무언가 알아볼 수 없는 것이
	<<elseif $hallucinogen gt 0>>
		그 앞에 서자 표면에 파문이 일더니, 어렴풋이 익숙한 <<girlPost "이">>
	<<elseif $trauma gte $traumamax>>
		멍한 눈의 <<girlPost "이">>
	<<else>>
		<<= $pain gte 100 ? "울고 있는" : $pain gte 40 ? "눈물이 그렁그렁한" : $pain gte 1 ? "얼굴을 찌푸린" : "활발한">> <<girl_ i>>
	<</if>>
	이쪽을 바라보고 있다.
	<<if ["haunt", "despair"].includes($wraith.state) and $hallucinations gte 1 and random(1, 100) is 1>>
		<span class="fading">창백한 형체가 당신 뒤에 서 있다.</span>
	<</if>>
	<br><br>
	<<link "다른 사람들이 당신을 어떻게 바라보는지 확인한다">><<set $mirrorMenu to "appearance">><<replace #mirror>><<mirrorDisplay>><</replace>><<numberify "#passages > .passage">><</link>>
	<br><br>
	<<if !$simpleMirror>>
		__피부__
		<br>
		<<link "피부를 확인한다">><<set $mirrorMenu to "skin">><<replace #mirror>><<mirrorDisplay>><</replace>><<numberify "#passages > .passage">><</link>>
		<br><br>
	<</if>>
	__머리__
	<br>
	<<link "머리 스타일을 바꾼다">><<set $mirrorMenu to "hair">><<replace #mirror>><<mirrorDisplay>><</replace>><<numberify "#passages > .passage">><</link>>
	<br><br>
	__화장__
	<br>
	<<link "화장을 한다">><<set $mirrorMenu to "makeup">><<replace #mirror>><<mirrorDisplay>><</replace>><<numberify "#passages > .passage">><</link>>
	<br><br>

	<<if $worn.neck.name is "love locket">>
		__로켓__
		<br>
		<<link [[로켓의 사진을 바꾼다|Mirror Locket]]>><<set $passage_mirror to $passage>><</link>>
		<br><br>
	<</if>>

	<<if !$simpleMirror>>
		<<if $specialTransform is 1 or $physicalTransform is 1>>
			__변형__
			<br>
			<<link "내적 자아를 살펴본다">><<set $mirrorMenu to "transformation">><<replace #mirror>><<mirrorDisplay>><</replace>><<numberify "#passages > .passage">><</link>>
		<<else>>
			이 이상 살펴보려면 이세계의 힘을 획득해야 한다.
		<</if>>
	<</if>>
	<br><br>

	<<if $debug is 1>>
		<<link "디버그">><<set $mirrorMenu to "debug">><<replace #mirror>><<mirrorDisplay>><</replace>><</link>>
	<</if>>
<</widget>>

<<widget "mirrorAppearance">>
	<<link "뒤로">><<replace #mirror>><<mirrorMenu>><</replace>><<numberify "#passages > .passage">><<unset $mirrorMenu>><</link>>
	<br><br>
	<<settextcolorfromgender $player.gender_appearance>>
	당신은 <span @class="_text_color"><<if playerBellyVisible(true)>>임신한 <</if>><<girlPost>>처럼 보인다.</span>
	<br>
	아래의 요인들이 그런 인상에 기여하고 있다:
	<br>
	<<for _x range $player.gender_appearance_factors>>
		<<if _x.femininity is 0 or !_x.factor>>
			<<continue>>
		<</if>>
		<<settextcolorfromfemininity _x.femininity>>
		<span @class="_text_color">
			_x.factor
			<<if $debug is 1>>
				_x.femininity
			<<else>>
				<<print "+".repeat(
					Math.trunc(Math.clamp(
						Math.abs(_x.femininity) / 100, 0, 10
					))
				)>>
			<</if>>
		</span>
		<br>
	<</for>>
	<<if $debug is 1>>
		<<settextcolorfromfemininity $player.femininity>>
		전체 여성성: <span @class="_text_color">$player.femininity</span>
		<br><br>
	<</if>>
	<br>

	<i>매력은 겉모습으로 인한 이점을 이용할 수 있는 능력을 나타냅니다.</i>
	<br>
	매력 점수:
	<<if $attractiveness gte 5000>>
		<span class="green">S</span>
	<<elseif $attractiveness gte 4000>>
		<span class="teal">A</span>
	<<elseif $attractiveness gte 3000>>
		<span class="lblue">B</span>
	<<elseif $attractiveness gte 2000>>
		<span class="blue">C</span>
	<<elseif $attractiveness gte 1000>>
		<span class="purple">D</span>
	<<else>>
		<span class="pink">F</span>
	<</if>>
	<br><br>

	<span class="green">
		<<if $beauty gte ($beautymax / 7)>>
			귀여움
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 2>>
			예쁨
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 3>>
			매력적임
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 4>>
			아름다움
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 5>>
			매혹적임
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 6>>
			성스러움
			<br>
		<</if>>
		머리 길이
		<br>
		<<if $worn.upper.type.includes("naked")>>
			상의를 입지 않음
			<br>
		<<elseif $worn.upper.reveal gte 500>>
			몸매가 드러나는 상의
			<br>
		<</if>>
		<<if $worn.lower.type.includes("naked")>>
			하의를 입지 않음
			<br>
		<<elseif $worn.lower.reveal gte 500>>
			몸매가 드러나는 하의
			<br>
		<</if>>
		<<if $worn.under_lower.type.includes("naked")>>
			팬티를 입지 않음
			<br>
		<<elseif $worn.under_lower.reveal gte 500>>
			섹시한 속옷
			<br>
		<</if>>
		<<if $wolfgirl gte 6>>
			늑대
			<br>
		<</if>>
		<<if $cat gte 6>>
			고양이
			<br>
		<</if>>
		<<if $cow gte 6>>
			소
			<br>
		<</if>>
		<<if $harpy gte 6>>
			하피
			<br>
		<</if>>
		<<if $fox gte 6>>
			Vulpine
			<br>
		<</if>>
		<<if $angel gte 6>>
			천사
			<br>
		<</if>>
		<<if $fallenangel gte 2>>
			타천사
			<br>
		<</if>>
		<<if $demon gte 6>>
			악마
			<br>
		<</if>>
		<<if $makeup.lipstick != 0 or $makeup.eyeshadow != 0 or $makeup.mascara != 0>>
			매력적인 화장
			<br>
		<</if>>
		<<if $worn.head.reveal gte 50>>
			멋진 모자
			<br>
		<</if>>
		<<if $worn.face.reveal gte 50>>
			멋진 얼굴 악세사리
			<br>
		<</if>>
		<<if $worn.neck.reveal gte 50>>
			멋진 목걸이
			<br>
		<</if>>
		<<if $worn.legs.reveal gte 50>>
			멋진 레그웨어
			<br>
		<</if>>
		<<if $worn.feet.reveal gte 50>>
			멋진 신발
			<br>
		<</if>>
	</span>

	<br>
	<i>색기는 매력의 어두운 면모로, 얼마나 많은 사람들이 당신을 범하고 싶어하는지를 나타냅니다.</i>
	<br>
	색기:
	<<if $allure gte 6000 * $alluremod>>
		<span class="red">금방이라도 유린당할 것처럼 보인다.</span>
	<<elseif $allure gte 4000 * $alluremod>>
		<span class="pink">당신은 변태처럼 보인다.</span>
	<<elseif $allure gte 3000 * $alluremod>>
		<span class="purple">당신은 음란하게 보인다.</span>
	<<elseif $allure gte 2000 * $alluremod>>
		<span class="blue">당신은 돋보인다.</span>
	<<elseif $allure gte 1500 * $alluremod>>
		<span class="lblue">당신은 주의를 끌고 있다.</span>
	<<elseif $allure gte 1000 * $alluremod>>
		<span class="teal">사람들이 당신에게 시선을 던지곤 한다.</span>
	<<else>>
		<span class="green">당신은 지극히 평범하다.</span>
	<</if>>
	<br><br>

	색기를 올리는 요소:
	<br>
	<span class="red">
		<<if $beauty gte ($beautymax / 7)>>
			귀여움
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 2>>
			예쁨
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 3>>
			매력적임
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 4>>
			아름다움
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 5>>
			매혹적임
			<br>
		<</if>>
		<<if $beauty gte ($beautymax / 7) * 6>>
			성스러움
			<br>
		<</if>>
		머리 길이
		<br>
		<<if $worn.upper.type.includes("naked")>>
			상의를 입지 않음
			<br>
		<<elseif $worn.upper.reveal gte 500>>
			몸매가 드러나는 상의
			<br>
		<</if>>
		<<if $worn.lower.type.includes("naked")>>
			하의를 입지 않음
			<br>
		<<elseif $worn.lower.reveal gte 500>>
			몸매가 드러나는 하의
			<br>
		<</if>>
		<<if $worn.under_lower.type.includes("naked")>>
			팬티를 입지 않음
			<br>
		<<elseif $worn.under_lower.reveal gte 500>>
			섹시한 속옷
			<br>
		<</if>>
		<<if $wolfgirl gte 6>>
			늑대
			<br>
		<</if>>
		<<if $cat gte 6>>
			고양이
			<br>
		<</if>>
		<<if $cow gte 6>>
			소
			<br>
		<</if>>
		<<if $harpy gte 6>>
			하피
			<br>
		<</if>>
		<<if $fox gte 6>>
			Foxy
			<br>
		<</if>>
		<<if $angel gte 6>>
			천사
			<br>
		<</if>>
		<<if $fallenangel gte 2>>
			타천사
			<br>
		<</if>>
		<<if $demon gte 6>>
			악마
			<br>
		<</if>>
		<<if $earSlime.growth gt 50>>
			귀 슬라임 페로몬
			<br>
		<</if>>
		<<if $makeup.lipstick != 0 or $makeup.eyeshadow != 0 or $makeup.mascara != 0>>
			매혹적인 화장
			<br>
		<</if>>
		<<if $worn.head.reveal gte 50>>
			매혹적인 모자
			<br>
		<</if>>
		<<if $worn.face.reveal gte 50>>
			매혹적인 얼굴 악세사리
			<br>
		<</if>>
		<<if $worn.neck.reveal gte 50>>
			매혹적인 목걸이
			<br>
		<</if>>
		<<if $worn.legs.reveal gte 50>>
			매혹적인 레그웨어
			<br>
		<</if>>
		<<if $worn.feet.reveal gte 50>>
			매혹적인 신발
			<br>
		<</if>>
		<<if Weather.dayState is "night">>
			밤
			<br>
		<</if>>
		<<if $exposed gte 1>>
			노출
			<br>
		<</if>>
		<<if $liquidcount gte 1>>
			정액 냄새
			<br>
		<</if>>
		<<if $liquidcount gte 10>>
			정액에 뒤덮힘
			<br>
		<</if>>
		<<if $liquidcount gte 30>>
			정액에 적셔짐
			<br>
		<</if>>
		<<if Time.isBloodMoon()>>
			보름달
			<br>
		<</if>>
	</span>
	<<if $fame.sex gte 1000>>
		<span class="red">악명 높은 걸레</span>
		<br>
	<<elseif $fame.sex gte 600>>
		<span class="pink">유명한 걸레</span>
		<br>
	<<elseif $fame.sex gte 400>>
		<span class="purple">잘 알려진 걸레</span>
		<br>
	<<elseif $fame.sex gte 200>>
		<span class="blue">알려진 걸레</span>
		<br>
	<<elseif $fame.sex gte 100>>
		<span class="lblue">약간 알려진 걸레</span>
		<br>
	<<elseif $fame.sex gte 30>>
		<span class="teal">잘 알려지지 않은 걸레</span>
		<br>
	<</if>>

	<<if $fame.prostitution gte 1000>>
		<span class="red">악명 높은 <<whorePost>></span>
		<br>
	<<elseif $fame.prostitution gte 600>>
		<span class="pink">유명한 <<whorePost>></span>
		<br>
	<<elseif $fame.prostitution gte 400>>
		<span class="purple">잘 알려진 <<whorePost>></span>
		<br>
	<<elseif $fame.prostitution gte 200>>
		<span class="blue">알려진 <<whorePost>></span>
		<br>
	<<elseif $fame.prostitution gte 100>>
		<span class="lblue">약간 알려진 <<whorePost>></span>
		<br>
	<<elseif $fame.prostitution gte 30>>
		<span class="teal">잘 알려지지 않은 <<whorePost>></span>
		<br>
	<</if>>

	<<if $fame.rape gte 1000>>
		<span class="red">악명 높은 육변기</span>
		<br>
	<<elseif $fame.rape gte 600>>
		<span class="pink">유명한 육변기</span>
		<br>
	<<elseif $fame.rape gte 400>>
		<span class="purple">잘 알려진 육변기</span>
		<br>
	<<elseif $fame.rape gte 200>>
		<span class="blue">알려진 육변기</span>
		<br>
	<<elseif $fame.rape gte 100>>
		<span class="lblue">약간 알려진 육변기</span>
		<br>
	<<elseif $fame.rape gte 30>>
		<span class="teal">잘 알려지지 않은 육변기</span>
		<br>
	<</if>>

	<<if $bestialitydisable is "f">>
		<<if $fame.bestiality gte 1000>>
			<span class="red">악명 높은 <<if $player.gender_appearance is "m">>수<<else>>암<</if>>캐</span>
			<br>
		<<elseif $fame.bestiality gte 600>>
			<span class="pink">유명한 <<if $player.gender_appearance is "m">>수<<else>>암<</if>>캐</span>
			<br>
		<<elseif $fame.bestiality gte 400>>
			<span class="purple">잘 알려진 <<if $player.gender_appearance is "m">>수<<else>>암<</if>>캐</span>
			<br>
		<<elseif $fame.bestiality gte 200>>
			<span class="blue">알려진 <<if $player.gender_appearance is "m">>수<<else>>암<</if>>캐</span>
			<br>
		<<elseif $fame.bestiality gte 100>>
			<span class="lblue">약간 알려진 <<if $player.gender_appearance is "m">>수<<else>>암<</if>>캐</span>
			<br>
		<<elseif $fame.bestiality gte 30>>
			<span class="teal">잘 알려지지 않은 <<if $player.gender_appearance is "m">>수<<else>>암<</if>>캐</span>
			<br>
		<</if>>
	<<else>>
		<<if $fame.bestiality gte 1000>>
			<span class="red">악명높은 괴물 성애자</span>
			<br>
		<<elseif $fame.bestiality gte 600>>
			<span class="pink">유명한 괴물 성애자</span>
			<br>
		<<elseif $fame.bestiality gte 400>>
			<span class="purple">잘 알려진 괴물 성애자</span>
			<br>
		<<elseif $fame.bestiality gte 200>>
			<span class="blue">알려진 괴물 성애자</span>
			<br>
		<<elseif $fame.bestiality gte 100>>
			<span class="lblue">약간 알려진 괴물 성애자</span>
			<br>
		<<elseif $fame.bestiality gte 30>>
			<span class="teal">잘 알려지지 않은 괴물 성애자</span>
			<br>
		<</if>>
	<</if>>

	<<if $fame.exhibitionism gte 1000>>
		<span class="red">악명 높은 과시자</span>
		<br>
	<<elseif $fame.exhibitionism gte 600>>
		<span class="pink">유명한 과시자</span>
		<br>
	<<elseif $fame.exhibitionism gte 400>>
		<span class="purple">잘 알려진 과시자</span>
		<br>
	<<elseif $fame.exhibitionism gte 200>>
		<span class="blue">알려진 과시자</span>
		<br>
	<<elseif $fame.exhibitionism gte 100>>
		<span class="lblue">약간 알려진 과시자</span>
		<br>
	<<elseif $fame.exhibitionism gte 30>>
		<span class="teal">잘 알려지지 않은 과시자</span>
		<br>
	<</if>>
	<<if $fame.pregnancy gte 1000>>
		<span class="red">악명높은 번식 엄마</span>
		<br>
	<<elseif $fame.pregnancy gte 600>>
		<span class="pink">유명한 번식 엄마</span>
		<br>
	<<elseif $fame.pregnancy gte 400>>
		<span class="purple">잘 알려진 번식자</span>
		<br>
	<<elseif $fame.pregnancy gte 200>>
		<span class="blue">알려진 번식자</span>
		<br>
	<<elseif $fame.pregnancy gte 100>>
		<span class="lblue">약간 알려진 엄마</span>
		<br>
	<<elseif $fame.pregnancy gte 50>>
		<span class="teal">잘 알려지지 않은 엄마</span>
		<br>
	<</if>>
	<<if $fame.impreg gte 1000>>
		<span class="red">악명높은 모두의 아버지</span>
		<br>
	<<elseif $fame.impreg gte 600>>
		<span class="pink">유명한 모두의 아버지</span>
		<br>
	<<elseif $fame.impreg gte 400>>
		<span class="purple">잘 알려진 아빠</span>
		<br>
	<<elseif $fame.impreg gte 200>>
		<span class="blue">알려진 아빠</span>
		<br>
	<<elseif $fame.impreg gte 100>>
		<span class="lblue">약간 알려진 씨돼지</span>
		<br>
	<<elseif $fame.impreg gte 50>>
		<span class="teal">잘 알려지지 않은 씨돼지</span>
		<br>
	<</if>>

	<br>
	색기를 낮추는 요소:
	<br>
	<<if !["island"].includes($location)>>
		<<if $fame.scrap gte 1000>>
			<span class="green">악명 높은 싸움꾼</span>
			<br>
		<<elseif $fame.scrap gte 600>>
			<span class="teal">유명한 싸움꾼</span>
			<br>
		<<elseif $fame.scrap gte 400>>
			<span class="lblue">잘 알려진 싸움꾼</span>
			<br>
		<<elseif $fame.scrap gte 200>>
			<span class="blue">알려진 싸움꾼</span>
			<br>
		<<elseif $fame.scrap gte 100>>
			<span class="purple">약간 알려진 싸움꾼</span>
			<br>
		<<elseif $fame.scrap gte 30>>
			<span class="pink">잘 알려지지 않은 싸움꾼</span>
			<br>
		<</if>>
		<<if $fame.good gte 1000>>
			<span class="green">명성이 자자한 박애주의자</span>
			<br>
		<<elseif $fame.good gte 600>>
			<span class="teal">유명한 박애주의자</span>
			<br>
		<<elseif $fame.good gte 400>>
			<span class="lblue">잘 알려진 박애주의자</span>
			<br>
		<<elseif $fame.good gte 200>>
			<span class="blue">알려진 박애주의자</span>
			<br>
		<<elseif $fame.good gte 100>>
			<span class="purple">약간 알려진 박애주의자</span>
			<br>
		<<elseif $fame.good gte 30>>
			<span class="pink">잘 알려지지 않은 박애주의자</span>
			<br>
		<</if>>
		<<if $fame.business gte 1000>>
			<span class="green">명성이 자자한 사업가</span>
			<br>
		<<elseif $fame.business gte 600>>
			<span class="teal">유명한 사업가</span>
			<br>
		<<elseif $fame.business gte 400>>
			<span class="lblue">잘 알려진 사업가</span>
			<br>
		<<elseif $fame.business gte 200>>
			<span class="blue">알려진 사업가</span>
			<br>
		<<elseif $fame.business gte 100>>
			<span class="purple">약간 알려진 사업가</span>
			<br>
		<<elseif $fame.business gte 30>>
			<span class="pink">잘 알려지지 않은 사업가</span>
			<br>
		<</if>>
		<<if $fame.social gte 1000>>
			<span class="green">명성이 자자한 달변가</span>
			<br>
		<<elseif $fame.social gte 600>>
			<span class="teal">유명한 사교계 인사</span>
			<br>
		<<elseif $fame.social gte 400>>
			<span class="lblue">잘 알려진 사교계 인사</span>
			<br>
		<<elseif $fame.social gte 200>>
			<span class="blue">알려진 사교계 인사</span>
			<br>
		<<elseif $fame.social gte 100>>
			<span class="purple">약간 알려진 사교계 인사</span>
			<br>
		<<elseif $fame.social gte 30>>
			<span class="pink">잘 알려지지 않은 사교계 인사</span>
			<br>
		<</if>>
		<<if $fame.model gte 1000>>
			<span class="green">악명 높은 자랑꾼</span>
			<br>
		<<elseif $fame.model gte 600>>
			<span class="teal">유명한 모델</span>
			<br>
		<<elseif $fame.model gte 400>>
			<span class="lblue">잘 알려진 모델</span>
			<br>
		<<elseif $fame.model gte 200>>
			<span class="blue">알려진 모델</span>
			<br>
		<<elseif $fame.model gte 100>>
			<span class="purple">약간 알려진 모델</span>
			<br>
		<<elseif $fame.model gte 30>>
			<span class="pink">잘 알려지지 않은 모델</span>
			<br>
		<</if>>
	<</if>>
	<<if $moorLuck gt 5>>
		<span class="green">????</span>
		<br>
	<<elseif $moorLuck gt 0>>
		<span class="lblue">????</span>
		<br>
	<</if>>

	<br><br>
	__행동__
	<br>
	<<if $player.gender_posture is "n">>
		당신은 한 바퀴 돌며 자신의 모습을 살펴본다. 당신은 <<girlPost>>처럼 보인다.
		다른 방식으로 행동한다면 그 인상을 바꿀 수 있을지도 모른다.
	<<elseif $player.gender_posture is "f">>
		당신은 여자들이 할 법한 자세를 몇 개 취해보고는 최대한 여성스러운 목소리를 내본다.
		<br>
		<span class="pink">다른 사람들은 당신이 소녀라고 생각할 것이다.</span>
	<<elseif $player.gender_posture is "m">>
		당신은 근육에 힘을 주고 목소리를 조금 걸걸하게 만들어본다.
		<br>
		<span class="lblue">다른 사람들은 당신이 소년이라고 생각할 것이다.</span>
	<</if>>
	<br>
	<<linkradiogroup "$player.gender_posture" `{
		"자연스럽게 행동한다": "n",
		"여성스러운 태도를 취한다": "f",
		"남성스러운 태도를 취한다": "m",
	}`>>
<</widget>>

<<widget "mirrorAppearancePregnancy">>
	<<run updateMoment()>>
	당신은 <span class="lewd">임신한 <<girlPost>>처럼 보인다...</span><<garousal>><<gstress>>
	<<arousal 300>><<stress 10>>
	<br><br>

	<<if getPregnancyObject().potentialFathers.length is 1>>
		<<set $_fatherName to pregnancyNameCorrection(getPregnancyObject().potentialFathers[0].source)>><<trPost _postNum "이">>
		<span class="lewd">아기 아빠는 <<print $_fatherName === "당신 자신" ? "당신이" : _trResult>> 확실하다.</span>
	<<else>>
		<span class="red">당신은 누가 아기 아빠일지 궁금해한다.</span>
	<</if>>
	<<set getPregnancyObject().awareOf to "mirror">>
<</widget>>

<<widget "mirrorSkin">>
	당신은 자신의 피부를 바라본다.
	<br>
	<<link "뒤로">><<replace #mirror>><<mirrorMenu>><</replace>><<numberify "#passages > .passage">><<unset $mirrorMenu>><</link>>
	<br><br>

	<<if $liquidcount gt 0>>
		__피부에 묻어있는 액체__
		<<mirrorwet "neck" $player.bodyliquid.neck.semen $player.bodyliquid.neck.goo $player.bodyliquid.neck.nectar>>
		<<mirrorwet "right arm" $player.bodyliquid.rightarm.semen $player.bodyliquid.rightarm.goo $player.bodyliquid.rightarm.nectar>>
		<<mirrorwet "left arm" $player.bodyliquid.leftarm.semen $player.bodyliquid.leftarm.goo $player.bodyliquid.leftarm.nectar>>
		<<mirrorwet "thighs" $player.bodyliquid.thigh.semen $player.bodyliquid.thigh.goo $player.bodyliquid.thigh.nectar>>
		<<mirrorwet "bottom" $player.bodyliquid.bottom.semen $player.bodyliquid.bottom.goo $player.bodyliquid.bottom.nectar>>
		<<mirrorwet "tummy" $player.bodyliquid.tummy.semen $player.bodyliquid.tummy.goo $player.bodyliquid.tummy.nectar>>
		<<mirrorwet "chest" $player.bodyliquid.chest.semen $player.bodyliquid.chest.goo $player.bodyliquid.chest.nectar>>
		<<mirrorwet "face" $player.bodyliquid.face.semen $player.bodyliquid.face.goo $player.bodyliquid.face.nectar>>
		<<mirrorwet "hair" $player.bodyliquid.hair.semen $player.bodyliquid.hair.goo $player.bodyliquid.hair.nectar>>
		<<mirrorwet "feet" $player.bodyliquid.feet.semen $player.bodyliquid.feet.goo $player.bodyliquid.feet.nectar>>
		<<mirrorwet "labia" $player.bodyliquid.vaginaoutside.semen $player.bodyliquid.vaginaoutside.goo $player.bodyliquid.vaginaoutside.nectar>>
		<<mirrorwet "vagina" $player.bodyliquid.vagina.semen $player.bodyliquid.vagina.goo $player.bodyliquid.vagina.nectar>>
		<<mirrorwet "penis" $player.bodyliquid.penis.semen $player.bodyliquid.penis.goo $player.bodyliquid.penis.nectar>>
		<<mirrorwet "anus" $player.bodyliquid.anus.semen $player.bodyliquid.anus.goo $player.bodyliquid.anus.nectar>>
		<<mirrorwet "mouth" $player.bodyliquid.mouth.semen $player.bodyliquid.mouth.goo $player.bodyliquid.mouth.nectar>>
	<<else>>
		당신의 피부는 깨끗하다.
	<</if>>
	<br><br>
	__신체 낙서__<br>

	<<if $bodyWritingSelected is null>>
		<<unset $bodyWritingSelected>>
	<</if>>
	<<if $bodyWritingSelected isnot undefined>>
		당신은 <<trBodypart $bodyPartSelected>>_trResult에
		<<if isLoveInterest($skin[$bodyPartSelected].special)>>
			"<span class="lewd"><<print $bodyWritingSelected>></span>"
		<<elseif $skin[$bodyPartSelected].special isnot "none">>
			"<span class="red"><<print $bodyWritingSelected>></span>"
		<<elseif $skin[$bodyPartSelected].lewd is 1>>
			"<span class="pink"><<print $bodyWritingSelected>></span>"
		<<else>>
			"<span class="purple"><<print $bodyWritingSelected>></span>"
		<</if>>
		문구를 쓴다.
		<<unset $bodyWritingSelected>>
		<<unset $bodyPartSelected>>
		<br><br>
	<</if>>
	<<bodywriting>>	
	<br>

	<<bodywritingOptions>>

	/*Needs to be last*/
	<<bodywritingMenuLinks>>
<</widget>>

<<widget "bodywritingOptions">>
	<<set _bodyWritingOptions to {
		General: {
		"귀여운 소년":"cute_boy",
		"귀여운 소녀":"cute_girl",
		"고아":"orphan"
		}
	}>>

	<<if $beauty gte ($beautymax / 7) * 3>>
		<<set _bodyWritingOptions.General["훈남"] to "handsome">>
		<<set _bodyWritingOptions.General["예쁨"] to "pretty">>
	<</if>>
	<<if $beauty gte ($beautymax / 7) * 4>>
		<<set _bodyWritingOptions.General["미남"] to "stud">>
		<<set _bodyWritingOptions.General["미녀"] to "beauty">>
	<</if>>
	<<if $beauty gte ($beautymax / 7) * 5>>
		<<set _bodyWritingOptions.General["아름다움"] to "beautiful">>
	<</if>>

	<<if $trauma gte (($traumamax / 5) * 2)>>
		<<set _bodyWritingOptions.General["아빠 문제"] to "daddy_issues">>
		<<set _bodyWritingOptions.General["엄마 문제"] to "mommy_issues">>
		<<set _bodyWritingOptions.General["쓰레기"] to "trashy">>
	<</if>>
	<<if $trauma gte (($traumamax / 5) * 3)>>
		<<set _bodyWritingOptions.General["쓸모없음"] to "worthless">>
		<<set _bodyWritingOptions.General["끔찍함"] to "oh_no">>
		<<set _bodyWritingOptions.General["멍청한 " + ($player.gender_appearance isnot "m" ? "암캐" : "개새끼")] to "dumb_bitch">>
	<</if>>

	<<if hasSexStat("promiscuity", 2)>>
		<<set _bodyWritingOptions.General["섹시함"] to "hot">>
	<</if>>
	<<if hasSexStat("promiscuity", 3)>>
		<<set _bodyWritingOptions.Promiscuity = {}>>
		<<set _bodyWritingOptions.Promiscuity["걸레"] to "slut">>
		<<set _bodyWritingOptions.Promiscuity["난잡함"] to "promiscuous">>
		<<set _bodyWritingOptions.Promiscuity["음탕함"] to "wanton">>
		<<set _bodyWritingOptions.Promiscuity["원나잇 모집"] to "dtf">>
	<</if>>

	<<if hasSexStat("promiscuity", 4)>>
		<<set _bodyWritingOptions.Promiscuity["만족할 줄 모르는 걸레"] to "insatiable_slut">>
		<<set _bodyWritingOptions.Promiscuity["공짜 섹스"] to "free_sex">>
		<<set _bodyWritingOptions.Promiscuity["마을 공용자전거"] to "town_bicycle">>
		<<set _bodyWritingOptions.Promiscuity["대물 가능"] to "size_queen">>
		<<if $orgasmtrait gte 1>>
			<<set _bodyWritingOptions.Promiscuity["섹스중독"] to "sex_addict">>
			<<set _bodyWritingOptions.Promiscuity["가버리게 해줘"] to "make_me_cum">>
		<</if>>
	<</if>>

	<<if hasSexStat("promiscuity", 5)>>
		<<set _bodyWritingOptions.Promiscuity["따먹어줘"] to "fuck_me">>
		<<set _bodyWritingOptions.Promiscuity["잘 빰"] to "cocksucker">>
		<<set _bodyWritingOptions.Promiscuity["정액변소"] to "cum_dump">>
		<<set _bodyWritingOptions.Promiscuity["공중걸레"] to "public_slut">>
		<<if $analstat gte 100>>
			<<set _bodyWritingOptions.Promiscuity["항문 전용 걸레"] to "buttslut">>
			<<set _bodyWritingOptions.Promiscuity["항문 전용 " + ($player.gender_appearance isnot "m" ? "창녀" : "남창")] to "anal_whore">>
		<</if>>
	<</if>>

	<<if hasSexStat("promiscuity", 3)>>
		<<set _bodyWritingOptions.Prostitution = {}>>
		<<if $trauma gte (($traumamax / 5) * 2)>>
			<<set _bodyWritingOptions.Prostitution["돈을 내면 강간이 아니야"] to "its_not_rape_if_you_pay_me">>
		<</if>>
		<<set _bodyWritingOptions.Prostitution["£5어치 " + ($player.gender_appearance isnot "m" ? "창녀" : "남창")] to "five_pound_whore">>
		<<set _bodyWritingOptions.Prostitution["한 발에 £10"] to "ten_pound_a_pop">>
		<<set _bodyWritingOptions.Prostitution["걸레 구직중"] to "slut_for_hire">>
	<</if>>
	<<if hasSexStat("promiscuity", 4)>>
		<<set _bodyWritingOptions.Prostitution["한 번에 £25"] to "twenty_five_pound_per_fuck">>
		<<set _bodyWritingOptions.Prostitution["£100"] to "one_hundred_pound">>
		<<set _bodyWritingOptions.Prostitution["몸 팔아요"] to "body_for_sale">>
		<<if $trauma gte (($traumamax / 5) * 3)>>
			<<set _bodyWritingOptions.Prostitution["멍청한 " + ($player.gender_appearance isnot "m" ? "창녀" : "남창")] to "stupid_whore">>
		<<else>>
			<<set _bodyWritingOptions.Prostitution[($player.gender_appearance isnot "m" ? "창녀" : "남창")] to "whore">>
		<</if>>
		<<set _bodyWritingOptions.Prostitution["매춘부"] to "prostitute">>
	<</if>>
	<<if hasSexStat("exhibitionism", 3)>>
		<<set _bodyWritingOptions.Exhibitionism to {}>>
		<<set _bodyWritingOptions.Exhibitionism["변태"] to "pervert">>
		<<set _bodyWritingOptions.Exhibitionism["관심종자"] to "attention_whore">>
		<<set _bodyWritingOptions.Exhibitionism["과시자"] to "flaunter">>
		<<set _bodyWritingOptions.Exhibitionism["물건"] to "object">>
		<<set _bodyWritingOptions.Exhibitionism["옷을 벗겨주세요"] to "strip_me">>
		<<set _bodyWritingOptions.Exhibitionism["나체를 보고 싶다면 문의하시길"] to "ask_to_see_me_naked">>
	<</if>>
	<<if hasSexStat("deviancy", 4)>>
		<<set _bodyWritingOptions.Deviancy to {}>>
		<<set _bodyWritingOptions.Deviancy["개 전용 걸레"] to "doggy_slut">>
		<<set _bodyWritingOptions.Deviancy["짐승"] to "animal">>
		<<set _bodyWritingOptions.Deviancy["수간충"] to "beast_fucker">>
		<<set _bodyWritingOptions.Deviancy["교배 가능"] to "breedable">>
		<<set _bodyWritingOptions.Deviancy["이상성욕자"] to "deviant">>
	<</if>>
	<<if $masochism_level gte 1>>
		<<set _bodyWritingOptions.Masochism to {}>>
		<<set _bodyWritingOptions.Masochism["때려주세요"] to "hit_me">>
		<<set _bodyWritingOptions.Masochism["아프게 해줘"] to "hurt_me">>
		<<set _bodyWritingOptions.Masochism["모질게 대해줘"] to "treat_me_bad">>
		<<set _bodyWritingOptions.Masochism["비명지르게 해줘"] to "make_me_squeal">>
	<</if>>
	<<if $submissive gte 1200>>
		<<set _bodyWritingOptions.Submission to {}>>
		<<set _bodyWritingOptions.Submission["순종적"] to "submissive">>
		<<set _bodyWritingOptions.Submission["애완동물"] to "pet">>

			<<if hasSexStat("deviancy", 3)>>
			<<set _bodyWritingOptions.Submission["공공 애완동물"] to "public_pet">>
		<</if>>

		<<if hasSexStat("promiscuity", 4)>>
			<<set _bodyWritingOptions.Submission["무료 변소"] to "free_use">>
			<<set _bodyWritingOptions.Submission["써주세요"] to "use_me">>
		<</if>>

		<<if $submissive gte 1500>>
			<<set _bodyWritingOptions.Submission["노예"] to "slave">>
			<<set _bodyWritingOptions.Submission["노예로 삼아줘"] to "enslave_me">>
			<<set _bodyWritingOptions.Submission["정액 걸레"] to "cum_rag">>
			<<if hasSexStat("promiscuity", 5)>>
				<<set _bodyWritingOptions.Submission["섹스인형"] to "fuckdoll">>
				<<set _bodyWritingOptions.Submission["육변기"] to "fucktoy">>
				<<if $player.penisExist>>
					<<set _bodyWritingOptions.Submission["걸어다니는 딜도"] to "walking_dildo">>
				<</if>>
			<</if>>
		<</if>>
	<</if>>
	<<if ($player.vaginaExist or ($sexStats.anus.pregnancy.awareOf or $sexStats.anus.pregnancy.givenBirth gte 1)) and hasSexStat("promiscuity", 5)>>
		<<set _bodyWritingOptions.Pregnancy to {}>>
		<<set _bodyWritingOptions.Pregnancy["번식 엄마"] to "brood_mother">>
		<<set _bodyWritingOptions.Pregnancy["나를 수정시켜줘"] to "inseminate_me">>
		<<set _bodyWritingOptions.Pregnancy["나를 임신시켜줘"] to "impregnate_me">>
		<<set _bodyWritingOptions.Pregnancy["임신 걸레"] to "pregnancy_slut">>
		<<set _bodyWritingOptions.Pregnancy["번식지"] to "breeding_ground">>
	<</if>>

	<<set _bodyWritingOptions["Love Interests"] to {}>>
	<<if $robinromance is 1>>
		<<set _bodyWritingOptions["Love Interests"]["로빈의 보호자"] to "robins_protector">>
		<<set _bodyWritingOptions["Love Interests"]["로빈과 나"] to "robin_and_i">>
		<<set _bodyWritingOptions["Love Interests"]["고아 연인"] to "the_orphan_lover">>
		<<if ($player.penisExist or $player.gender_appearance is "m" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["로빈의 남자친구"] to "robins_boyfriend">>
		<</if>>
		<<if ($player.vaginaExist or $player.gender_appearance is "f" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["로빈의 여자친구"] to "robins_girlfriend">>
		<</if>>
	<</if>>
	<<if $whitneyromance is 1>>
		<<set _bodyWritingOptions["Love Interests"]["휘트니의 애완동물"] to "whitneys_pet">>
		<<set _bodyWritingOptions["Love Interests"]["휘트니의 소유물"] to "property_of_whitney">>
		<<set _bodyWritingOptions["Love Interests"]["휘트니의 장난감"] to "whitneys_toy">>
		<<if ($player.penisExist or $player.gender_appearance is "m" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["휘트니 전용 걸레남"] to "whitneys_boyslut">>
		<</if>>
		<<if ($player.vaginaExist or $player.gender_appearance is "f" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["휘트니 전용 걸레"] to "whitneys_slut">>
		<</if>>
	<</if>>
	<<if $kylarenglish gte 1 and C.npc.Kylar.state isnot "prison">>
		<<set _bodyWritingOptions["Love Interests"]["카일라의 집착"] to "kylars_obsession">>
		<<set _bodyWritingOptions["Love Interests"]["카일라를 영원히 사랑해"] to "love_kylar_forever">>
		<<set _bodyWritingOptions["Love Interests"]["카일라에게 예약됨"] to "reserved_for_kylar">>
		<<set _bodyWritingOptions["Love Interests"]["카일라 뿐이야"] to "just_kylar">>
	<</if>>
	<<if $syndromeeden is 1>>
		<<set _bodyWritingOptions["Love Interests"]["에덴의 동반자"] to "edens_companion">>
		<<set _bodyWritingOptions["Love Interests"]["사냥꾼과 사냥감"] to "hunter_and_prey">>
		<<set _bodyWritingOptions["Love Interests"]["숲에서는 외로워"] to "its_lonely_in_the_woods">>
		<<set _bodyWritingOptions["Love Interests"]["누군가 너를 사냥하고 있다"] to "something_is_hunting_you">>
	<</if>>
	<<if $dateCount.Avery gte 3 and C.npc.Avery.state isnot "dismissed">>
		<<set _bodyWritingOptions["Love Interests"]["에이버리의 어린 " + ($player.gender_appearance isnot "m" ? "아내" : "남편")] to "averys_trophy">>
		<<set _bodyWritingOptions["Love Interests"]["사랑스러움"] to "endearing">>
		<<if ($player.penisExist or $player.gender_appearance is "m" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["업타운 보이"] to "uptown_boy">>
		<</if>>
		<<if ($player.vaginaExist or $player.gender_appearance is "f" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["업타운 걸"] to "uptown_girl">>
		<</if>>
		<<set _bodyWritingOptions["Love Interests"]["에이버리의 전유물"] to "averys_monopoly">>
	<</if>>
	<<if $farm_stage gte 7 and $alex_countdown is undefined>>
		<<set _bodyWritingOptions["Love Interests"]["알렉스의 파트너"] to "alexs_partner">>
		<<set _bodyWritingOptions["Love Interests"]["일출부터 일몰까지"] to "sunrise_to_sunset">>
		<<set _bodyWritingOptions["Love Interests"]["건초 포장꾼"] to "hay_baler">>
		<<if ($player.penisExist or $player.gender_appearance is "m" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["카우보이"] to "cowboy">>
		<</if>>
		<<if ($player.vaginaExist or $player.gender_appearance is "f" or $backgroundTraits.includes("crossdresser"))>>
			<<set _bodyWritingOptions["Love Interests"]["카우걸"] to "cowgirl">>
		<</if>>
	<</if>>
	<<if $sydneyromance is 1>>
		<<set _bodyWritingOptions["Love Interests"]["시드니의 구원자"] to "sydneys_savior">>
		<<set _bodyWritingOptions["Love Interests"]["시드니에게 속함"] to "bound_to_sydney">>
		<<set _bodyWritingOptions["Love Interests"]["시드니가 나를 :)"] to "sydney_makes_me_smile">>
		<<if C.npc.Sydney.purity gt 1>>
			<<set _bodyWritingOptions["Love Interests"]["가장 순결한 사랑"] to "purest_love">>
		<<else>>
			<<set _bodyWritingOptions["Love Interests"]["음란한 죄인"] to "lusty_sinners">>
		<</if>>
	<</if>>
	<<if $syndromewolves is 1 and hasSexStat("deviancy", 3)>>
		<<set _bodyWritingOptions["Love Interests"]["검은 늑대의 " + ($player.gender_appearance isnot "m" ? "암캐" : "수캐")] to "black_wolfs_bitch">>
		<<set _bodyWritingOptions["Love Interests"]["우두머리를 위하여"] to "all_for_my_alpha">>
		<<if $wolfpackleader is 1>>
			<<set _bodyWritingOptions["Love Interests"]["무리의 우두머리"] to "leader_of_the_pack">>
		<</if>>
		<<set _bodyWritingOptions["Love Interests"]["늑대와 함께 달려"] to "runs_with_wolves">>
	<</if>>
	<<if $syndromebird is 1>>
		<<set _bodyWritingOptions["Love Interests"]["거대 매의 배우자"] to "great_hawks_spouse">>
		<<set _bodyWritingOptions["Love Interests"]["사랑과 함께 날아오른다"] to "soaring_with_love">>
		<<set _bodyWritingOptions["Love Interests"]["두려운 존재의 짝"] to "terrors_mate">>
		<<set _bodyWritingOptions["Love Interests"]["자유로운 새"] to "free_bird">>
	<</if>>
	<<if $debug is 1>>
		<<set _bodyWritingOptions["디버그"] to setup.bodywriting>>
		<<set _debugBodywritingOptionsKeys to Object.keys(setup.bodywriting)>>
		<<link [[몸을 씻는다|$passage]]>>
			<<set $mirrorMenu to "skin">>
			<<wash>>
		<</link>>
		<<link [[양손을 묶는다|$passage]]>>
			<<set $mirrorMenu to "skin">>
			<<bind>>
		<</link>>
		<br/>
		<<print Object.values(setup.bodywriting).length>>개의 알려진 신체 낙서가 있습니다.
	<</if>>
<</widget>>

<<widget "bodywritingMenuLinks">>
	<div id="bodywritingMenuLinks">
	<<set _keys to Object.keys(_bodyWritingOptions)>>
	<<if $bodywritingSet is undefined>>
		<<set $bodywritingSet to "General">>
	<</if>>
	<<for _i to 0; _i lt _keys.length; _i++>>
		<<capture _i _keys>>
			<span @id="'link-'+_keys[_i].replace(/ /g,'-')" @class="(_keys[_i] is $bodywritingSet ? 'selected' : '')">
			<<trBodyWritingCategory _keys[_i]>><<link _trResult>>
				<<removeclass `'#link-'+$bodywritingSet.replace(/ /g,'-')` "selected">>
				<<set $bodywritingSet to clone(_keys[_i])>>
				<<addclass `'#link-'+$bodywritingSet.replace(/ /g,'-')` "selected">>
				<<replace "#bodywritingMenu">><<bodywritingMenu _args[0]>><</replace>>
			<</link>> |
			</span>
		<</capture>>
	<</for>>
	</div>

	<br>
	<div id="bodywritingMenu" class="no-numberify">
		<<bodywritingMenu _args[0]>>
	</div>
	<br><br>
<</widget>>

<<widget "bodywritingMenu">>
	<<if Object.keys(_bodyWritingOptions[$bodywritingSet]).length gt 0>>
		<<set _bodyPartOptions to {}>>
		<<if _args[0] isnot undefined>>
			<<set _bodyPartOptionsSkip to _args[0]>>
		<<else>>
			<<set _bodyPartOptionsSkip to ["back", "left_bottom", "right_bottom"]>>
		<</if>>
		<<for _label, _value range $skin>>
			<<if _bodyPartOptionsSkip.includes(_label)>>
				<<continue>>
			<<elseif Object.keys(_value).length is 0>>
				<<silently>><<set _temp to _label.replace("_", " ")>><<trBodypart _temp>><</silently>>
				<<set _bodyPartOptions[_trResult] to _label>>
			<</if>>
		<</for>>
		<<if $debug is 1>>
			/*Write*/
			<<listbox "_bodyWritingDebugSelected">>
				<<optionsfrom _bodyWritingOptions[$bodywritingSet]>>
			<</listbox>>
			문구를 가능한 모든 곳에 쓴다
			<<link [[확인|$passage]]>>
				<<set $mirrorMenu to "skin">>
				<<for _part, _value range $skin>>
					<<add_bodywriting _part _bodyWritingDebugSelected "pen">>
				<</for>>
			<</link>>
			<br />
			/*Write*/
			<<listbox "_bodyWritingDebugSelected">>
				<<optionsfrom _bodyWritingOptions[$bodywritingSet]>>
			<</listbox>>
			문구를 커스텀 스프라이트가 있는 모든 곳에 쓴다


			<<link [[확인|$passage]]>>
				<<set $mirrorMenu to "skin">>
				<<for _part, _value range $skin>>
					<<if _bodyWritingDebugSelected.sprites.includes(_part)>>
						<<add_bodywriting _part _bodyWritingDebugSelected "pen">>
					<</if>>
				<</for>>
			<</link>>
			<br />
			<br />
		<</if>>

		<<if Object.keys(_bodyPartOptions).length gt 0>>
			/*Write*/
			<<listbox "_bodyWritingSelected">>
				<<optionsfrom _bodyWritingOptions[$bodywritingSet]>>
			<</listbox>>
			문구를
			<<listbox "_bodyPartSelected">>
				<<optionsfrom _bodyPartOptions>>
			<</listbox>> 에 쓴다

			<<link [[확인|$passage]]>>
				<<set $mirrorMenu to "skin">>
				<<set $bodyWritingSelected to Object.keys(_bodyWritingOptions[$bodywritingSet])[Object.values(_bodyWritingOptions[$bodywritingSet]).indexOf(_bodyWritingSelected)]>>
				<<set $bodyPartSelected to _bodyPartSelected>>
				<<add_bodywriting _bodyPartSelected _bodyWritingSelected "pen">>
			<</link>>
		<<else>>
			이 외에 어디에 광고를 쓸 수 있을지 잘 모르겠다.
		<</if>>
	<</if>>
<</widget>>

<<widget "hairDescription">>
	당신은 거울 속의 머리모양을 확인한다.
	<<if $hairtype is "default" and $fringetype is "default">>
	당신은 아직 머리 스타일을 정돈하지 않았다. 당신의 옆머리는 몸 <<if $hairposition is "front">>앞에<<else>>뒤에<</if>> 위치하고 있다.
	당신의 머리카락은
	<<if $hairgelBottles is undefined>><<set $hairgelBottles to 0>><</if>>
	<<if $earsposition is "front">>
			<span class="gold"> 귀 뒤에 밀어넣어져</span>
	<<else>>
			<span class="gold">귀 앞에 늘어져</span>
	<</if>>
	있고
	<<if $ruffledisable is "t">>
		<mouse class = "gold tooltip-small" style="border-bottom-color:white">
			제 자리에 고정되어 있다.
			<span class="black">당신의 머리 스타일은 헝클어질 수 없습니다. <br> <i class="red">새 머리 스타일을 선택하면 다시 머리가 헝클어질 수 있습니다. <<print ($hairgelBottles is 0 ? "헤어 젤은 가게에서 구할 수 있습니다." : "헤어 젤을 다시 바를 필요가 있을 것입니다.")>></i></span>
		</mouse>
	<<else>>
		<mouse class = "gold tooltip-small" style="border-bottom-color:white">
			제 자리에 고정되어 있지 않다.
			<span class="black">특정한 상황에서는 당신의 머리가 더 헝클어진 모습으로 바뀔 수 있습니다. <br> <i class="teal">헤어 젤을 사용하면 머리가 헝클어지는 것을 방지할 수 있습니다.<<print ($hairgelBottles is 0 ? " 헤어 젤은 가게에서 구할 수 있습니다." : "")>></i> </span>
		</mouse>
	<</if>>
		<div class="no-numberify">
			<<link [[머리 스타일을 임의로 정돈한다|$passage]]>>
				<<set _hairType to Object.values(_hairTypeByName)>>
				<<set $hairtype to _hairType[random(0,_hairType.length - 1)]>>
				<<set _fringeType to Object.values(_fringeTypeByName)>>
				<<set $fringetype to _fringeType[random(0,_fringeType.length - 1)]>>
				<<set $hairposition to ["front","back"][random(0,1)]>>
			<</link>>
			|
			<<switch $hairposition>>
				<<case "front">>
					<<link "옆머리를 몸 뒤로 위치시킨다">>
						<<run State.setVar("$hairposition", "back")>>
						<<run Engine.show()>>
					<</link>>
				<<case "back">>
					<<link "옆머리를 몸 앞으로 위치시킨다">>
						<<run State.setVar("$hairposition", "front")>>
						<<run Engine.show()>>
					<</link>>
				<<default>>
					<<link "옆머리를 몸 앞으로 위치시킨다">>
						<<run State.setVar("$hairposition", "front")>>
						<<run Engine.show()>>
					<</link>>
			<</switch>>
			|
			<<switch $earsposition>>
				<<case "front">>
					<<link "머리카락을 귀 앞에 둔다">>
						<<run State.setVar("$earsposition", "back")>>
						<<run Engine.show()>>
					<</link>>
				<<case "back">>
					<<link "머리카락을 귀 뒤로 밀어넣는다">>
						<<run State.setVar("$earsposition", "front")>>
						<<run Engine.show()>>
					<</link>>
				<<default>>
					<<link "머리카락을 귀 뒤로 밀어넣는다">>
						<<run State.setVar("$earsposition", "front")>>
						<<run Engine.show()>>
					<</link>>
			<</switch>>
			|
			<<switch $browsposition>>
				<<case "front">>
					<<link "눈썹을 머리카락 뒤에 둔다">>
						<<run State.setVar("$browsposition", "back")>>
						<<run Engine.show()>>
					<</link>>
				<<case "back">>
					<<link "눈썹을 머리카락 앞에 둔다">>
						<<run State.setVar("$browsposition", "front")>>
						<<run Engine.show()>>
					<</link>>
				<<default>>
					<<link "눈썹을 머리카락 뒤에 둔다">>
						<<run State.setVar("$browsposition", "back")>>
						<<run Engine.show()>>
					<</link>>
			<</switch>>
			<br><br>
		</div>
	<<else>>
		<<if $hairtype is "default">>
			현재, 당신의 앞머리는 <span class="gold"><<trHairtype $fringetype>>_trResult</span> 스타일이다. 당신의 옆머리는 <span class="gold">자연스럽게</span> 두고 있고 몸 <<if $hairposition is "front">>앞에<<else>>뒤에<</if>> 위치해 있다.
		<<elseif $fringetype is "default">>
			현재, 당신의 앞머리는 <span class="gold">자연스럽게</span> 두고 있다. 당신의 옆머리는 <span class="gold"><<trHairtype $hairtype>>_trResult</span> 스타일이며 몸 <<if $hairposition is "front">>앞에<<else>>뒤에<</if>> 위치해 있다.
		<<else>>
			현재, 당신의 앞머리는 <span class="gold"><<trHairtype $fringetype>>_trResult</span> 스타일이다. 당신의 옆머리는 <span class="gold"><<trHairtype $hairtype>>_trResult</span> 스타일이며 몸 <<if $hairposition is "front">>앞에<<else>>뒤에<</if>> 위치해 있다.
		<</if>>
			당신의 머리카락은
			<<if $hairgelBottles is undefined>><<set $hairgelBottles to 0>><</if>>
			<<if $earsposition is "front">>
				 <span class="gold"> 귀 뒤에 밀어넣어져</span>
			<<else>>
				 <span class="gold">귀 앞에 늘어져</span>
			<</if>>
			있고
			<<if $ruffledisable is "t">>
				<mouse class = "gold tooltip-small" style="border-bottom-color:white">
					제 자리에 고정되어 있다.
					<span class="black">당신의 머리 스타일은 헝클어질 수 없습니다. <br> <i class="red">새 머리 스타일을 선택하면 다시 머리가 헝클어질 수 있습니다. <<print ($hairgelBottles is 0 ? "헤어 젤은 가게에서 구할 수 있습니다." : "헤어 젤을 다시 바를 필요가 있을 것입니다.")>></i></span>
				</mouse>
			<<else>>
				<mouse class = "gold tooltip-small" style="border-bottom-color:white">
					제 자리에 고정되어 있지 않다.
					<span class="black">특정한 상황에서는 당신의 머리가 더 헝클어진 모습으로 바뀔 수 있습니다. <br> <i class="teal">헤어 젤을 사용하면 머리가 헝클어지는 것을 방지할 수 있습니다.<<print ($hairgelBottles is 0 ? " 헤어 젤은 가게에서 구할 수 있습니다." : "")>></i> </span>
				</mouse>
			<</if>>
		<div class="no-numberify">
			<<link [[머리 스타일을 임의로 정돈한다|$passage]]>>
				<<set _hairType to Object.values(_hairTypeByName)>>
				<<set $hairtype to _hairType[random(0,_hairType.length - 1)]>>
				<<set _fringeType to Object.values(_fringeTypeByName)>>
				<<set $fringetype to _fringeType[random(0,_fringeType.length - 1)]>>
				<<set $hairposition to ["front","back"][random(0,1)]>>
			<</link>>
			|
			<<switch $hairposition>>
				<<case "front">>
					<<link "옆머리를 몸 뒤로 위치시킨다">>
						<<run State.setVar("$hairposition", "back")>>
						<<run Engine.show()>>
					<</link>>
				<<case "back">>
					<<link "옆머리를 몸 앞으로 위치시킨다">>
						<<run State.setVar("$hairposition", "front")>>
						<<run Engine.show()>>
					<</link>>
				<<default>>
					<<link "옆머리를 몸 앞으로 위치시킨다">>
						<<run State.setVar("$hairposition", "front")>>
						<<run Engine.show()>>
					<</link>>
			<</switch>>
			|
			<<switch $earsposition>>
				<<case "front">>
					<<link "머리카락을 귀 앞에 둔다">>
						<<run State.setVar("$earsposition", "back")>>
						<<run Engine.show()>>
					<</link>>
				<<case "back">>
					<<link "머리카락을 귀 뒤로 밀어넣는다">>
						<<run State.setVar("$earsposition", "front")>>
						<<run Engine.show()>>
					<</link>>
				<<default>>
					<<link "머리카락을 귀 뒤로 밀어넣는다">>
						<<run State.setVar("$earsposition", "front")>>
						<<run Engine.show()>>
					<</link>>
			<</switch>>
			|
			<<switch $browsposition>>
				<<case "front">>
					<<link "눈썹을 머리카락 뒤에 둔다">>
						<<run State.setVar("$browsposition", "back")>>
						<<run Engine.show()>>
					<</link>>
				<<case "back">>
					<<link "눈썹을 머리카락 앞에 둔다">>
						<<run State.setVar("$browsposition", "front")>>
						<<run Engine.show()>>
					<</link>>
				<<default>>
					<<link "눈썹을 머리카락 뒤에 둔다">>
						<<run State.setVar("$browsposition", "back")>>
						<<run Engine.show()>>
					<</link>>
			<</switch>>
		<br><br>
		</div>
	<</if>>
<</widget>>

<<widget "mirrorHair">>
	<<link "뒤로">><<replace #mirror>><<mirrorMenu>><</replace>><<numberify "#passages > .passage">><<unset $mirrorMenu>><</link>>
	<<shopClothingFilterSettingsDefault>> /* Due to reusing the traits filtering */
	<br><br>
	<div id="hairDescription">
	<<hairDescription>>
	</div>

	<div id="hairgelLinks">
		<<hairgelLinks>>
	</div>

	<br>

	<<set _hairTypeByName to {}>>
	<<run setup.hairstyles.sides.forEach(style => {
		if (!V.shopClothingFilter.active || !V.shopClothingFilter.traits.length || style.type.find(type => V.shopClothingFilter.traits.includes(type))) {Wikifier.wikifyEval("<<trHairtype '"+ style.name +"'>>");T.hairTypeByName[T.trResult] = style.variable;}
	})>>

	<<set _fringeTypeByName to {}>>
	<<run setup.hairstyles.fringe.forEach(style => {
		if (!V.shopClothingFilter.active || !V.shopClothingFilter.traits.length || style.type.find(type => V.shopClothingFilter.traits.includes(type))) {Wikifier.wikifyEval("<<trHairtype '"+ style.name +"'>>");T.fringeTypeByName[T.trResult] = style.variable;}
	})>>

	<div id="hairContainer">
		<div id="hairContainerHeader" class="no-numberify">
			<<mirrorhairdisplayLinks "hair">>
		</div>
		<<mirrorhairdisplay "$hairtype" "sides">>
	</div>
	<br><br>
<</widget>>

<<widget "hairgelLinks">>
	<div class="no-numberify">
	<<link [["마네킹을 " + ($showMannequins ? "숨긴다" : "보이게 한다")|$passage]]>><<set $showMannequins to 1 - ($showMannequins or 0)>><</link>>
	<mouse class="tooltip-small linkBlue">(?)<span>머리 스타일 미리보기를 비활성화합니다. <i class="red">마네킹을 보이게 하면 몇몇 기기에서 성능 문제가 발생할 수 있습니다.</i></span></mouse>
	<<if $hairgelBottles isnot undefined and $hairgelBottles gte 1>>
		| <<hairdressericon "gel">>
		<<if $ruffledisable is "f">>
			<<link "헤어 젤을 바른다">><<replace #hairDescription>><<hairgelApply>><</replace>><<replace #hairgelDesc>><<hairgelDesc>><</replace>><<replace#hairgelLinks>><<hairgelLinks>><</replace>><</link>>
		|
		<</if>>
		<div id="hairgelDesc" style="display:inline"><<hairgelDesc>></div>
	<</if>>
	</div>
<</widget>>

<<widget "hairgelApply">>
	<<if $leftarm isnot "bound" and $rightarm isnot "bound">>
		<<set $ruffledisable to "t">>
		<<set $hairgelBottles += -1>>
	<</if>>
	<<hairDescription>>
	<<if $leftarm is "bound" and $rightarm is "bound">>
		<span class="red">양팔이 묶여 있어서</span>, 당신은 이 상태로는 머리에 무언가를 하기에는 너무 힘들다는 것을 알아차린다.
		<br>
	<<else>>
		당신은 헤어 젤을 손 위에 한 뭉텅이 짜서 머리 전체에 매끈하게 바른다. 당신이 일을 마쳤을 때에는, 당신의 머리 스타일은 제 자리에 고정되었고, 작은 병은 텅 비었다. <span class="pink">만약 당신이 머리 스타일을 바꾸기로 결심한다면, 더 많이 <<print ($hairgelBottles is 0) ? "구해올" : "바를">> 필요가 있을 것이다.</span>
		<hr>
	<</if>>
<</widget>>

<<widget "hairgelDesc">>
	당신에게는 <span class="gold">$hairgelBottles</span> <<print ($hairgelBottles is 1) ? "병" : "병">>의 헤어 젤이 남아있다.
<</widget>>

<<widget "mirrormodel">>
	<<set _modeloptions.skin_type = $skinColor.natural || "light">>
	<<set _modeloptions.freckles = $player.freckles == true and $makeup.concealer != 1>>
	<<set _modeloptions.left_eye = $makeup.eyelenses.left != 0 ? $makeup.eyelenses.left : $leftEyeColour>>
	<<set _modeloptions.right_eye = $makeup.eyelenses.right != 0 ? $makeup.eyelenses.right : $rightEyeColour>>
	<<set _modeloptions.mouth to 'neutral'>>
	<<set _modeloptions.hair_colour = $haircolour>>
	<<set _modeloptions.hair_fringe_colour = $hairfringecolour>>
	<<set _modeloptions.hair_fringe_colour_gradient = $hairFringeColourGradient>>
	<<set _modeloptions.hair_fringe_colour_style = $hairFringeColourStyle>>
	<<set _modeloptions.hair_colour_gradient = $hairColourGradient>>
	<<set _modeloptions.hair_colour_style = $hairColourStyle>>
	<<set _modeloptions.hair_sides_length to $hairlengthstage>>
	<<set _modeloptions.hair_sides_position to $hairposition>>
	<<set _modeloptions.hair_fringe_length to $fringelengthstage>>
<</widget>>

<<widget "mirrorhairdisplay">>
	<<if _hairCategory isnot _args[0]>>
		<<set _perPage to $showMannequins ? 14 : 100>>
		<<set _page to 1>>
	<</if>>
	<<set _hairCategory to _args[0]>>
	<<mirrorhairOptions _args[1]>>

	<div id="hairContainerElements">
		<<mirrorhairdisplayElements _hairOptions>>
	</div>
	<div id="hairContainerPages" class="no-numberify">
		<<mirrorhairControls _args[1]>>
	</div>
<</widget>>

<<widget "mirrorhairControls">>
	<<if $showMannequins>>
		<div id="hairContainerFooter">
			<div class="tab">
			<<if _page gt 1>>
				<<button '<span class="fa-icon fa-left"></span> 이전'>>
					<<if _page gt 1>><<set _page-->><</if>>
					<<mirrorhairOptions _args[0]>>
					<<replace "#hairContainerElements">><<mirrorhairdisplayElements _hairOptions>><</replace>>
					<<replace "#hairContainerPages">><<mirrorhairControls _args[0]>><</replace>>
				<</button>>
			<</if>>
			</div>
			<div class="tab">
			<<if _page lt _pageMax>>
				<<button '다음 <span class="fa-icon fa-right"></span>'>>
					<<if _page lt _pageMax>><<set _page++>><</if>>
					<<mirrorhairOptions _args[0]>>
					<<replace "#hairContainerElements">><<mirrorhairdisplayElements _hairOptions>><</replace>>
					<<replace "#hairContainerPages">><<mirrorhairControls _args[0]>><</replace>>
				<</button>>
			<</if>>
			</div>
			<div class="tab">
				<div id="buttonpage">
					<<button '_page/_pageMax'>>
					<</button>>
				</div>
			</div>
		</div>
	<</if>>
<</widget>>

<<widget "mirrorhairTraits">>
	<div id="hairContainerFilter">
		<div class="tab">
				<<button "<span class='fa-icon fa-check'></span> 적용">>
					<<set $shopClothingFilter.active = true>>
					<<run updateMoment()>>
				<</button>>
				<<button "<span class='fa-icon fa-reset'></span> 필터 초기화">>
					<<shopClothingFilterReset>>
					<<replace "#hairContainerTraits">><<mirrorHairTraitList>><</replace>>
					<<run updateMoment()>>
				<</button>>
				<<button "<span class='fa-icon fa-selected'></span> 전부 선택/해제">>
					<<run toggleAllHairTraitsFilter()>>
				<</button>>
		</div>
    </div>
<</widget>>

<<widget "mirrorhairOptions">>
	<<set _hairOptions to {}>>
	<<run setup.hairstyles[_args[0]].forEach(style => {
		if (!V.shopClothingFilter.active || !V.shopClothingFilter.traits.length || style.type.find(type => V.shopClothingFilter.traits.includes(type))) {Wikifier.wikifyEval("<<trHairtype '"+ style.name +"'>>");T.hairOptions[T.trResult] = style.variable;}
	})>>
	<<set _pageMax to Math.ceil(Object.keys(_hairOptions).length / _perPage)>>

	<<run Object.keys(_hairOptions).forEach((key, index) => {
    if (!between(index, T.perPage * (T.page - 1), (T.perPage * T.page) - 1)) {
            delete T.hairOptions[key];
        }
    })>>
<</widget>>

<<widget "mirrorhairdisplayLinks">>
	<div class="tab">
		<span @class="_args[0] is 'hair' ? 'tab-selected' : 'tab'">
			<<button "옆머리">>
				<<replace "#hairContainer">>
					<div id="hairContainerHeader" class="no-numberify">
						<<mirrorhairdisplayLinks "hair">>
					</div>
					<<mirrorhairdisplay "$hairtype" "sides">>
				<</replace>>
			<</button>>
		</span>
	</div>
	<div class="tab">
		<span @class="_args[0] is 'fringe' ? 'tab-selected' : ''">
			<<button "앞머리">>
				<<replace "#hairContainer">>
					<div id="hairContainerHeader" class="no-numberify">
						<<mirrorhairdisplayLinks "fringe">>
					</div>
					<<mirrorhairdisplay "$fringetype" "fringe">>
				<</replace>>
			<</button>>
		</span>
	</div>
	<div class="tab">
		<span @class="_args[0] is 'style' ? 'tab-selected' : ''">
			<<button "세이브/로드">>
				<<replace "#hairContainer">>
					<div id="hairContainerHeader" class="no-numberify">
						<<mirrorhairdisplayLinks "style">>
					</div>
					<<mirrorhairdisplaySave>>
				<</replace>>
			<</button>>
			<div id="hairContainerSave" class="no-numberify">
			</div>
		</span>
	</div>
	<div class="tab">
		<span @class="_args[0] is 'filter' ? 'tab-selected' : ''">
			<<button "필터">>
				<<replace "#hairContainer">>
					<div id="hairContainerHeader" class="no-numberify">
						<<mirrorhairdisplayLinks "filter">>
					</div>
					<<mirrorhairdisplayFilter>>
				<</replace>>
			<</button>>
		</span>
	</div>
<</widget>>

<<widget "mirrorhairdisplayElements">>
	<div id="hairGridSides" class="no-numberify hairGrid">
		<<for _label, _hairName range _args[0]>>
			<<capture _hairCategory, _hairName>>
				<div @id="'hairGrid-' + _hairCategory.replace('$','') + '-' + _hairName.replace(/ /g,'')" @class="'gridItem' + (_hairName is V[_hairCategory.replace('$','')] ? ' selectedHair' : '')" @onclick="`wikifier('mirrorhairdisplayClick', '${T.hairCategory.replace('$','')}', '${T.hairName.replace(/ /g,'_')}');`">
					<<if $options.images is 1 and $showMannequins is 1>>
						<<selectmodel "main">>
						<<mirrormodel>>
						<<if _hairCategory is "$hairtype">>
							<<set _modeloptions.hair_sides_type to _hairName>>
							<<set _modeloptions.hair_fringe_type to $fringetype>>
						<<else>>
							<<set _modeloptions.hair_fringe_type to _hairName>>
							<<set _modeloptions.hair_sides_type to $hairtype>>
						<</if>>
						<<set _modeloptions.ears_position to $earsposition>>
						<<rendermodel "hairstyleMannequin">>
						<br>
					<</if>>
					<<print _label>>
				</div>
			<</capture>>
		<</for>>
	</div>
<</widget>>

<<widget "mirrorhairdisplayClick">>
	<<if _args[0] and _args[1]>>
		<<if Object.values(_hairOptions).includes(V[_args[0]])>>
			<<set _id to "#hairGrid-" + _args[0] + "-" + V[_args[0]].replace(/ /g,"")>>
			<<removeclass _id "selectedHair">>
		<</if>>
		<<set V[_args[0]] to _args[1].replace(/_/g," ")>>
		<<set _id2 to "#hairGrid-" + _args[0] + "-" + _args[1].replace(/_/g,"")>>
		<<set $ruffledisable to "f">>
		<<addclass _id2 "selectedHair">>
		<<updatesidebarimg>>
		<<replace #hairDescription>><<hairDescription>><</replace>>
		<<replace #hairgelLinks>><<hairgelLinks>><</replace>>
	<</if>>
<</widget>>

<<widget "mirrorhairdisplaySave">>
	<div id="hairContainerHairstyle">
		<<mirrorHairSaveOptions>>
	</div>
	<div id="hairContainerSave" class="no-numberify">
		<<mirrorHairSave>>
	</div>
<</widget>>

<<widget "mirrorHairSaveOptions">>
		<<if !$savedHairStyles>>
			<<set $savedHairStyles to {
				기본: { hairtype:$hairtype, fringetype:$fringetype, hairposition:$hairposition }
			}>>
		<</if>>
		<div class="no-numberify saveHair">
		<span class="bold">저장된 머리 스타일 선택:</span>
			<hr style="border:none;margin:.25em 0">
			<<set _savedHairStylesKeys to Object.keys($savedHairStyles)>>
			<<if _savedHairStylesKeys.length gt 0>>
				<<listbox '_selectedSavedHairStyle'>>
					<<optionsfrom _savedHairStylesKeys>>
				<</listbox>>
			<</if>>
			<br>
		</div>
		<div class="no-numberify saveHair">
			<span class="bold" style="margin:.25em 0">새 머리 스타일을 만든다:</span>
			<hr style="border:none;margin:.25em 0">
			<label>이름: <<textbox "_hairStyleName" "">></label>
			<mouse class="tooltip linkBlue"> (?)<span>당신의 현재 머리 스타일을 저장해서, 나중에 다시 사용할 수 있게 합니다. 중복된 이름은 이미 존재하는 스타일을 덮어씌울 것입니다.</span></mouse>
			<span id="textbox-error"></span>
		</div>
<</widget>>


<<widget "mirrorhairdisplayFilter">>
	<div id="hairContainerTraits" class="no-numberify">
		<<mirrorHairTraitList>>
	</div>
	<div id="hairContainerFilter">
		<<mirrorhairTraits>>
	</div>
<</widget>>

<<widget "mirrorHairTraitList">>
	<<set _shopLocation to "mirrorhair">>
	<div class="hairGridTraits">
		<div class="traitCategory">
			<<set _textureTraits to ["curly", "sleek", "wavy", "textured"]>>
			<span class="gold" style="padding-left:5px">질감:</span>
				<<for _trait range _textureTraits.sort()>>
					<<silently>><< _trait>><</silently>>
					<<set _traitObj to setup.shopDetails[_trait]>>
					<div class="filters-trait-row">
						<label>
							<<set _checked = $shopClothingFilter.traits.includes(_trait) ? 'checked="checked"' : ''>>
							<<clothingtrait _trait 'display_normal'>>
							<<print '<input type="checkbox" @id="_trait" @value="_trait" ' + _checked + ' onclick="window.shopClothingFilterToggleTrait(this.value)">'>>
							<<if !_traitObj.desc>>
								<<print _traitObj.name>>
							<<else>>
								<mouse class = "tooltip-small">
									<<print _traitObj.name>>
									<span class="black"><<print _traitObj.desc>></span>
								</mouse>
							<</if>>
						</label>
					</div>
				<</for>>
		</div>
		<div class="traitCategory">
			<span class="gold" style="padding-left:5px">스타일:</span>
			<<set _styleTraits to ["braids", "buns", "pigtails", "ponytail"]>>
				<<for _trait range _styleTraits.sort()>>
					<<silently>><< _trait>><</silently>>
					<<set _traitObj to setup.shopDetails[_trait]>>
					<div class="filters-trait-row">
						<label>
							<<set _checked = $shopClothingFilter.traits.includes(_trait) ? 'checked="checked"' : ''>>
							<<clothingtrait _trait 'display_normal'>>
							<<print '<input type="checkbox" @id="_trait" @value="_trait" ' + _checked + ' onclick="window.shopClothingFilterToggleTrait(this.value)">'>>
							<<if !_traitObj.desc>>
								<<print _traitObj.name>>
							<<else>>
								<mouse class = "tooltip-small">
									<<print _traitObj.name>>
									<span class="black"><<print _traitObj.desc>></span>
								</mouse>
							<</if>>
						</label>
					</div>
				<</for>>
		</div>
		<div class="traitCategory">
			<span class="gold" style="padding-left:5px">기타</span>
			<<set _otherTraits to ["loose","short"]>>
				<<for _trait range _otherTraits.sort()>>
					<<silently>><< _trait>><</silently>>
					<<set _traitObj to setup.shopDetails[_trait]>>
					<div class="filters-trait-row">
						<label>
							<<set _checked = $shopClothingFilter.traits.includes(_trait) ? 'checked="checked"' : ''>>
							<<clothingtrait _trait 'display_normal'>>
							<<print '<input type="checkbox" @id="_trait" @value="_trait" ' + _checked + ' onclick="window.shopClothingFilterToggleTrait(this.value)">'>>
							<<if !_traitObj.desc>>
								<<print _traitObj.name>>
							<<else>>
								<mouse class = "tooltip-small">
									<<print _traitObj.name>>
									<span class="black"><<print _traitObj.desc>></span>
								</mouse>
							<</if>>
						</label>
					</div>
				<</for>>
		</div>
	</div>
<</widget>>

<<widget "mirrorHairSave">>
	<div class="hairContainerSave">
	<<if _savedHairStylesKeys.length gt 0>>
	<div class="tab">
		<<button '<span class="fa-icon fa-check"></span> 사용'>>
			<<set $hairtype to $savedHairStyles[_selectedSavedHairStyle].hairtype>>
			<<set $fringetype to $savedHairStyles[_selectedSavedHairStyle].fringetype>>
			<<set $hairposition to $savedHairStyles[_selectedSavedHairStyle].hairposition>>
			<<set $ruffledisable to "f">>
			<<updatesidebarimg>>
		<</button>>
		<<button '<span class="fa-icon fa-overwrite"></span> 덮어쓰기'>>
			<<set $savedHairStyles[_selectedSavedHairStyle].hairtype to $hairtype>>
			<<set $savedHairStyles[_selectedSavedHairStyle].fringetype to $fringetype>>
			<<set $savedHairStyles[_selectedSavedHairStyle].hairposition to $hairposition>>
			<<updatesidebarimg>>
		<</button>>
		<<button '<span class="fa-icon fa-delete"></span> 삭제'>>
			<<if _selectedSavedHairStyle isnot "기본">>
				<<run $outfit.forEach((o) => {
					if(o.hairStyle === T.selectedSavedHairStyle){
						o.hairStyle = undefined;
					}
				})>>
				<<run delete $savedHairStyles[_selectedSavedHairStyle]>>
				<<updatesidebarimg>>
				<<replace #hairContainerHairstyle>><<mirrorHairSaveOptions>><</replace>>
			<</if>>
		<</button>>
		<<button '<span class="fa-icon fa-save"></span> 세이브'>>
			<<if _hairStyleName is "">>
				<<replace "#textbox-error">><br> <span class="red">이름을 입력해 주세요.</span><</replace>>
			<<else>>
				<<replace "#textbox-error">><</replace>>
				<<set _hairStyleName to _hairStyleName.replace(/[^a-zA-Z가-힣\u4e00-\u9fa50-9_-]+/g,"").substring(0,30)>>
				<<set $savedHairStyles[_hairStyleName] to { hairtype:$hairtype, fringetype:$fringetype, hairposition:$hairposition }>>
				<<replace #hairContainerHairstyle>><<mirrorHairSaveOptions>><</replace>>
			<</if>>
		<</button>>
	</div>
	<<else>>
	<div class="tab">
		<<button '<span class="fa-icon fa-save"></span> 세이브'>>
			<<if _hairStyleName is "">>
				<<replace "#textbox-error">><br> <span class="red">이름을 입력해 주세요.</span><</replace>>
			<<else>>
				<<replace "#textbox-error">><</replace>>
				<<set _hairStyleName to _hairStyleName.replace(/[^a-zA-Z가-힣\u4e00-\u9fa50-9_-]+/g,"").substring(0,30)>>
				<<set $savedHairStyles[_hairStyleName] to { hairtype:$hairtype, fringetype:$fringetype, hairposition:$hairposition }>>
				<<replace #hairContainerHairstyle>><<mirrorHairSaveOptions>><</replace>>
			<</if>>
		<</button>>
	</div>
	<</if>>
	</div>
<</widget>>


<<widget "mirrorMakeupPart">>
	<<set _itemType = _args[0]>>
	<<set _singular = _args[1]>>
	<<set _plural = _args[2]>>
	<<set _cssClass = _args[3]>>

	<<set _items = $makeup.owned[_itemType].filter(x => x.count > 0)>>
	<<if $makeup.owned[_itemType].length == 0>>
		<<handtoolPost _singular "을">> 가지고 있지 않다.
	<<elseif _items.length == 0>>
		<<handtoolPost _singular "이">> 다 떨어졌다.
		<br>
	<</if>>
	<<if _items.length != 0 or $makeup[_itemType] != 0>>
		<<handtoolPost _singular "을">> 바른다:<br>
		<<if $makeup[_itemType] != 0>>
			<<capture _itemType>>
			<span class="no-numberify">
			<<link "지운다">>

			<<if _itemType is "eyelenses">>
				<!-- A safety check for $makeup.eyelenses -->
				<<set $makeup.eyelenses to { left: 0, right: 0 }>>
			<<else>>
				<<set $makeup[_itemType] to 0>>
			<</if>>
			<<if _itemType == 'mascara'>>
				<<set $makeup.mascara_running = 0>>
			<</if>>
			<<run Engine.show()>>

			<</link>></span>
			<<print " | ">>
			<</capture>>
		<</if>>
		<<for _i, _item range _items>>
			<<capture _item, _itemType>>
				<span class="capitalize no-numberify">
				<<if $makeup[_itemType] == _item.colour>>
					<<trColour setup.colourName(_item.colour)>><<print _trResult>>
				<<else>>
					<<trColour setup.colourName(_item.colour)>><<link _trResult>>
						<<set $makeup[_itemType] = _item.colour>>
						<<set _item.count -= 1>>
						<<if _itemType == 'mascara'>>
							<<set $makeup.mascara_running = 0>>
						<</if>>
						<<run Engine.show()>>
					<</link>>
				<</if>>
				</span>
				<span @class="_cssClass+'-'+_item.colour.replace(/ /g, '-')"><span class="colour-sample"></span></span>
				<<print "×"+_item.count+" | ">>
			<</capture>>
		<</for>>
		<br>
	<</if>>
<</widget>>

<<widget "mirrorMakeup">>
	<<link "뒤로">><<replace #mirror>><<mirrorMenu>><</replace>><<numberify "#passages > .passage">><<unset $mirrorMenu>><</link>>
	<br><br>
	__화장__
	<br>
	<<set _makeupNames to ["lipstick","eyeshadow","mascara","browscolour","eyelenses"]>>
	<<set _makeupData to ["lipstick","eyeshadow","mascara","hairdye","eyelenses"]>>
	<<if $mirror_eyebrow_dye is true>>
		<br>
		<<unset $mirror_eyebrow_dye>>
		당신은 $browsDyeOption 염색약 상자를 열고 혼합물을 준비한다.
		<br>
		작은 브러쉬를 사용하여 당신은 눈썹에 조심스럽게 염색약을 바른다.
		<br>
		당신은 염색약이 굳을 때까지 몇 분 정도 기다리면서 망치지 않았기를 바란다.
		<br><br><br>
		<<set $makeup.owned.hairdye.find(x => x.colour == $browsDyeOption).count -= 1>>
		<<pass 10>><<set $makeup.browscolour = $browsDyeOption>><<unset $browsDyeOption>>
	<</if>>


	<<link [[전부 지운다|$passage]]>>
		<<set $makeup.lipstick to 0>>
		<<set $makeup.eyeshadow to 0>>
		<<set $makeup.mascara to 0>>
		<<set $makeup.eyelenses to { left: 0, right: 0 }>>
		<<set $makeup.mascara_running to 0>>
	<</link>> |
	<<link [[무작위로|$passage]]>>
		<<for _i to 0; _i lt _makeupNames.length; _i++>>
			<<set _ownedMakeup to $makeup.owned[_makeupData[_i]]>>
			<<if _makeupNames[_i] is "eyelenses">>
				<<set _rng to random(0, _ownedMakeup.length)>>
				<<set _lens to _rng is _ownedMakeup.length ? 0 : _ownedMakeup[_rng]>>
				<<set $makeup.eyelenses to { left: _lens, right: _lens }>>
			<<else>>
				<<set _rngset to []>>
				<<for _label, _value range _ownedMakeup>>
					<<if _value.count gt 0>>
						<<run _rngset.push(_label)>>
					<</if>>
				<</for>>
				<<run _rngset.push(_ownedMakeup.length)>>
				<<set _rng to _rngset[random(0, _rngset.length - 1)]>>
				<<if _rng is _ownedMakeup.length and _makeupNames[_i] is "browscolour">>
					/*Do Nothing*/
				<<elseif _rng is _ownedMakeup.length>>
					<<set $makeup[_makeupNames[_i]] to 0>>
				<<elseif _ownedMakeup[_rng].count gt 0 and $makeup[_makeupNames[_i]] isnot _ownedMakeup[_rng].colour>>
					<<set $makeup[_makeupNames[_i]] to _ownedMakeup[_rng].colour>>
					<<set _ownedMakeup[_rng].count-->>
				<</if>>
			<</if>>
		<</for>>
	<</link>>
	<br>
	<<if $makeup.presets is undefined>>
		<<set $makeup.presets to {}>>
	<</if>>
	<<if Object.keys($makeup.presets).length gt 0>>
		저장된 세트:
		<<for _label, _value range $makeup.presets>>
			<<capture _label>>
				<<link _label>>
					<<replace "#makeupPresets">>
						<<makeupPresets _label>>
					<</replace>>
				<</link>> |
			<</capture>>
		<</for>>
		<div id="makeupPresets"></div>
	<</if>>
	<br>
	<<mirrorMakeupPart "lipstick" "lipstick" "lipsticks" "lipstick">><br>
	<<mirrorMakeupPart "eyeshadow" "eyeshadow" "eyeshadows" "eyeshadow">><br>
	<<mirrorMakeupPart "mascara" "mascara" "mascaras" "mascara">><br>

	<<if !$simpleMirror>>
		/* CONTACT LENSES */
		<<if $makeup.owned.eyelenses.length == 0 and $makeup.owned.custom_eyelenses.length == 0>>
			당신은 콘택트 렌즈를 가지고 있지 않다.
			<br>
		<<else>>
			<<set _contact_eye_selected to "Both">>
			콘택트 렌즈 착용:<br> /* NON CUSTOMISED ONES */
			눈 선택 : <<listbox "_contact_eye_selected" autoselect>>
				<<option "둘 다" "Both">>
				<<option "왼쪽 눈" "Left eye">>
				<<option "오른쪽 눈" "Right eye">>
			<</listbox>><br>
			<<if $makeup.eyelenses.left != 0 || $makeup.eyelenses.right != 0>>
				<span class="no-numberify">
				<<link "착용하지 않는다">>
				<<set $makeup.eyelenses = { left:0, right:0 }>>
				<<run Engine.show()>>
				<</link>></span>
				<<print " | ">>
			<</if>>
			<<for _i, _colour range $makeup.owned.eyelenses>>
				<<capture _colour>>
					<span class="capitalize no-numberify">
					<<trColour _colour>><<link _trResult>>
						<<if _contact_eye_selected == "Both">>
							<<set $makeup.eyelenses = { left:_colour, right:_colour }>>
						<<elseif _contact_eye_selected == "Left eye">>
							<<set $makeup.eyelenses.left = _colour>>
						<<elseif _contact_eye_selected == "Right eye">>
							<<set $makeup.eyelenses.right = _colour>>
						<</if>>
						<<run Engine.show()>>
					<</link>></span>
						<span @class="'eye-'+_colour.replace(/ /g, '-')"><span class="colour-sample bgcolour-eyes left-iris"></span></span>
					<<print " | ">>
				<</capture>>
			<</for>>
			<br>
					특별주문 콘택트 렌즈 착용:<br> /* CUSTOMISED ONES */
			<<set _custom_eye_selected to "Both">>
			눈 선택 : <<listbox "_custom_eye_selected" autoselect>>
				<<option "둘 다" "Both">>
				<<option "왼쪽 눈" "Left eye">>
				<<option "오른쪽 눈" "Right eye">>
			<</listbox>><br>
			<<if $makeup.eyelenses.left != 0 || $makeup.eyelenses.right != 0>>
				<span class="no-numberify">
				<<link "착용하지 않는다">>
				<<set $makeup.eyelenses = { left:0, right:0 }>>
				<<run Engine.show()>>
				<</link>></span>
				<<print " | ">>
			<</if>>
			<<for _i = 0; _i < $makeup.owned.custom_eyelenses.length; _i++>>
				<<run _colour = $makeup.owned.custom_eyelenses[_i]>>
				<<for _e = 0; _e < $custom_eyecolours.length; _e++>>
					<<if $custom_eyecolours[_e].variable == $makeup.owned.custom_eyelenses[_i]>>
						<<set _background_colour to clone($custom_eyecolours[_e].canvasfilter.blend)>>
					<</if>>
				<</for>>
				<<capture _colour _background_colour>>
					<span class="capitalize no-numberify">
					<<set _colour_name_with_space = window.colorNameTranslate(_colour, "spaced name")>><<trColour _colour_name_with_space>>
					<<link _trResult>>
						<<if _custom_eye_selected == "Both">>
							<<set $makeup.eyelenses = { left:_colour, right:_colour }>>
						<<elseif _custom_eye_selected == "Left eye">>
							<<set $makeup.eyelenses.left = _colour>>
						<<elseif _custom_eye_selected == "Right eye">>
							<<set $makeup.eyelenses.right = _colour>>
						<</if>>
						<<run Engine.show()>>
					<</link>></span>
					<span class="eye-custom"><span @style="'background:'+_background_colour" class="colour-sample"></span></span>
					<<print " | ">>
				<</capture>>
			<</for>>
			<br><br>
		<</if>>

		/* DYEING EYEBROWS */
		<<browsDyeReset>>
		눈썹 염색:<br>
		<<set _dyes = $makeup.owned.hairdye.filter(x => x.count > 0)>>
		<<if _dyes.length == 0>>
			당신은 가진 염료가 없다.
		<<else>>
			<<set _browsDyeOptions to {"염색하지 않는다":"noChange"}>>
			<<for _i to 0; _i lt _dyes.length; _i++>>
				<<if $makeup.browscolour is _dyes[_i].colour or $naturalhaircolour is _dyes[_i].colour>>
					<<continue>>
				<</if>>
				<<trColour _dyes[_i].colour>><<set _displayName = _trResult + " ×" + _dyes[_i].count + "">>
				<<set _browsDyeOptions[_displayName] to _dyes[_i].colour>>
			<</for>>
			<<listbox "$browsDyeOption" autoselect>>
				<<optionsfrom _browsDyeOptions>>
			<</listbox>>
			<<browsColourPreview>>
		<</if>>
		<<if $makeup.browscolour != 0>>
			<br>
			당신은 자연스러운 눈썹색을 되찾기 위해 미용실을 방문할 수 있다.
		<</if>>
		<br><br>
	<</if>>

	/* CONCEALER */
	<<if $player.freckles == true>>
		<<if $makeup.concealer == 0>>
			<span class="capitalize no-numberify">
			<<link "주근깨를 감추기 위해 컨실러를 바른다">>
			<<set $makeup.concealer = 1>>
			<<run Engine.show()>>
			<</link>>
			</span>
		<<else>>
			<span class="capitalize no-numberify">
			<<link "컨실러를 지운다">>
			<<set $makeup.concealer = 0>>
			<<run Engine.show()>>
			<</link>>
			</span>
		<</if>>
		<br><br>
	<</if>>

	__새 화장 세트__ - 현재 하고 있는 화장 세트를 저장한다
	<br>
	<<textbox "_newPresetName" "">>
	<<link [[세트 저장|$passage]]>>
		<<set _newPresetName to _newPresetName.replace(/[^a-zA-Z가-힣\u4e00-\u9fa5 0-9]+/g,"")>>
		<<set $makeup.presets[_newPresetName] to {
			lipstick:clone($makeup.lipstick),
			eyeshadow:clone($makeup.eyeshadow),
			mascara:clone($makeup.mascara),
			browscolour:clone($makeup.browscolour),
			eyelenses:clone($makeup.eyelenses),
		}>>
	<</link>>
<</widget>>

<<widget "makeupPresets">>
	<<set _presetChosen to $makeup.presets[_args[0]]>>
	세트명: <<print _args[0]>>
	<br>
	<<for $_label, $_value range _presetChosen>>
		<<switch $_label>>
			<<case "browscolour">>
				눈썹 염색: <<makeupPresetsItem "hairdye" $_value>>
			<<case "lipstick">>
				립스틱: <<makeupPresetsItem $_label $_value>>
			<<case "eyeshadow">>
				아이섀도우: <<makeupPresetsItem $_label $_value>>
			<<case "mascara">>
				마스카라: <<makeupPresetsItem $_label $_value>>
			<<case "eyelenses">>
				콘택트 렌즈: <<makeupPresetsItem $_label $_value>>
		<</switch>>
		<br>
	<</for>>
	<br>
	<<link [[저장된 세트로 화장한다|$passage]]>>
		<<for $_makeupName range _makeupNames>>
			<<set _preset to _presetChosen[$_makeupName]>>
			<<if $_makeupName is "eyelenses">>
				<<if _preset.left is 0 and _preset.right is 0>>
					<<set $makeup.eyelenses to { left:0, right:0 }>>
				<<elseif $makeup.owned.eyelenses.includes(_preset.left) and $makeup.owned.eyelenses.includes(_preset.right)>>
					<<set $makeup.eyelenses to _preset>>
				<<elseif $makeup.owned.custom_eyelenses.includes(_preset.left) and $makeup.owned.custom_eyelenses.includes(_preset.right)>>
					<<set $makeup.eyelenses to _preset>>
				<</if>>
			<<elseif _preset is 0 and $_makeupName is "hairdye">>
				/*Do Nothing*/
			<<elseif _preset is 0>>
				<<set $makeup[$_makeupName] to 0>>
			<<else>>
				<<set $_makeupName2 to ($_makeupName is "browscolour" ? "hairdye" : $_makeupName)>>
				<<set $_target to $makeup.owned[$_makeupName2].find(invMakeup => invMakeup.colour is _preset and invMakeup.colour isnot $makeup[$_makeupName] and invMakeup.count gt 0)>>
				<<if $_target>>
					<<set $makeup[$_makeupName] to clone($_target.colour)>>
					<<set $_target.count-->>
				<</if>>
			<</if>>
		<</for>>
	<</link>> |
	<<link [[세트를 지운다|$passage]]>>
		<<run delete $makeup.presets[_args[0]]>>
	<</link>>
<</widget>>

<<widget "makeupPresetsItem">>
	<<if _args[0] isnot undefined and _args[1] isnot undefined>>
		<<if _args[1] is 0 and _args[0] is "hairdye">>
			<span class="red">염색할 수 없다.</span>
		<<elseif _args[1] is 0>>
			<span class="green"><<if _args[0] is "eyelenses">>뺀다<<else>>지운다<</if>>.</span>
		<<else>>
			<<if _args[0] is "eyelenses">>
				<<if _args[1].left == 0 && _args[1].right == 0>>
					<span class="green">뺀다</span>
				<<elseif _args[1].left == _args[1].right>>
					<<trColour _args[1].left>><span class="green"><<print _trResult>> (가지고 있음).</span>
				<<else>>
					<<trColour _args[1].left>><<set $_leftcolour to _trResult>><<trColour _args[1].right>><span class="green"><<print $_leftcolour + ", " + _trResult>> (가지고 있음).</span>
				<</if>>
			<<else>>
				<<for $_i to 0; $_i lt $makeup.owned[_args[0]].length; $_i++>>
					<<if $makeup.owned[_args[0]][$_i].colour is _args[1]>>
						<<if $makeup.owned[_args[0]][$_i].count gt 0>>
							<span class="green"><<trColour _args[1]>><<print _trResult>> (<<print $makeup.owned[_args[0]][$_i].count>>).</span>
						<<else>>
							<span class="red"><<trColour _args[1]>><<print _trResult>> (0).</span>
						<</if>>
						<<break>>
					<</if>>
				<</for>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "browsColourPreview">>
	<span id="browsColourPreview">
	<<if $browsDyeOption isnot "noChange">>
		<span @class="'hair-' + $browsDyeOption.replace(/ /g, '-')">
			<span class="colour-sample bgcolour-hair colour-hair"></span>
		</span>
		<br><<link [[눈썹을 염색한다 (0:15)|$passage]]>><<set $mirror_eyebrow_dye to true>><<pass 15>><</link>>
	<</if>>
	</span>
<</widget>>

<<widget "mirrorTransformation">>
	<<link "뒤로">><<replace #mirror>><<mirrorMenu>><</replace>><<numberify "#passages > .passage">><<unset $mirrorMenu>><</link>>
	<br><br>
	내적 자아의 일부를 감추면 시간에 따라 트라우마가 천천히 상승하게 됩니다 (음모와 겨드랑이털 제외).
	트라우마가 너무 높아지게 된다면, 더는 내적 자아를 감출 수 없습니다.
	<br><br>

	<<set _angel to $transformationParts.angel>>
	<<set _fallen to $transformationParts.fallenAngel>>
	<<set _demon to $transformationParts.demon>>
	<<set _cat to $transformationParts.cat>>
	<<set _cow to $transformationParts.cow>>
	<<set _wolf to $transformationParts.wolf>>
	<<set _bird to $transformationParts.bird>>
	<<set _fox to $transformationParts.fox>>
	<<set _traits to $transformationParts.traits>>

	<div id='transformations-menu' class='grid col-2'>
		<div id='transformations-list' class='list'>
			<div class='tf-angel'>
				<<if $angel gt 1>>
					__천사__
					<br>
					<<if _angel.halo isnot "disabled">>
						<div class='tf-part-item'>
							고리:
							<<listbox "_angel.halo" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "전통적" "traditional">>
							<</listbox>>
						</div>
						<br>
					<</if>>
					<<if _angel.wings isnot "disabled">>
						<div class='tf-part-item'>
							날개:
							<<listbox "_angel.wings" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "클래식" "classic">>
							<</listbox>>
						</div>
						<br>
					<</if>>
					<br>
				<</if>>
			</div>
			<div class='tf-fallen'>
				<<if $fallenangel gt 1>>
					__타천사__
					<br>
					<<if _fallen.halo isnot "disabled">>
						<div class='tf-part-item'>
							고리:
							<<listbox "_fallen.halo" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "전통적" "traditional">>
							<</listbox>>
						</div>
						<br>
					<</if>>
					<<if _fallen.wings isnot "disabled">>
						<div class='tf-part-item'>
							날개:
							<<if $fallenangel gte 4>>
								<<listbox "_fallen.wings" autoselect>>
									<<option "숨기기" "hidden">>
									<<option "기본값" "default">>
									<<option "클래식" "classic">>
									<<option "깃털" "fallenplus">>
									<<option "클래식 깃털" "classicfallenplus">>
								<</listbox>>
							<<else>>
								<<listbox "_fallen.wings" autoselect>>
									<<option "숨기기" "hidden">>
									<<option "기본값" "default">>
									<<option "클래식" "classic">>
								<</listbox>>
							<</if>>
						</div>
					<</if>>
					<br>
				<</if>>
			</div>
			<div class='tf-demon'>
				<<if $demon gt 1>>
					__악마__
					<br>
					<<if _demon.horns isnot "disabled">>
						<div class='tf-part-item'>
							뿔:
							<<listbox "_demon.horns" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "클래식" "classic">>
								<<option "서큐버스" "succubus">>
							<</listbox>>
							<<gencolourselector "_demon.horns_colour">>
						</div>
					<</if>>
					<<if _demon.wings isnot "disabled">>
						<div class='tf-part-item'>
							날개:
							<<listbox "_demon.wings" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "서큐버스" "succubus">>
							<</listbox>>
							<<gencolourselector "_demon.wings_colour">>
						</div>
					<</if>>
					<<if _demon.tail isnot "disabled">>
						<div class='tf-part-item'>
							꼬리:
							<<listbox "_demon.tail" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "클래식" "classic">>
								<<option "서큐버스" "succubus">>
							<</listbox>>
							<<gencolourselector "_demon.tail_colour">>
						</div>
					<</if>>
					<<if $demon gte 4>>
						<div class='tf-part-item'>
							<<if hasSexStat("exhibitionism", 6)>>
								Flaunting when exposed:
								<<listbox "_traits.flaunting" autoselect>>
									<<option "숨기기" "hidden">>
									<<option "기본값" "default">>
								<</listbox>>
								<<ind>>
							<<else>>
								<span class="black">Flaunting (requires higher exhibitionism):</span>
								<<listbox "_traits.flaunting" autoselect>>
									<<option "숨기기" "hidden">>
								<</listbox>>
								<<ind>>
							<</if>>
						</div>
					<</if>>
					<br>
				<</if>>
			</div>
			<div class='tf-cat'>
				<<if $cat gt 1>>
					__고양이__
					<br>
					<<if _cat.ears isnot "disabled">>
						<div class='tf-part-item'>
							귀:
							<<listbox "_cat.ears" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _cat.tail isnot "disabled">>
						<div class='tf-part-item'>
							꼬리:
							<<listbox "_cat.tail" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _cat.heterochromia isnot "disabled">>
						<div class='tf-part-item'>
							오드아이:
							<<listbox "_cat.heterochromia" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<br>
				<</if>>
			</div>
			<div class='tf-cow'>
				<<if $cow gt 1>>
					__소__
					<br>
					<<if _cow.horns isnot "disabled">>
						<div class='tf-part-item'>
							뿔:
							<<listbox "_cow.horns" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _cow.ears isnot "disabled">>
						<div class='tf-part-item'>
							귀:
							<<listbox "_cow.ears" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "검은 점박이" "spotted black">>
								<<option "갈색 점박이" "spotted brown">>
							<</listbox>>
						</div>
					<</if>>
					<<if _cow.tail isnot "disabled">>
						<div class='tf-part-item'>
							꼬리:
							<<listbox "_cow.tail" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "검은색" "black">>
							<</listbox>>
						</div>
					<</if>>
					<br>
				<</if>>
			</div>
			<div class='tf-wolf'>
				<<if $wolfgirl gt 1>>
					__늑대__
					<br>
					<<if _wolf.ears isnot "disabled">>
						<div class='tf-part-item'>
							귀:
							<<listbox "_wolf.ears" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "야성" "feral">>
							<</listbox>>
						</div>
					<</if>>
					<<if _wolf.tail isnot "disabled">>
						<div class='tf-part-item'>
							꼬리:
							<<listbox "_wolf.tail" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
								<<option "야성" "feral">>
							<</listbox>>
						</div>
					<</if>>
					<br>
					<<if _wolf.cheeks isnot "disabled">>
						<div class='tf-part-item'>
							뺨:
							<<listbox "_wolf.cheeks" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "야성" "feral">>
							<</listbox>>
						</div>
					<</if>>
					<<if _wolf.pubes isnot "disabled" and $pbdisable is "f">>
						<div class='tf-part-item'>
							음모:
							<<listbox "_wolf.pubes" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<br>
					<<if _wolf.pits isnot "disabled" and $pbdisable is "f">>
						<div class='tf-part-item'>
							겨드랑이 털:
							<<listbox "_wolf.pits" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<br>
				<</if>>
			</div>
			<div class='tf-bird'>
				<<if $harpy gt 1>>
					__새__
					<br>
					<<if _bird.eyes isnot "disabled">>
						<div class='tf-part-item'>
							눈:
							<<listbox "_bird.eyes" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _bird.malar isnot "disabled">>
						<div class='tf-part-item'>
							뺨 줄무늬:
							<<listbox "_bird.malar" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _bird.plumage isnot "disabled">>
						<div class='tf-part-item'>
							깃털:
							<<listbox "_bird.plumage" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _bird.tail isnot "disabled">>
						<div class='tf-part-item'>
							꼬리:
							<<listbox "_bird.tail" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _bird.wings isnot "disabled">>
						<div class='tf-part-item'>
							날개:
							<<listbox "_bird.wings" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
						<br>
					<</if>>
					<<if _bird.pubes isnot "disabled" and $pbdisable is "f">>
						<div class='tf-part-item'>
							음모:
							<<listbox "_bird.pubes" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<br>
				<</if>>
			</div>
			<div class='tf-fox'>
				<<if $fox gt 1>>
					__Fox__
					<br>
					<<if _fox.ears isnot "disabled">>
						<div class='tf-part-item'>
							귀:
							<<listbox "_fox.ears" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _fox.tail isnot "disabled">>
						<div class='tf-part-item'>
							꼬리:
							<<listbox "_fox.tail" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<<if _fox.cheeks isnot "disabled">>
						<div class='tf-part-item'>
							뺨:
							<<listbox "_fox.cheeks" autoselect>>
								<<option "숨기기" "hidden">>
								<<option "기본값" "default">>
							<</listbox>>
						</div>
					<</if>>
					<br>
				<</if>>
			</div>
			<<set $_chimeraOptions to {
				"demoncat_tail" : !["disabled", "hidden"].includesAny(_demon.tail, _cat.tail),
				"demonharpy_wings" : !["disabled", "hidden"].includesAny(_demon.wings, _bird.wings)
			}>>
			<<set $_chimeraEnabled to Object.values($_chimeraOptions).some(o => o) ? "" : " hide">>
			<div @class="'chimera' + $_chimeraEnabled">
				__키메라__
				<<if $_chimeraOptions.demoncat_tail>>
					/* Using demon cat chimera tail. */
					<div class='tf-part-item'>
						악마 고양이 꼬리:
						<<listbox "$chimera.demoncat.tail" autoselect>>
							<<option "보이기" true>>
							<<option "숨기기" false>>
						<</listbox>>
					</div>
				<</if>>
				<<if $_chimeraOptions.demonharpy_wings>>
					/* Using demon harpy chimera wings. */
					<div class='tf-part-item'>
						악마 하피 날개:
						<<listbox "$chimera.demonharpy.wings" autoselect>>
							<<option "보이기" true>>
							<<option "숨기기" false>>
						<</listbox>>
					</div>
				<</if>>
			</div>
			<div class="no-numberify">
				<<if !["demon", "cow"].every(transform => T[transform].horns is "disabled")>>
					<<switch $hornslayer>>
						<<case "front">>
							<<link "뿔 위로 모자를 우선적으로 표시한다">>
								<<run State.setVar("$hornslayer", "back")>>
								<<run Engine.show()>>
							<</link>>
						<<case "back">>
							<<link "모자 위로 뿔을 우선적으로 표시한다">>
								<<run State.setVar("$hornslayer", "front")>>
								<<run Engine.show()>>
							<</link>>
						<<default>>
							<<link "모자 위로 뿔을 우선적으로 표시한다">>
								<<run State.setVar("$hornslayer", "front")>>
								<<run Engine.show()>>
							<</link>>
					<</switch>>
					<br>
				<</if>>
				<<if !["demon", "cat", "cow", "wolf", "bird", "fox"].every(transform => T[transform].tail is "disabled")>>
					<<switch $taillayer>>
						<<case "front">>
							<<link "꼬리를 뒤로 밀어놓는다">>
								<<run State.setVar("$taillayer", "back")>>
								<<run Engine.show()>>
							<</link>>
						<<case "back">>
							<<link "꼬리를 앞으로 움직인다">>
								<<run State.setVar("$taillayer", "front")>>
								<<run Engine.show()>>
							<</link>>
						<<default>>
							<<link "꼬리를 뒤로 밀어놓는다">>
								<<run State.setVar("$taillayer", "back")>>
								<<run Engine.show()>>
							<</link>>
					<</switch>>
					<br>
				<</if>>
				<<if !["angel", "fallen", "demon", "bird"].every(transform => T[transform].wings is "disabled")>>
					<<switch $wingslayer>>
						<<case "front">>
							<<link "날개를 뒤로 밀어놓는다">>
								<<run State.setVar("$wingslayer", "back")>>
								<<run Engine.show()>>
							<</link>>
						<<case "back">>
							<<link "날개를 앞으로 움직인다">>
								<<run State.setVar("$wingslayer", "front")>>
								<<run Engine.show()>>
							<</link>>
						<<default>>
							<<link "날개를 뒤로 밀어놓는다">>
								<<run State.setVar("$wingslayer", "back")>>
								<<run Engine.show()>>
							<</link>>
					<</switch>>
					<br>
				<</if>>
			</div>
		</div>
		<<if _isMenuEnabled>>
			<div id="transformations-colour-selector" class='list sticky centre'>
				<<set _options to ['ffffff', 'ff0000', '00ff00', '0000ff', '590099', '000000']>>
				<<gencoloursquares _options>>
				<<gencolourpicker>>
			</div>
		<</if>>
	</div>
	<<link [[확인|$passage]]>>
		<<set $mirrorMenu to "transformation">>
		<<if $transformationParts.cat.heterochromia is "hidden">>
			<<catHeterochromiaTF "hide">>
		<<elseif $cat gte 7 and $cat lte 10>>
			<<catHeterochromiaTF `$cat - 7`>>
		<</if>>
	<</link>>
	<!-- Attach an event to every listbox item to update the PC on the sidebar. -->
	<<script>>
	jQuery('.passage').on('change', 'select.macro-listbox', function (e) {
		Wikifier.wikifyEval('<<updatesidebarimg>>');
	});
	<</script>>
<</widget>>

<<widget "mirrorDebug">>
	<<link "뒤로">><<replace #mirror>><<mirrorMenu>><</replace>><<numberify "#passages > .passage">><<unset $mirrorMenu>><</link>>
	<br><br>
	<br>
	<<link "<<<">><<set $hairlength -= 1000>><<clamp>><<replace "#statshairlength">><<print Math.trunc($hairlength)>><</replace>><</link>> |
	<<link "<<">><<set $hairlength -= 100>><<clamp>><<replace "#statshairlength">><<print Math.trunc($hairlength)>><</replace>><</link>> |
	<<link "<">><<set $hairlength -= 10>><<clamp>><<replace "#statshairlength">><<print Math.trunc($hairlength)>><</replace>><</link>> |
	머리카락 길이: <span id="statshairlength"><<print Math.trunc($hairlength)>></span>
	| <<link ">">><<set $hairlength += 10>><<clamp>><<replace "#statshairlength">><<print Math.trunc($hairlength)>><</replace>><</link>>
	| <<link ">>">><<set $hairlength += 100>><<clamp>><<replace "#statshairlength">><<print Math.trunc($hairlength)>><</replace>><</link>>
	| <<link ">>>">><<set $hairlength += 1000>><<clamp>><<replace "#statshairlength">><<print Math.trunc($hairlength)>><</replace>><</link>>
	<br>
	<<link "<<<">><<set $fringelength -= 1000>><<clamp>><<replace "#statsfringelength">><<print Math.trunc($fringelength)>><</replace>><</link>> |
	<<link "<<">><<set $fringelength -= 100>><<clamp>><<replace "#statsfringelength">><<print Math.trunc($fringelength)>><</replace>><</link>> |
	<<link "<">><<set $fringelength -= 10>><<clamp>><<replace "#statsfringelength">><<print Math.trunc($fringelength)>><</replace>><</link>> |
	앞머리 길이: <span id="statsfringelength"><<print Math.trunc($fringelength)>></span>
	| <<link ">">><<set $fringelength += 10>><<clamp>><<replace "#statsfringelength">><<print Math.trunc($fringelength)>><</replace>><</link>>
	| <<link ">>">><<set $fringelength += 100>><<clamp>><<replace "#statsfringelength">><<print Math.trunc($fringelength)>><</replace>><</link>>
	| <<link ">>>">><<set $fringelength += 1000>><<clamp>><<replace "#statsfringelength">><<print Math.trunc($fringelength)>><</replace>><</link>>
	<br>
	머리카락 색깔 (<<print $haircolour>>):
	<<link "검은색">><<set $haircolour to "black">><<goto "Wardrobe">><</link>> |
	<<link "갈색">><<set $haircolour to "brown">><<goto "Wardrobe">><</link>> |
	<<link "빨간색">><<set $haircolour to "red">><<goto "Wardrobe">><</link>> |
	<<link "생강색">><<set $haircolour to "ginger">><<goto "Wardrobe">><</link>> |
	<<link "금발">><<set $haircolour to "blond">><<goto "Wardrobe">><</link>> |
	<<link "초록색">><<set $haircolour to "green">><<goto "Wardrobe">><</link>> |
	<<link "파란색">><<set $haircolour to "blue">><<goto "Wardrobe">><</link>> |
	<<link "보라색">><<set $haircolour to "purple">><<goto "Wardrobe">><</link>>

	<br><br>

	<<link "하루를 건너뛴다">><<pass 23 hours>><<effects>><<goto "Mirror">><</link>>
	<br>
<</widget>>